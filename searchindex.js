Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/min_max_clamp", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "faq", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.md", "API/algorithms/std-algorithms/all/StdAllOf.md", "API/algorithms/std-algorithms/all/StdAnyOf.md", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.md", "API/algorithms/std-algorithms/all/StdCountIf.md", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.md", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.md", "API/algorithms/std-algorithms/all/StdMoveBackward.md", "API/algorithms/std-algorithms/all/StdNoneOf.md", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.md", "API/algorithms/std-algorithms/all/StdReverseCopy.md", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.md", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/min_max_clamp.rst", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.md", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "faq.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "Minimum/maximum operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "FAQ", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 131, 132, 134, 135, 180, 201], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 121, 127, 129, 131, 132, 134, 136, 137, 151, 159, 164, 165, 168, 170, 180, 184, 185, 187, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 212, 222, 223, 228, 229, 232, 234], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 94, 134, 135, 148, 150, 184, 185, 187, 188, 191, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 216, 220, 222, 224], "sort": [0, 3, 36, 37, 82, 208], "nest": [0, 77, 87, 92, 94, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 174, 175, 188, 191, 198, 199, 200, 201, 228, 233, 235, 237], "polici": [0, 72, 83, 87, 140, 141, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 189, 193, 195, 196, 200, 208, 228, 231, 233], "team": [0, 72, 85, 87, 94, 140, 141, 142, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 191, 196, 198, 199, 200, 207, 220, 221, 223, 224, 234, 235], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 92, 94, 129, 131, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 168, 169, 187, 189, 190, 191, 195, 197, 200, 201, 204, 205, 210, 211, 224, 231, 234, 237], "level": [0, 87, 88, 94, 149, 151, 152, 188, 189, 194, 197, 200, 204, 205, 206, 210, 224], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 129, 131, 132, 138, 139, 143, 144, 145, 146, 148, 154, 156, 158, 159, 160, 164, 169, 171, 172, 173, 179, 180, 181, 184, 185, 186, 202, 203, 204, 208, 232, 235], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 189, 213, 217, 232, 236], "file": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 195, 209, 211, 217, 223, 228, 236], "kokkos_cor": [1, 2, 76, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 188, 193, 195, 208, 212, 217, 230, 235, 236], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 193, 195, 202, 208, 212, 217, 227, 228, 230, 232, 235, 236], "kokkos_complex": [1, 208], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 135, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 167, 169, 171, 172, 173, 177, 178, 179, 180, 181, 182, 188, 189, 191, 192, 193, 194, 196, 200, 202, 204, 207, 217, 227, 228, 230], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 139, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 217, 218, 229, 232, 233, 235], "struct": [1, 2, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 48, 51, 52, 56, 67, 69, 72, 81, 84, 94, 118, 119, 121, 124, 129, 130, 132, 134, 135, 140, 141, 142, 144, 145, 160, 171, 174, 175, 188, 191, 192, 193, 194, 196, 200, 204, 208, 227, 232, 234, 235], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 51, 52, 56, 75, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 164, 174, 175, 176, 192, 193, 194, 196, 200, 204, 229], "static": [1, 74, 75, 76, 77, 85, 87, 148, 150, 152, 174, 175, 176, 180, 184, 185, 192, 194, 197, 204, 205, 208, 217, 237], "gen_func_typ": 1, "max": [1, 72, 74, 88, 102, 105, 107, 113, 116, 117, 118, 119, 121, 122, 124, 139, 145, 153, 155, 157, 167, 187, 191, 194, 200, 202, 208, 211, 236], "return": [1, 2, 13, 14, 19, 20, 29, 38, 42, 45, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 94, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 139, 144, 150, 151, 152, 154, 156, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 172, 173, 179, 180, 184, 185, 186, 187, 188, 192, 193, 194, 196, 199, 202, 204, 208, 217, 226, 227, 228, 229, 230, 231, 234], "type_valu": 1, "draw": [1, 72], "gen": [1, 184, 185], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 134, 135, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 191, 192, 193, 194, 196, 198, 200, 202, 203, 208, 217, 227, 228, 229, 231, 233, 235], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 94, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 167, 179, 194, 199, 200, 203, 204, 223, 224, 228], "start": [1, 18, 24, 33, 50, 51, 60, 66, 69, 71, 72, 74, 82, 94, 129, 135, 136, 144, 145, 146, 148, 149, 150, 152, 170, 184, 188, 191, 194, 195, 196, 200, 204, 205, 220, 224, 227, 229, 231, 234], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 133, 134, 136, 145, 146, 148, 149, 150, 152, 154, 156, 158, 189, 195, 204, 227, 228, 234, 236], "function": [1, 2, 4, 30, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 133, 134, 136, 137, 139, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 167, 169, 170, 171, 172, 176, 188, 189, 192, 193, 194, 195, 196, 197, 201, 202, 203, 211, 215, 220, 225, 226, 227, 228, 229, 231, 233], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 171, 172, 180, 184, 185, 190, 192, 194, 200, 202, 203, 213, 217, 227, 232], "all": [1, 2, 13, 25, 30, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 92, 94, 96, 121, 132, 133, 135, 136, 137, 143, 144, 147, 151, 152, 171, 173, 176, 179, 180, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 216, 220, 222, 223, 224, 228, 230, 234, 235], "list": [1, 2, 72, 82, 97, 138, 139, 148, 179, 181, 182, 187, 195, 197, 199, 204, 205, 213, 216, 220, 221, 222, 223, 224, 228, 229, 234], "here": [1, 39, 40, 41, 72, 84, 87, 129, 133, 134, 135, 147, 152, 187, 194, 195, 198, 199, 200, 202, 204, 207, 212, 216, 223, 224, 229, 231, 235], "ar": [1, 2, 4, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 94, 97, 107, 116, 117, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 153, 155, 157, 165, 166, 167, 168, 171, 172, 173, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 213, 216, 218, 220, 221, 222, 223, 224, 226, 227, 229, 231, 233, 234, 235, 236], "part": [1, 72, 83, 87, 97, 121, 129, 135, 151, 164, 166, 187, 188, 189, 196, 197, 201, 202, 204, 220, 222, 224, 233], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 95, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 159, 163, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 207, 209, 211, 212, 213, 215, 217, 221, 225, 226, 229, 230, 231, 232, 233, 235, 237], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 136, 137, 138, 139, 159, 162, 166, 167, 184, 185, 186, 188, 192, 193, 196, 203, 204, 212], "char": [1, 2, 76, 86, 87, 121, 129, 132, 133, 134, 135, 144, 145, 146, 161, 163, 169, 173, 176, 180, 184, 185, 186, 192, 193, 195, 204, 217, 222, 232, 235], "short": [1, 200], "127": 1, "0xff": 1, "256": [1, 202, 234], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 121, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 168, 169, 171, 173, 176, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 198, 200, 202, 204, 208, 217, 226, 228, 229, 230, 231, 232, 233, 234, 235], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 121, 138, 189, 197, 199, 200, 204, 220], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 137, 138, 139, 160, 174, 175, 176, 199, 200, 202, 229, 232], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 104, 110, 120, 121, 130, 131, 132, 134, 136, 144, 145, 146, 149, 151, 152, 154, 156, 158, 159, 160, 163, 164, 165, 168, 173, 176, 179, 180, 184, 185, 186, 190, 192, 193, 202, 205, 211, 212, 213, 215, 216, 217, 222, 224, 226, 227, 228, 229, 234, 237], "0f": [1, 160], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 94, 129, 132, 133, 134, 138, 143, 145, 154, 156, 158, 162, 164, 170, 171, 179, 180, 184, 185, 186, 187, 191, 194, 196, 200, 202, 203, 204, 217, 226, 227, 228, 229, 230, 231], "0": [1, 2, 11, 18, 24, 33, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 94, 108, 109, 111, 121, 123, 129, 131, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 173, 174, 175, 176, 179, 180, 184, 185, 186, 187, 189, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 211, 213, 216, 217, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235], "complex": [1, 72, 82, 87, 88, 96, 121, 189, 190, 191, 194, 199, 202, 210, 212, 216], "where": [1, 2, 4, 11, 12, 17, 22, 28, 30, 32, 35, 36, 37, 40, 42, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 94, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 144, 153, 157, 159, 163, 173, 180, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 216, 220, 224, 226, 227, 228, 231, 232, 233, 234, 235], "maximum": [1, 3, 72, 77, 78, 82, 96, 102, 104, 105, 107, 112, 113, 116, 117, 118, 119, 129, 152, 191, 194], "valu": [1, 2, 4, 11, 17, 19, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 129, 131, 134, 135, 136, 139, 144, 145, 146, 150, 151, 152, 154, 156, 158, 160, 163, 167, 172, 173, 179, 180, 186, 187, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 211, 229, 232, 235], "xorshift": 1, "given": [1, 4, 66, 75, 78, 79, 81, 84, 85, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 128, 129, 136, 148, 150, 151, 152, 166, 167, 171, 173, 176, 189, 194, 195, 196, 200, 201, 202, 203, 204, 205, 223, 229, 233, 234], "follow": [1, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 91, 92, 97, 121, 129, 135, 138, 151, 173, 180, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 202, 203, 204, 205, 208, 211, 212, 213, 216, 218, 222, 224, 226], "enum": [1, 129, 135, 204], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 121, 130, 134, 146, 151, 153, 155, 157, 159, 160, 161, 163, 169, 173, 176, 177, 178, 179, 180, 184, 190, 191, 193, 202, 211, 213, 215, 216, 217, 222, 224, 234, 235, 237], "int64_t": [1, 78, 85, 146, 148, 150, 184, 185], "kokkos_random": [1, 2, 208], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 91, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 132, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 159, 160, 167, 172, 173, 174, 175, 176, 180, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 210, 213, 220, 221, 222, 223, 224, 227, 228, 232, 234, 235], "structur": [1, 4, 72, 76, 94, 97, 131, 180, 195, 199, 201, 203, 204, 225, 226, 228, 229, 233, 234, 237], "necessari": [1, 75, 76, 87, 91, 94, 144, 180, 189, 190, 194, 196, 200, 204, 205, 220, 224, 226, 229, 235], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 135, 150, 151, 180, 184, 186, 188, 191, 194, 197, 199, 201, 203, 204, 216, 220, 222, 223, 224, 227], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 94, 131, 184, 185, 188, 189, 194, 197, 198, 200, 202, 203, 204, 211, 220, 221, 223, 224, 228, 229, 232, 233, 234, 235, 237], "vigna": 1, "sebastiano": 1, "2014": [1, 199, 206], "an": [1, 2, 4, 11, 18, 22, 24, 25, 28, 29, 33, 34, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 92, 94, 107, 115, 121, 123, 127, 129, 133, 134, 135, 136, 138, 143, 144, 145, 146, 148, 150, 151, 152, 155, 159, 160, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 207, 210, 212, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 93, 96, 127, 128, 136, 137, 138, 139, 159, 183, 188, 194, 195, 202, 208, 211, 216, 224, 226], "explor": [1, 87, 197, 220], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 129, 131, 145, 151, 160, 162, 171, 173, 179, 180, 184, 189, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 213, 217, 220, 224, 229, 231, 232, 233, 235], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 139, 144, 145, 147, 150, 151, 152, 159, 165, 168, 180, 189, 191, 193, 194, 195, 198, 199, 200, 203, 204, 205, 207, 211, 212, 216, 218, 224, 235], "http": [1, 84, 138, 206, 210, 222], "arxiv": 1, "org": [1, 84, 138, 189, 206], "ab": [1, 138, 184], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 91, 94, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 151, 152, 157, 159, 163, 164, 167, 169, 172, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 211, 212, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 236], "themselv": [1, 94, 199, 200, 201, 220], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 91, 94, 121, 129, 131, 132, 139, 143, 144, 151, 153, 154, 155, 156, 172, 176, 177, 178, 180, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 212, 216, 220, 222, 223, 224, 226, 229, 232, 233, 234, 235], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 69, 75, 77, 78, 81, 87, 94, 121, 129, 131, 134, 135, 136, 150, 159, 173, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 217, 220, 221, 223, 224, 226, 227, 228, 229, 235, 236], "compon": [1, 164, 176, 199, 219, 223], "state": [1, 72, 75, 81, 87, 133, 194, 200, 202, 204], "pool": [1, 72, 194, 204], "actual": [1, 77, 129, 135, 147, 151, 152, 180, 187, 194, 196, 199, 200, 201, 204, 205, 211, 222, 223, 224], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 132, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 162, 171, 172, 173, 174, 175, 176, 179, 180, 187, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 213, 217, 220, 224, 227, 231, 233, 234, 235], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 88, 97, 127, 128, 180, 189, 199, 205, 210, 221, 229, 237], "so": [1, 2, 82, 87, 91, 94, 129, 187, 188, 189, 194, 195, 196, 198, 199, 200, 202, 203, 204, 207, 216, 221, 222, 224, 227, 231, 235], "each": [1, 2, 4, 11, 23, 30, 31, 32, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 94, 138, 144, 145, 152, 153, 155, 157, 159, 160, 174, 175, 176, 180, 187, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 218, 220, 222, 223, 224, 226, 228, 229, 232, 234, 235], "activ": [1, 23, 24, 53, 56, 88, 189, 194, 200, 205, 211, 224], "abl": [1, 76, 94, 129, 135, 180, 181, 187, 194, 197, 199, 202, 204, 208, 229], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 132, 136, 151, 159, 160, 163, 177, 180, 187, 188, 189, 191, 194, 195, 196, 197, 199, 200, 203, 204, 205, 220, 221, 223, 224, 226, 233], "own": [1, 75, 159, 187, 203, 204, 205, 220, 222, 229], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 75, 76, 77, 79, 81, 82, 87, 91, 94, 121, 129, 132, 133, 134, 135, 138, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 172, 173, 174, 175, 176, 177, 178, 180, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 210, 211, 212, 213, 216, 218, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 94, 129, 131, 134, 135, 145, 147, 151, 152, 153, 155, 157, 172, 174, 175, 176, 180, 181, 187, 188, 189, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 220, 223, 230, 231, 233, 235], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 159, 169, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 220, 221, 224, 227, 229, 230, 231, 232, 233, 235], "independ": [1, 72, 99, 135, 152, 200, 204, 220, 224, 237], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 92, 97, 151, 159, 167, 172, 173, 180, 188, 189, 194, 197, 199, 202, 204, 212, 217, 220, 222, 228, 229, 230, 231], "note": [1, 37, 76, 77, 78, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 143, 144, 150, 151, 152, 159, 173, 180, 187, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 220, 224, 227, 231, 234, 235], "contrast": [1, 136, 149, 154, 156, 158, 163, 194, 204, 220], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 126, 140, 141, 142, 185, 189, 197, 199, 224, 227, 235], "collect": [1, 151, 194, 197, 200, 201, 203, 220, 224, 229, 232], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 113, 115, 117, 118, 121, 124, 126, 127, 128, 129, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 169, 172, 173, 176, 177, 178, 180, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 209, 216, 217, 220, 224, 228, 229, 231, 233], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 92, 121, 126, 127, 128, 129, 131, 133, 135, 137, 139, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 172, 173, 177, 178, 180, 184, 185, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 216, 217, 220, 222, 223, 224, 230, 235], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 94, 121, 129, 130, 131, 134, 135, 139, 144, 145, 148, 149, 150, 151, 152, 157, 158, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 209, 210, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 233, 235], "call": [1, 2, 11, 17, 21, 22, 28, 30, 35, 36, 40, 42, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 94, 104, 121, 127, 128, 129, 131, 132, 133, 134, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 169, 170, 171, 172, 173, 177, 178, 180, 184, 185, 186, 187, 189, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 212, 224, 227, 229, 231, 235], "insid": [1, 2, 81, 85, 87, 94, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 166, 188, 189, 194, 196, 199, 200, 204, 233, 234, 235, 236], "condit": [1, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 76, 163, 180, 187, 194, 196, 199, 200, 213, 223, 231], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 87, 88, 92, 129, 131, 135, 137, 138, 160, 163, 165, 168, 172, 173, 180, 189, 195, 196, 197, 198, 200, 204, 205, 212, 223, 224, 225, 229, 230], "public": [1, 75, 76, 77, 79, 81, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 129, 135, 145, 149, 151, 152, 154, 156, 158, 164, 166, 176, 186, 188, 193, 198, 200, 207, 217, 220, 229, 233, 235], "typedef": [1, 75, 76, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 149, 150, 151, 152, 154, 156, 158, 164, 170, 174, 175, 176, 188, 191, 192, 193, 194, 196, 200, 204, 227, 231], "device_typ": [1, 75, 76, 77, 81, 87, 129, 135, 172, 180, 204], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 94, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 135, 137, 138, 143, 144, 145, 146, 148, 150, 151, 159, 161, 163, 164, 169, 170, 173, 177, 178, 180, 184, 186, 187, 188, 193, 194, 196, 198, 200, 202, 204, 208, 212, 217, 227, 229, 230, 231, 233, 234, 235], "init": [1, 22, 34, 67, 72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 193, 229], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": 1, "us": [1, 2, 4, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 168, 171, 172, 177, 178, 179, 180, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 231, 232, 233, 235, 236], "establish": [1, 224, 228], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 93, 148, 150, 189, 195, 197, 200, 202, 204, 211, 216, 222, 224], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 130, 131, 132, 133, 144, 145, 146, 160, 163, 164, 165, 168, 169, 173, 176, 180, 181, 184, 185, 186, 189, 190, 192, 193, 194, 196, 198, 199, 200, 215, 217, 220, 222, 224, 230, 231, 235], "make": [1, 75, 76, 87, 94, 136, 151, 180, 187, 188, 189, 191, 194, 198, 199, 200, 202, 205, 207, 220, 222, 227, 229, 230, 233, 235], "process": [1, 89, 135, 189, 195, 201, 202, 203, 205, 210, 219, 224], "platform": [1, 83, 184, 185, 210, 221, 223, 232], "determinist": [1, 48, 69, 201], "request": [1, 75, 77, 129, 140, 141, 142, 145, 151, 152, 194, 195, 199, 201, 207, 211, 220, 221, 222, 224], "lock": [1, 196, 199, 201, 202, 204], "guarante": [1, 75, 76, 79, 92, 94, 129, 135, 144, 145, 146, 166, 180, 188, 189, 196, 199, 200, 201, 202, 230, 234], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 94, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 134, 135, 138, 144, 145, 146, 147, 172, 180, 184, 185, 187, 189, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 220, 223, 224, 226, 227, 233, 234, 235], "privat": [1, 79, 87, 151, 164, 188, 190, 193, 194, 200, 220, 229], "get": [1, 75, 87, 94, 97, 133, 151, 152, 176, 187, 194, 195, 196, 198, 199, 202, 203, 205, 207, 220, 222, 232, 234, 235], "cuda": [1, 72, 75, 85, 87, 88, 93, 135, 148, 150, 152, 159, 173, 194, 195, 197, 200, 201, 202, 204, 210, 211, 216, 222, 223, 224, 230, 231], "involv": [1, 87, 147, 223, 228], "atom": [1, 72, 76, 81, 83, 99, 100, 101, 102, 103, 104, 105, 106, 180, 194, 196, 199, 201, 215, 234, 237], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 134, 136, 173, 180, 186, 187, 189, 194, 195, 199, 200, 201, 202, 204, 208, 211, 222, 231, 233], "upon": [1, 84, 87, 129, 143, 188, 197, 220], "complet": [1, 77, 94, 129, 143, 189, 190, 194, 199, 204, 205, 220, 224, 231, 234], "unlock": 1, "updat": [1, 72, 75, 82, 99, 100, 101, 102, 103, 104, 105, 106, 187, 189, 194, 200, 204, 216, 220, 222, 224, 229, 231, 234], "statu": 1, "onc": [1, 72, 94, 133, 134, 194, 195, 201, 204, 205, 211, 220, 229, 231], "again": [1, 87, 189, 196, 204, 205, 211, 224], "becom": [1, 59, 60, 79, 94, 135, 199, 220, 224, 228], "avail": [1, 74, 77, 81, 82, 87, 88, 97, 129, 131, 135, 136, 137, 138, 139, 152, 163, 184, 185, 189, 194, 197, 199, 200, 202, 204, 205, 220, 223, 224, 226, 228, 229], "within": [1, 2, 4, 79, 82, 92, 129, 134, 144, 145, 146, 148, 151, 189, 194, 199, 201, 204, 227, 228, 229], "select": [1, 72, 74, 91, 131, 162, 179, 186, 197, 199, 204, 216, 220, 223, 224, 234], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 91, 92, 94, 97, 118, 119, 121, 124, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 160, 163, 164, 167, 169, 171, 172, 173, 176, 180, 181, 182, 184, 186, 187, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 216, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235], "next": [1, 220, 222, 224, 231, 234], "step": [1, 4, 194, 196, 197, 202, 204, 220, 222, 223, 224, 229], "develop": [1, 91, 144, 194, 197, 199, 201, 204, 207, 210, 216, 221, 222, 223, 224], "functor": [1, 2, 11, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 48, 67, 69, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 184, 185, 194, 196, 199, 204, 228, 229, 231, 233], "desir": [1, 48, 67, 69, 77, 146, 159, 172, 189, 200, 204, 220, 222, 223, 224], "type": [1, 11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 92, 94, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 135, 136, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 169, 171, 172, 173, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 210, 215, 217, 222, 224, 227, 228, 229, 232, 235], "devicetyp": [1, 129, 135], "respect": [1, 76, 121, 138, 172, 173, 177, 178, 180, 191, 194, 199, 204], "x": [1, 72, 137, 138, 176, 177, 178, 184, 186, 191, 196, 200, 202, 204, 210, 217, 227, 231], "idx": [1, 227], "just": [1, 2, 75, 87, 88, 94, 129, 135, 147, 173, 176, 187, 195, 200, 202, 204, 205, 207, 211, 222, 226, 229], "give": [1, 88, 94, 188, 195, 196, 200, 201, 202, 204, 222], "argument": [1, 11, 17, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 92, 94, 97, 130, 131, 132, 134, 138, 143, 145, 146, 151, 152, 154, 156, 158, 163, 171, 172, 173, 179, 180, 181, 184, 185, 186, 188, 193, 194, 200, 203, 204, 208, 212, 228, 230], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 184, 185, 208], "urand": 1, "For": [1, 2, 59, 75, 76, 94, 121, 129, 135, 136, 139, 150, 153, 155, 157, 159, 173, 179, 180, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 218, 220, 224, 228, 229, 230, 235], "32": [1, 2, 194, 196, 204, 224], "bit": [1, 72, 74, 87, 89, 180, 185, 198, 200, 202, 203, 204, 235], "unsign": [1, 74, 75, 76, 77, 80, 102, 105, 136, 180, 203, 204, 230], "integ": [1, 59, 60, 75, 76, 81, 85, 94, 136, 138, 148, 150, 179, 180, 194, 200, 202, 204, 227], "three": [1, 75, 87, 138, 143, 187, 188, 189, 194, 197, 199, 200, 202, 204, 205, 220, 223, 228], "option": [1, 72, 75, 76, 81, 85, 94, 129, 131, 144, 145, 146, 148, 180, 188, 189, 191, 194, 195, 196, 197, 200, 204, 205, 220, 222, 223, 224, 228, 230, 232, 233], "shown": [1, 55, 87, 121, 194, 199, 228], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 92, 94, 127, 129, 134, 151, 159, 160, 174, 179, 180, 184, 185, 186, 189, 191, 194, 195, 196, 198, 199, 200, 204, 207, 208, 220, 227, 228, 231, 235], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 130, 131, 135, 140, 141, 142, 145, 148, 150, 151, 152, 160, 164, 170, 173, 174, 175, 176, 177, 178, 180, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 205, 211, 217, 220, 224, 228, 232, 235], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 94, 129, 148, 149, 151, 153, 154, 155, 156, 157, 158, 184, 185, 187, 191, 194, 195, 200, 202, 203, 204, 205, 223, 226, 228, 233], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 94, 132, 145, 152, 180, 188, 195, 196, 200, 201, 202, 203, 204, 213, 216, 220, 223, 229], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 94, 97, 129, 130, 131, 143, 160, 164, 169, 172, 173, 187, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 210, 213, 217, 220, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237], "defin": [1, 42, 72, 76, 78, 83, 87, 88, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 150, 151, 154, 156, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 180, 182, 184, 185, 189, 192, 193, 194, 196, 199, 200, 204, 208, 223, 224, 226, 227, 232, 236], "abov": [1, 86, 129, 136, 138, 187, 189, 194, 197, 200, 202, 203, 204, 213, 224, 228, 229, 234], "And": [1, 72, 107, 196, 206, 233], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 94, 121, 129, 135, 139, 144, 145, 151, 152, 160, 165, 168, 176, 180, 187, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 216, 220, 221, 222, 223, 224, 228, 231, 233], "64": [1, 2, 200, 202, 204], "latter": [1, 94, 145, 180, 194, 199, 204, 224], "cover": [1, 76, 180, 200, 222, 223], "user": [1, 75, 76, 77, 81, 87, 90, 94, 127, 129, 130, 133, 134, 144, 145, 146, 148, 152, 180, 182, 189, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 220, 223, 229, 230, 234, 235, 236], "more": [1, 76, 77, 78, 87, 94, 121, 132, 135, 144, 147, 180, 187, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 212, 228, 233, 234], "other": [1, 46, 75, 76, 77, 78, 82, 87, 92, 94, 134, 135, 144, 145, 146, 151, 153, 154, 155, 156, 159, 163, 172, 173, 174, 175, 176, 187, 189, 194, 196, 198, 199, 200, 201, 202, 203, 205, 210, 211, 213, 216, 217, 220, 222, 224, 227, 229, 230, 233, 235], "scalar": [1, 75, 76, 77, 78, 82, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 145, 164, 173, 180, 184, 185, 187, 190, 191, 193, 194, 196, 200, 212], "uint64_t": [1, 184, 185], "int32_t": [1, 184, 185, 186], "normal": [1, 72, 187, 189, 200, 204, 224], "distribut": [1, 72, 197, 203, 206, 213, 224, 229], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 132, 133, 134, 145, 146, 151, 162, 171, 172, 174, 175, 176, 177, 178, 179, 181, 187, 189, 191, 193, 194, 195, 197, 199, 200, 202, 208, 211, 215, 217, 224, 226, 227, 228, 229, 230, 231, 237], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 184, 185, 191, 194, 196, 198, 200, 204, 235], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 94, 121, 130, 131, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 161, 163, 169, 172, 173, 176, 177, 178, 180, 182, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 213, 217, 220, 222, 223, 224, 227, 230, 232, 235, 236], "main": [1, 2, 76, 86, 97, 121, 130, 131, 132, 133, 134, 144, 145, 146, 163, 166, 169, 173, 176, 180, 184, 185, 186, 189, 192, 193, 195, 202, 204, 205, 217, 220, 227, 230, 231, 235], "argc": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 163, 169, 173, 176, 180, 184, 185, 186, 192, 193, 195, 217, 235], "argv": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 163, 169, 173, 176, 180, 184, 185, 186, 192, 193, 195, 217, 235], "scopeguard": [1, 72, 134, 208], "guard": [1, 132], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 152, 180, 187, 192, 193, 194, 195, 228], "1000000": [1, 173], "count": [1, 7, 13, 14, 27, 45, 62, 74, 76, 77, 87, 94, 136, 144, 145, 146, 149, 154, 156, 158, 180, 187, 194, 200, 203, 233], "parallel_reduc": [1, 72, 79, 87, 90, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 141, 143, 147, 149, 152, 153, 154, 155, 156, 157, 158, 191, 192, 193, 194, 200, 201, 208, 228, 229, 230], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 121, 129, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 163, 169, 180, 187, 191, 192, 193, 194, 196, 198, 200, 204, 217, 226, 227, 228, 229, 231, 233, 235], "local_count": 1, "acquir": [1, 76, 87, 180, 195, 196, 201, 204], "engin": [1, 189, 199, 201, 204, 206, 213], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 94, 131, 132, 137, 139, 144, 145, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 172, 173, 179, 186, 191, 194, 202, 203, 212, 226, 227, 228, 234, 235], "drand": 1, "y": [1, 184, 196, 202, 204, 227, 231], "do": [1, 2, 24, 25, 46, 53, 56, 69, 75, 83, 87, 94, 99, 100, 101, 129, 132, 133, 135, 143, 147, 180, 187, 188, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 205, 207, 209, 212, 220, 222, 227, 229, 230, 231, 233], "forget": 1, "releas": [1, 86, 87, 88, 133, 169, 188, 189, 194, 197, 199, 216, 221, 222, 224], "printf": [1, 94, 96, 121, 144, 145, 146, 176, 184, 185, 191, 192, 193, 235], "pi": [1, 89, 137, 212], "f": [1, 87, 94, 138, 151, 152, 160, 208, 222, 227, 228, 234], "n": [1, 2, 18, 24, 31, 33, 63, 64, 74, 75, 77, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 169, 173, 176, 177, 178, 180, 184, 191, 192, 193, 194, 196, 200, 202, 203, 204, 210, 230, 231, 233, 235], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 129, 130, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 163, 165, 168, 169, 176, 179, 180, 192, 193, 202, 203, 206, 211, 215, 217, 220, 222, 224, 228, 230, 237], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 208], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 129, 171, 172, 179, 180, 204], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 127, 128, 174, 175, 176, 177, 178, 180, 184, 185, 186, 194, 200, 202, 203, 204, 227, 235], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 127, 128, 148, 149, 150, 152, 154, 156, 158, 204, 220, 224, 227, 228, 236], "parallel": [2, 72, 77, 81, 83, 85, 87, 91, 92, 121, 129, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 187, 189, 191, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 210, 215, 226, 229, 231, 233, 234, 235, 237], "teampolici": [2, 72, 76, 85, 87, 94, 129, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 180, 191, 194, 196, 200], "kernel": [2, 11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 94, 144, 148, 150, 151, 152, 159, 169, 173, 180, 187, 189, 196, 199, 200, 201, 204, 205, 210, 211, 212, 224, 230, 234, 237], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 90, 94, 108, 109, 110, 111, 120, 121, 123, 145, 146, 151, 152, 169, 180, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 206, 211, 217, 220, 221, 223, 227, 228, 232, 237], "teamthreadrang": [2, 72, 85, 87, 144, 145, 157, 158, 191, 194, 196], "threadvectorrang": [2, 72, 85, 87, 144, 145, 146, 194], "kokkos_nestedsort": 2, "teammemb": [2, 94, 152, 194], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 57, 72, 75, 84, 87, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 139, 143, 145, 151, 152, 159, 164, 172, 177, 178, 180, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 200, 201, 202, 203, 205, 208, 216, 220, 222, 234], "compar": [2, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 99, 100, 131, 180, 200, 202, 204, 216, 222, 224], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 81, 82, 86, 87, 88, 131, 132, 152, 189, 194, 195, 196, 220, 228], "entir": [2, 75, 87, 149, 176, 200, 201, 203, 205, 220, 223, 224, 233, 235], "thei": [2, 75, 78, 87, 88, 94, 129, 132, 133, 135, 137, 144, 147, 159, 173, 187, 188, 194, 198, 200, 201, 202, 204, 216, 220, 221, 222, 223, 224, 226, 229, 233, 235, 236], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 94, 128, 129, 132, 133, 134, 144, 145, 146, 152, 159, 161, 169, 180, 184, 185, 187, 188, 189, 190, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 211, 212, 213, 216, 218, 220, 222, 224, 228, 229, 231, 232, 233, 234], "top": [2, 94, 188, 189, 194, 218, 224], "lambda": [2, 88, 94, 143, 144, 145, 194, 196, 211, 227, 228, 233], "vector": [2, 72, 73, 85, 88, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 184, 185, 186, 191, 200, 201, 204, 208, 211, 227, 232], "lane": [2, 72, 85, 149, 155, 156, 157, 158, 184, 194, 201, 202], "either": [2, 75, 76, 80, 81, 85, 94, 113, 115, 117, 131, 144, 145, 151, 173, 177, 178, 180, 186, 188, 189, 192, 193, 194, 195, 200, 204, 205, 222, 224, 234, 236], "loop": [2, 85, 88, 94, 149, 150, 187, 196, 199, 202, 204, 211, 226, 228, 231, 233, 237], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 94, 135, 149, 178, 180, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 224, 235], "simultan": [2, 187], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 94, 145, 151, 187, 189, 192, 193, 200, 221, 235], "same": [2, 17, 18, 24, 28, 29, 31, 33, 34, 37, 39, 41, 44, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 132, 134, 138, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 172, 173, 180, 187, 189, 194, 195, 196, 199, 200, 202, 203, 204, 205, 222, 223, 224, 228, 229, 230, 232, 234, 235], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 121, 134, 145, 146, 159, 160, 162, 167, 173, 174, 175, 176, 178, 180, 194, 196, 201, 204, 225, 228, 229, 232], "It": [2, 71, 75, 76, 77, 78, 87, 128, 129, 130, 131, 132, 145, 149, 180, 184, 185, 187, 188, 189, 194, 196, 199, 200, 202, 203, 204, 210, 212, 220, 224, 232, 233], "equival": [2, 39, 40, 41, 70, 71, 78, 92, 129, 151, 179, 180, 194, 200, 202, 203, 204, 227, 232], "kei": [2, 81, 202, 229], "tupl": [2, 148, 232], "accord": [2, 35, 87, 102, 104, 105, 144, 145, 146], "commonli": [2, 199], "entri": [2, 75, 77, 80, 94, 192, 193, 196, 200, 203, 220, 226], "row": [2, 80, 191, 196, 203, 204], "cr": [2, 72, 80], "compress": [2, 80, 204, 229], "spars": [2, 204, 210, 223, 237], "matrix": [2, 191, 203, 204], "requir": [2, 75, 76, 77, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 149, 153, 154, 155, 156, 157, 158, 172, 180, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 204, 205, 208, 210, 219, 222, 224, 225, 228, 231, 232, 234], "extent": [2, 75, 76, 77, 78, 80, 129, 153, 155, 157, 173, 174, 175, 176, 177, 178, 179, 180, 187, 200, 204, 217, 220, 226, 227, 233], "version": [2, 72, 76, 84, 91, 129, 130, 131, 132, 134, 137, 138, 161, 163, 180, 188, 189, 195, 198, 200, 202, 205, 211, 217, 220, 222, 223, 224, 235], "take": [2, 76, 77, 78, 85, 87, 92, 94, 102, 104, 105, 129, 134, 135, 137, 145, 147, 152, 174, 175, 176, 187, 188, 193, 194, 195, 199, 200, 201, 202, 204, 208, 212, 217, 222, 224, 226, 228, 231, 237], "object": [2, 11, 22, 30, 75, 76, 81, 86, 87, 88, 107, 131, 132, 133, 134, 135, 136, 149, 151, 176, 180, 186, 189, 193, 194, 195, 196, 200, 202, 204, 208, 233, 235], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 146, 148, 149, 150, 154, 156, 158, 176, 180, 187, 188, 192, 194, 195, 196, 199, 200, 201, 203, 204, 205, 210, 220, 223, 224, 226, 229, 230, 231, 233], "oper": [2, 4, 11, 21, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 87, 94, 96, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 132, 135, 138, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 173, 174, 175, 176, 180, 182, 186, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 212, 215, 217, 224, 225, 229, 234, 235, 237], "should": [2, 4, 17, 30, 55, 59, 60, 74, 75, 87, 92, 94, 118, 119, 121, 124, 129, 133, 134, 135, 144, 146, 184, 185, 186, 187, 188, 189, 191, 194, 195, 196, 197, 198, 199, 203, 204, 205, 208, 216, 220, 222, 224, 229, 235], "member": [2, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 139, 144, 145, 146, 151, 153, 154, 155, 156, 164, 174, 175, 176, 181, 186, 188, 191, 193, 194, 198, 200, 204, 218, 220, 223, 224, 233, 234, 235], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 148, 150, 160, 184, 185, 194, 197, 204, 222, 224, 228], "b": [2, 11, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 143, 144, 153, 154, 155, 156, 157, 158, 164, 172, 180, 184, 185, 186, 194, 196, 200, 202, 204, 217, 234], "bool": [2, 13, 14, 17, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 92, 100, 129, 130, 131, 135, 146, 158, 163, 174, 175, 176, 180, 185, 186, 193, 195, 200, 202, 208, 217, 229], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 92, 94, 100, 129, 130, 131, 134, 135, 153, 154, 155, 156, 157, 158, 159, 173, 174, 175, 179, 180, 185, 186, 187, 189, 193, 196, 202, 204, 217], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 129, 132, 135, 143, 144, 145, 146, 151, 160, 165, 173, 180, 181, 184, 186, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 211, 216, 217, 220, 222, 223, 224, 226, 229, 230, 235], "goe": [2, 204, 220], "befor": [2, 35, 69, 74, 75, 76, 86, 99, 100, 101, 132, 133, 134, 151, 173, 180, 194, 196, 197, 198, 199, 200, 203, 204, 211, 220, 223, 229, 231, 234, 235], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 48, 67, 69, 137, 138, 139, 144, 161, 163, 169, 198, 200, 202, 204, 208, 212, 233, 235], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 135, 136, 137, 139, 160, 162, 174, 175, 176, 180, 184, 185, 202, 211], "preced": [2, 195, 224], "larger": [2, 74, 76, 77, 152, 167, 176, 180, 187, 204, 207], "final": [2, 72, 76, 79, 83, 87, 130, 131, 132, 134, 144, 145, 146, 158, 163, 169, 173, 176, 178, 180, 184, 185, 186, 190, 192, 193, 194, 197, 200, 204, 208, 217, 226, 229, 230, 235], "barrier": [2, 151, 201, 231], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 93, 118, 119, 124, 128, 129, 131, 135, 151, 172, 173, 181, 187, 191, 194, 196, 198, 199, 200, 201, 203, 205, 206, 222, 224, 226, 228, 230, 231, 232, 233, 235, 237], "immedi": [2, 144, 189, 197, 204, 205, 231], "after": [2, 11, 15, 17, 18, 22, 24, 33, 34, 43, 44, 47, 49, 50, 51, 52, 54, 55, 58, 60, 65, 66, 67, 68, 70, 71, 75, 77, 86, 87, 94, 131, 133, 134, 151, 173, 177, 178, 186, 187, 189, 195, 196, 197, 199, 200, 201, 203, 204, 205, 220, 221, 222, 223, 224, 230, 231, 234], "both": [2, 72, 75, 76, 79, 82, 87, 94, 107, 116, 117, 135, 159, 160, 173, 180, 187, 188, 191, 194, 195, 196, 197, 199, 200, 202, 204, 210, 220, 221, 222, 223, 224, 228, 229], "global": [2, 83, 87, 149, 151, 154, 156, 158, 194, 204, 231], "scratch": [2, 76, 129, 151, 152, 180, 199, 201, 237], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 92, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 143, 151, 152, 172, 174, 175, 176, 177, 178, 180, 181, 184, 189, 191, 193, 197, 198, 202, 203, 205, 206, 210, 211, 212, 224, 229, 230, 231, 232, 234, 235, 237], "space": [2, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 95, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 172, 173, 177, 178, 180, 181, 191, 193, 194, 195, 196, 205, 210, 222, 224, 228, 229, 231, 232, 233, 234, 237], "biton": 2, "algorithm": [2, 81, 87, 90, 167, 187, 189, 194, 195, 197, 199, 200, 201, 204, 210, 224, 226, 231, 232], "stabl": [2, 220], "mean": [2, 22, 34, 67, 68, 76, 81, 92, 94, 129, 132, 135, 143, 144, 147, 180, 182, 189, 194, 196, 199, 200, 201, 202, 203, 204, 205, 207, 211, 229, 236], "repeat": [2, 194, 222, 231, 234], "input": [2, 22, 34, 67, 68, 76, 77, 79, 94, 145, 146, 189, 191, 195, 196, 200, 204, 224, 228, 229], "correspond": [2, 76, 79, 87, 117, 121, 134, 160, 174, 175, 176, 179, 180, 194, 195, 200, 201, 204, 221, 222, 233], "might": [2, 129, 166, 186, 187, 194, 195, 196, 197, 198, 199, 200, 203, 204, 228, 235, 236], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 92, 94, 97, 127, 128, 129, 131, 134, 135, 138, 144, 148, 150, 159, 166, 173, 180, 185, 188, 189, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 213, 220, 222, 223, 224, 230, 235], "execspac": [2, 79, 129, 150, 159, 172, 173, 204], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 93, 126, 127, 128, 147, 148, 150, 159, 165, 180, 194, 195, 229], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 150, 151, 153, 155, 157, 169, 172, 173, 177, 178, 196, 204, 227, 232], "member_typ": [2, 72, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 191, 194, 196], "10": [2, 24, 34, 48, 69, 77, 78, 82, 86, 132, 133, 134, 146, 173, 180, 189, 194, 200, 204, 206, 215, 216, 222, 224, 235], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 121, 146, 194, 196, 200, 201, 204, 230], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 94, 129, 140, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 169, 180, 187, 194, 196, 198, 199, 200, 201, 204, 217, 226, 227, 228, 229, 230, 231, 233, 235], "whole": [2, 151, 187, 189, 191, 203, 233], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 97, 162, 173, 176, 178, 180, 215, 228, 237], "league_rank": [2, 144, 145, 149, 151, 153, 154, 155, 156, 157, 158, 191, 194], "ahost": 2, "create_mirror_view_and_copi": [2, 172], "hostspac": [2, 72, 75, 87, 93, 172, 173, 176, 180, 193, 196, 204, 227], "cout": [2, 129], "j": [2, 80, 149, 155, 158, 159, 194, 196, 199, 200, 204, 206, 228, 231, 233], "vectorlen": 2, "vector_length_max": [2, 152], "now": [2, 87, 129, 135, 147, 159, 173, 180, 186, 188, 194, 196, 198, 199, 202, 204, 208, 226, 235], "column": [2, 80, 196, 200, 203, 204, 224], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 92, 97, 129, 135, 143, 172, 180, 187, 196, 204, 231], "na": [2, 216, 224], "9": [2, 34, 48, 69, 78, 88, 189, 203, 211, 212, 215, 216, 222, 224], "38": 2, "68": 2, "74": [2, 206], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 189, 216], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 194], "13": [2, 4, 23, 24, 39, 40, 53, 56, 145, 204, 215, 222], "16": [2, 77, 189, 196, 216, 224], "17": [2, 84, 88, 132, 139, 145, 189, 216, 222, 223], "40": [2, 78], "44": [2, 222], "54": 2, "96": [2, 196], "18": [2, 189, 205, 206, 216, 220, 222], "77": 2, "80": [2, 176], "82": 2, "94": 2, "14": [2, 23, 88, 139, 189, 215, 216, 224], "34": [2, 53, 56, 151], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 137, 139, 146, 153, 155, 157, 173, 180, 200, 211, 215, 216, 220, 222, 237], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 130, 131, 132, 134, 137, 138, 139, 146, 148, 150, 151, 153, 155, 157, 167, 171, 173, 176, 177, 178, 179, 180, 190, 191, 192, 205, 206, 207, 210, 211, 213, 215, 217, 220, 222, 224, 228, 232, 237], "5": [2, 11, 12, 21, 22, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 139, 148, 150, 151, 153, 155, 157, 162, 164, 171, 173, 176, 179, 180, 191, 194, 203, 206, 212, 215, 216, 217, 222, 235, 237], "20": [2, 78, 88, 89, 129, 135, 136, 137, 147, 176, 189, 205, 209, 216, 224], "33": [2, 206], "39": 2, "60": [2, 204], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 130, 131, 132, 134, 138, 167, 180, 189, 191, 199, 203, 205, 211, 212, 215, 216, 217, 220, 222, 224, 237], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 131, 134, 150, 152, 153, 155, 157, 174, 175, 176, 180, 187, 189, 195, 199, 200, 201, 204, 211, 212, 215, 216, 222, 224, 232, 237], "15": [2, 4, 21, 25, 28, 30, 35, 42, 151, 171, 179, 200, 215], "31": [2, 78], "42": [2, 129, 147, 229], "86": 2, "29": [2, 189, 216], "56": 2, "63": 2, "90": [2, 203, 220, 227], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 144, 145, 146, 148, 150, 152, 180, 194, 199, 200, 201, 202, 204, 208, 217, 226, 228, 231], "minimum": [3, 72, 77, 96, 102, 104, 105, 107, 114, 115, 116, 117, 118, 119, 145, 146, 189, 190, 191, 216, 220], "modifi": [3, 4, 11, 17, 22, 24, 28, 30, 32, 33, 35, 36, 40, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 145, 146, 184, 185, 187, 188, 194, 196, 222, 232], "sequenc": [3, 26, 61, 74, 89, 194, 199, 201], "numer": [3, 83, 137, 138, 189, 197, 199, 205, 224, 228, 233], "partit": [3, 35, 47, 208], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 208], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 121, 180, 184, 217, 227, 232], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 144, 145, 146, 152, 172, 177, 178, 180, 199, 200, 203, 204], "qualifi": [4, 87, 208, 216, 235], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 94, 130, 198, 200, 201, 202, 204, 205, 220, 230, 233, 235], "taken": [4, 188, 191, 222], "becaus": [4, 138, 159, 196, 198, 199, 200, 202, 204, 205, 220, 231, 235], "we": [4, 39, 40, 41, 76, 84, 87, 94, 132, 138, 173, 180, 186, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 216, 222, 226, 227, 229, 230, 235], "chang": [4, 72, 75, 81, 132, 151, 166, 180, 188, 195, 197, 200, 202, 203, 204, 205, 217, 219, 220, 221, 222, 224, 230, 235], "itself": [4, 76, 77, 94, 129, 135, 147, 176, 180, 187, 189, 191, 197, 199, 203, 204, 205, 222, 233, 234], "without": [4, 72, 75, 77, 86, 87, 94, 131, 143, 145, 166, 173, 177, 178, 188, 189, 190, 202, 203, 204, 205, 208, 213, 216, 228, 230, 231, 234, 235], "dereferenc": [4, 11, 22, 30, 31, 86, 233], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 133, 134, 144, 145, 146, 148, 149, 151, 153, 154, 155, 156, 172, 177, 178, 179, 180, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 203, 204, 205, 213, 220, 221, 222, 223, 224, 228, 229, 231, 234], "done": [4, 37, 54, 69, 87, 94, 135, 189, 194, 195, 202, 204, 205, 220, 222, 229], "execut": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 126, 127, 128, 131, 133, 134, 135, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 168, 172, 173, 178, 180, 181, 186, 187, 195, 196, 197, 202, 205, 210, 211, 220, 223, 224, 228, 233, 234, 235, 237], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 131, 144, 145, 148, 151, 153, 155, 157, 171, 173, 176, 177, 178, 179, 180, 194, 195, 204, 205, 208, 217, 227, 228, 229], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 97, 173, 177, 178, 180, 196, 204, 217, 228], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 97, 173, 177, 178, 180, 196, 200, 203, 204, 228], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 97, 180, 203, 204, 227], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 171], "proper": [4, 86, 189, 196, 205], "content": [4, 72, 75, 131, 145, 146, 160, 177, 178, 196, 198, 200, 204, 229, 231, 234, 235], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 103, 129, 187, 196, 199, 200, 203, 204, 230], "iteratortyp": [4, 12, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 82, 134, 170, 175, 180, 194, 195, 196, 199, 203, 204, 220, 224], "need": [4, 28, 30, 76, 77, 84, 87, 94, 128, 129, 132, 136, 138, 145, 146, 159, 173, 180, 188, 189, 190, 194, 195, 196, 197, 198, 200, 202, 203, 205, 220, 221, 222, 224, 229, 231, 232], "go": [4, 86, 144, 145, 146, 148, 150, 151, 152, 188, 189, 194, 199, 203, 220, 222], "calcul": [4, 140, 141, 142, 152, 176, 194, 196, 204, 227, 233], "neg": [4, 18, 24, 33, 63, 64, 134, 186, 187, 202], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 20, 25, 26, 27, 38, 49, 50, 53, 54, 61, 62, 71, 76, 92, 99, 100, 131, 159, 179, 180, 184, 185, 195], "stepsb": 4, "swap": [4, 59, 65, 194], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 94, 129, 134, 135, 138, 149, 163, 180, 188, 189, 198, 199, 202, 203, 204, 211, 220, 224, 228, 229, 230, 235], "current": [4, 74, 76, 77, 81, 87, 94, 99, 100, 129, 135, 138, 159, 164, 180, 184, 185, 189, 194, 200, 201, 202, 203, 204, 205, 210, 220, 223, 224, 229], "api": [4, 17, 55, 81, 88, 133, 134, 151, 166, 195, 207, 210, 218, 228, 234], "doe": [4, 47, 75, 77, 81, 87, 91, 94, 126, 131, 143, 145, 146, 163, 180, 188, 189, 194, 195, 196, 198, 199, 203, 204, 205, 216, 217, 220, 223, 224], "fenc": [4, 72, 87, 90, 129, 135, 144, 145, 151, 159, 178, 180, 199, 204, 205, 231, 235], "min_el": [5, 39, 41, 167], "max_el": [5, 167], "minmax_el": [5, 167], "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 92, 94, 97, 132, 135, 144, 151, 152, 159, 164, 172, 174, 175, 176, 178, 180, 190, 192, 193, 194, 196, 198, 199, 200, 205, 212, 217, 222, 224, 229, 231, 233, 235], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 65, 76, 77, 81, 132, 135, 151, 152, 174, 175, 176, 180, 188, 198, 217, 225, 235], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 201], "generate_n": 6, "remov": [6, 52, 88, 130, 134, 137, 138, 139, 166, 188, 195, 208, 211, 220, 222], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 130, 131, 139, 189, 196, 200, 208, 236], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136], "reverse_copi": 6, "rotat": [6, 60, 136], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 129, 143, 180, 189, 195, 199, 205, 237], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 185, 202], "any_of": [7, 185, 202], "none_of": [7, 185, 202], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 136, 187, 189, 190, 191, 198, 200, 205, 209, 210, 211, 220, 235], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 204], "search": [7, 12, 19, 20, 25, 26, 27, 35, 53, 62, 74, 81, 131, 234], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 129, 145, 146, 151, 190, 194, 197, 199, 201, 203, 204], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 92, 129, 135, 148, 150, 159, 173, 194, 196, 230], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 127, 131, 132, 134, 143, 144, 145, 146, 161, 180, 181, 189, 195, 204, 208, 236], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 127, 129, 135, 143, 144, 145, 146, 172, 176, 177, 178, 180, 181, 204, 208, 222, 224], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 129, 135, 194, 196, 199, 213, 221, 233], "second": [11, 36, 38, 40, 42, 72, 74, 92, 94, 134, 143, 159, 160, 170, 179, 184, 185, 186, 187, 191, 194, 195, 196, 198, 199, 200, 204, 235], "comput": [11, 22, 34, 37, 59, 67, 68, 136, 145, 189, 191, 192, 193, 194, 197, 200, 201, 202, 204, 205, 206, 220, 223, 227, 228, 233], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 94, 97, 173, 188, 189, 191, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 220, 222, 224, 229, 231, 235], "adjac": 11, "pair": [11, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 91, 167, 171, 179, 191, 203, 208, 224], "write": [11, 22, 34, 58, 66, 67, 68, 84, 94, 129, 135, 189, 190, 194, 197, 199, 200, 202, 203, 204, 210, 220, 224], "them": [11, 58, 87, 129, 187, 188, 189, 194, 195, 196, 198, 200, 201, 202, 204, 220, 229, 235], "binari": [11, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 107, 121, 188, 191, 200, 204, 211, 213], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 79, 87, 92, 94, 129, 135, 143, 150, 152, 159, 173, 177, 178, 180, 181, 186, 188, 191, 198, 200, 203, 204, 233, 235], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 92, 94, 129, 131, 135, 144, 145, 146, 147, 151, 180, 187, 188, 189, 192, 194, 199, 208, 210, 213, 224, 226, 227, 230, 235, 236], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 91, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 138, 139, 145, 148, 149, 150, 154, 156, 158, 160, 162, 172, 179, 180, 184, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 210, 220, 221, 224, 227, 231, 234, 235], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 127, 144, 145, 146, 180, 188, 189, 194, 204, 210, 211, 223, 224, 230], "purpos": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 94, 148, 150, 180, 197, 199, 201, 203, 204, 207, 210, 213, 220], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 94, 129, 134, 135, 136, 147, 164, 179, 180, 184, 199, 202, 203, 204, 217], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 129, 131, 132, 144, 145, 146, 152, 179, 180, 181, 184, 186, 189, 194, 196, 199, 200, 201, 204], "check": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 81, 84, 88, 129, 131, 135, 136, 163, 191, 195, 196, 204, 205, 211, 220, 223, 224, 228], "mode": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 188, 196, 201, 202, 216, 222], "pass": [11, 17, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 94, 129, 130, 131, 132, 134, 137, 179, 189, 195, 196, 197, 200, 203, 204, 205, 216, 222, 223, 224, 228, 229], "callabl": [11, 22, 48, 67, 69, 163, 180, 184, 185, 188], "value_typ": [11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 145, 146, 164, 173, 180, 184, 185, 191, 193, 200, 217, 229, 231], "conform": [11, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 69, 234], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 92, 118, 119, 121, 129, 131, 132, 135, 144, 145, 151, 152, 164, 174, 175, 176, 184, 185, 187, 195, 196, 201, 203, 204, 220, 221, 229], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "consecut": [12, 70, 71, 136, 152, 204, 229], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 76, 79, 87, 88, 92, 127, 128, 131, 133, 135, 139, 143, 147, 152, 172, 177, 178, 180, 184, 185, 188, 189, 194, 199, 200, 201, 204, 205, 217, 222, 223, 224, 230, 235], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 69, 72, 75, 76, 77, 83, 84, 87, 89, 91, 97, 121, 129, 132, 134, 135, 136, 137, 138, 139, 144, 147, 153, 155, 157, 163, 175, 180, 181, 184, 185, 186, 189, 190, 194, 197, 199, 200, 201, 202, 204, 205, 209, 211, 217, 223, 227, 228, 231, 234, 235], "similar": [12, 13, 14, 20, 26, 27, 38, 45, 61, 62, 72, 76, 78, 82, 87, 94, 180, 188, 198, 199, 202, 224, 229, 235], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 44, 50, 51, 58, 60, 66, 71], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 94], "satisfi": [13, 14, 35, 45, 46, 47, 82, 145, 172, 221], "unari": [13, 14, 17, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 94, 138], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [14, 17, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 155, 160, 164, 172, 177, 178, 179, 196, 208, 213, 217, 231], "least": [14, 78, 81, 87, 135, 136, 196, 202, 223], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 94, 131, 134, 135, 136, 138, 143, 151, 153, 154, 155, 156, 159, 161, 172, 174, 175, 177, 178, 179, 180, 184, 185, 187, 188, 189, 190, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 220, 222, 224, 226, 227, 229, 233, 234, 235], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 43, 44, 50, 51, 54, 55, 58, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 94, 136, 151, 153, 154, 155, 156, 172, 179, 187, 194, 195, 196, 201, 202, 203, 204, 224, 229, 233], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 69, 70, 71, 89, 90, 134, 138, 144, 145, 188, 202, 203, 204, 208, 233], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 151, 163, 171, 180, 189, 199, 202, 205, 207, 213, 218, 222, 224, 236], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 180, 196, 229], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 159, 189, 201], "preserv": [16, 49, 52, 78, 87, 177, 178, 195], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "convert": [17, 28, 35, 36, 40, 46, 51, 52, 55, 56, 84, 92, 94, 129, 131, 134, 160, 163, 180, 184, 185, 196, 202, 227, 228], "everi": [17, 28, 30, 35, 36, 40, 46, 51, 52, 55, 56, 70, 76, 81, 94, 151, 153, 154, 155, 156, 173, 179, 180, 187, 188, 189, 191, 194, 198, 202, 203, 204, 205, 220, 221, 224, 230, 234, 235], "sizetyp": [18, 24, 31, 33, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "If": [18, 24, 33, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 126, 127, 128, 132, 135, 144, 145, 146, 152, 163, 172, 173, 178, 179, 180, 187, 188, 189, 190, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 220, 221, 222, 228, 229, 231, 232, 233, 235], "otherwis": [18, 21, 24, 33, 35, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 92, 94, 128, 129, 131, 152, 172, 180, 188, 195, 196, 200, 204, 205, 213, 222], "count_iterator_api_default": 19, "count_view_api_default": 19, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 61, 69], "iteratortype2": [21, 26, 27, 38, 42, 61, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "fals": [21, 29, 35, 42, 74, 77, 81, 129, 131, 132, 133, 135, 163, 172, 176, 202, 204], "via": [21, 26, 27, 37, 49, 52, 69, 85, 86, 94, 118, 119, 124, 127, 135, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 180, 187, 189, 192, 194, 195, 196, 204, 205, 220, 221, 222, 223, 227, 229, 234], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 94, 97, 159, 172, 173, 176, 179, 181, 186, 187, 188, 189, 191, 196, 199, 211, 220, 221, 222, 224, 229, 233], "p": [21, 28, 30, 42, 46, 75, 77, 79, 160, 177, 178, 189, 197, 204, 205, 208, 224, 228], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 94, 121, 131, 194, 196, 199, 200, 203, 204, 226, 229], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 93, 148, 150, 152, 173, 189, 195, 197, 200, 201, 204, 205, 208, 210, 211, 216, 222, 223, 224, 231], "enabl": [21, 25, 28, 30, 42, 86, 88, 135, 149, 154, 156, 158, 165, 189, 194, 195, 200, 201, 204, 206, 220, 224, 230, 232, 234], "you": [21, 25, 28, 30, 42, 75, 94, 129, 132, 135, 138, 139, 147, 176, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 211, 212, 218, 222, 233, 235], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 129, 160, 180, 189, 191, 194, 195, 196, 200, 202, 203, 223, 224], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 97, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 131, 134, 138, 150, 151, 152, 160, 164, 165, 168, 170, 174, 175, 176, 180, 182, 184, 185, 186, 187, 188, 189, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 209, 211, 212, 216, 220, 222, 223, 224, 227, 231, 234, 235], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 192, 193], "init_valu": [22, 34, 67, 68, 194], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 146, 151, 163, 200, 203, 229], "prefix": [22, 34, 67, 68, 90, 194, 195, 200, 201, 211], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 107, 121, 145, 154, 156, 158, 190, 191, 192, 193, 194, 200], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 136, 145, 146, 152, 159, 171, 180, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 224, 227, 228, 234, 235, 236], "scan": [22, 34, 67, 68, 72, 74, 146, 151, 152, 194, 199, 201, 204, 229], "combin": [22, 34, 81, 87, 102, 104, 105, 121, 135, 145, 146, 180, 191, 194, 197, 201, 204, 216, 222, 234], "th": [22, 34, 67, 68, 74, 179], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 94, 129, 135, 188, 189, 194, 195, 196, 201, 202, 204, 223], "22": [23, 216, 224], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 143, 147, 184, 185, 187, 189, 198, 199, 220, 233, 235], "newvalu": [24, 53, 56], "forward": [25, 74, 132, 188, 196, 201, 222, 229], "find_iterator_api_default": 25, "find_view_api_default": 25, "found": [25, 28, 37, 74, 78, 81, 84, 102, 105, 121, 187, 188, 189, 198, 199, 201, 202, 220, 224, 235], "cbegin": [25, 35], "cend": [25, 35], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 129, 131, 135, 138, 163, 165, 172, 173, 180, 189, 194, 195, 196, 198, 200, 201, 204, 205, 220, 224, 225, 229, 230, 234, 235], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 129, 163, 180, 196, 200, 220, 224, 228], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 138], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 144, 145, 146, 200, 228], "incrementvalsfunctor": 30, "increment": [30, 37, 187, 196, 199, 204], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": [32, 33], "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 94, 129, 131, 133, 145, 146, 186, 197, 199, 201, 204, 213, 231, 234], "being": [32, 81, 87, 89, 94, 121, 139, 140, 141, 142, 152, 161, 179, 187, 194, 199, 202, 204, 220, 236], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "11": [34, 41, 48, 69, 78, 188, 189, 200, 215, 216, 222, 224], "12": [34, 48, 69, 72, 173, 189, 205, 206, 215, 216, 220, 229], "inclus": [34, 68, 146, 200, 203, 220, 223], "op": [34, 72, 79, 81, 84, 98, 121, 173, 187, 204], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 136, 180, 187, 204, 229], "don": [35, 72, 75, 87, 172, 180, 187, 188, 200, 216, 222], "empti": [35, 39, 40, 41, 75, 82, 208, 234], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 94, 131, 135, 151, 180, 194, 195, 203, 204, 205], "re": [35, 39, 40, 41, 87, 94, 129, 135, 147, 164, 189, 198, 200, 204, 234, 235], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 224], "less": [36, 38, 39, 40, 41, 63, 64, 87, 136, 159, 190, 195, 202, 204, 216, 220, 228, 229], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 94, 129, 131, 135, 136, 152, 179, 180, 187, 189, 194, 195, 196, 199, 200, 202, 203, 204, 205, 206, 216, 220, 228, 233], "your": [36, 40, 75, 129, 188, 189, 190, 195, 200, 202, 204, 205, 207, 209, 229, 235], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 107, 109, 110, 111, 180, 187, 189, 191, 194, 199, 201, 202, 204, 234], "largest": [37, 39, 41, 79, 82, 136, 167, 201], "comparison": [37, 54, 72, 138, 187, 190], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 139, 171, 172, 173, 179, 203], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 87, 91, 94, 145, 147, 172, 173, 180, 189, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 208, 210, 211, 220, 226, 229, 231, 232, 233], "sever": [39, 40, 41, 87, 89, 189, 199, 200, 210, 221, 223, 224, 230], "custom": [39, 40, 41, 76, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 180, 194, 200, 204, 215, 220, 221, 228, 237], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 188, 196, 200, 201, 220, 236], "smallest": [40, 41, 136, 167], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 93, 94, 138, 147, 187, 189, 190, 191, 194, 196, 197, 198, 201, 203, 204, 205, 210, 211, 224, 227, 228, 229, 230, 235], "cpp": [42, 131, 189, 208], "mismatchfunctor": 42, "mismatch_index": 42, "outputiter": [43, 44, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 173, 193], "move_iterator_api_default": 43, "move_view_api_default": 43, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 151, 153, 155, 157, 159, 200, 213, 222], "contain": [46, 49, 52, 74, 75, 81, 94, 131, 134, 144, 145, 146, 151, 166, 172, 174, 175, 176, 177, 178, 180, 181, 188, 189, 191, 194, 195, 196, 198, 199, 202, 210, 220, 224, 229, 233, 235, 236], "locat": [47, 75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 180, 189, 194, 199, 201, 204, 205, 211, 224, 227, 232], "alreadi": [47, 76, 78, 81, 85, 87, 173, 180, 188, 197, 200, 222, 226], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 151, 152, 191, 192, 193, 194, 199, 201, 208, 215, 231, 237], "account": [48, 68, 152, 209, 220], "join": [48, 69, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 190, 191, 193, 194, 199, 208, 209, 220, 224, 229], "dure": [48, 86, 121, 150, 152, 179, 187, 194, 195, 196, 201, 204, 205, 220, 221, 223, 224, 226, 229, 233], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 94, 127, 128, 129, 131, 132, 150, 169, 180, 188, 201, 202, 204, 205, 235], "associ": [48, 69, 72, 76, 94, 107, 121, 129, 133, 135, 147, 151, 159, 179, 180, 191, 194, 199, 200, 204, 229, 231, 233], "commut": [48, 69, 121], "shift": [49, 52, 63, 64, 102, 105], "remain": [49, 52, 87, 128, 199, 220], "physic": [49, 52, 74, 152, 194, 198, 201, 204, 235], "size": [49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 127, 128, 135, 140, 141, 142, 148, 150, 152, 174, 175, 176, 180, 184, 185, 194, 196, 200, 201, 202, 204, 228, 229, 232, 234], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "target": [49, 50, 72, 75, 94, 129, 144, 189, 196, 197, 199, 201, 210, 211, 224], "new": [49, 50, 51, 52, 59, 60, 70, 74, 75, 79, 81, 87, 89, 94, 99, 100, 101, 104, 106, 128, 129, 131, 132, 135, 139, 147, 159, 172, 176, 177, 178, 179, 182, 187, 188, 191, 194, 196, 197, 198, 199, 200, 204, 205, 209, 212, 217, 218, 220, 221, 222, 223, 230, 234, 235], "ther": [50, 57], "omit": [50, 51, 75, 76, 126, 127, 128, 180], "those": [50, 51, 74, 75, 78, 92, 94, 145, 160, 180, 188, 189, 194, 196, 203, 204, 222, 226, 229], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 99, 100, 101, 102, 105], "new_valu": [53, 54, 55, 56, 99, 100, 101, 106], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135], "explanatori": [53, 54, 161], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 191, 193, 204], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 94, 182, 187, 188, 189, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 213, 228, 229, 232, 233, 235], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 143, 151, 189, 194, 198, 205, 212, 224, 226, 235], "about": [59, 60, 85, 87, 88, 92, 129, 135, 138, 147, 148, 150, 159, 180, 188, 198, 199, 200, 201, 202, 204, 205, 208, 220, 232, 235], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 179, 203, 234], "toward": [63, 64, 197, 199], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "iterator1": 65, "iterator2": 65, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "d_first": 66, "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 94, 99, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 132, 145, 180, 187, 190, 191, 194, 199, 200, 201, 202, 204, 226, 228, 229, 232], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 127, 129, 132, 133, 134, 135, 160, 188, 200, 204, 205, 220, 224], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 180, 191, 194, 198, 203, 204, 213, 223, 228, 235], "along": [69, 87, 203, 227], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 180], "group": [70, 194, 199, 201, 220, 224], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 91, 131, 136, 138, 139, 160, 163, 167, 187, 188, 189, 195, 197, 199, 204, 205, 220, 224, 229, 232, 233, 236, 237], "categori": [72, 182, 187, 189, 197, 199, 220, 223, 224], "descript": [72, 73, 83, 85, 88, 90, 97, 107, 121, 122, 129, 131, 187, 189, 195, 211, 222, 224], "rand": 72, "plu": [72, 122, 124, 127, 187, 194, 200, 228], "random_xorshift1024_pool": 72, "1024": [72, 77, 151, 192, 193, 194], "random_xorshift1024": 72, "sampl": [72, 192, 193], "fit": [72, 94, 194, 201, 213], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 129, 144, 145, 146, 159, 168, 189, 191, 199, 200, 201, 234], "dualview": [72, 73, 82, 87, 88, 182, 237], "mirror": [72, 73, 75, 78, 172], "dynamicview": [72, 73, 182], "dynam": [72, 76, 77, 85, 88, 94, 131, 148, 150, 152, 177, 178, 180, 199, 204, 205, 234], "dynrankview": [72, 73, 173, 182], "determin": [72, 73, 76, 88, 148, 152, 155, 179, 180, 184, 185, 189, 194, 195, 199, 200, 201, 204, 205, 211, 220, 221, 223, 228, 229, 234], "runtim": [72, 73, 76, 78, 79, 85, 129, 131, 148, 150, 152, 180, 191, 194, 196, 201, 204, 211, 220, 233, 235], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 94, 129, 131, 132, 135, 137, 138, 184, 185, 188, 189, 190, 194, 196, 200, 202, 204, 205, 211, 212, 223, 224, 229, 231, 237], "error": [72, 138, 161, 180, 196, 199, 203, 204, 205, 212, 216, 222, 224, 233], "record": [72, 87, 220], "code": [72, 77, 87, 88, 90, 94, 129, 135, 137, 151, 163, 173, 180, 187, 188, 189, 190, 192, 194, 199, 200, 201, 203, 204, 205, 210, 211, 212, 213, 215, 216, 220, 221, 223, 224, 225, 228, 229, 233, 234, 236], "offsetview": [72, 73, 87, 182, 208], "indici": [72, 117, 187], "scatterview": [72, 73, 182, 225, 237], "transpart": 72, "replic": [72, 187, 196, 224], "strategi": [72, 87, 94, 131, 187, 235], "scatter": [72, 79, 187], "staticcrsgraph": [72, 73, 204], "resiz": [72, 75, 77, 79, 82, 97, 177, 196], "graph": [72, 80, 83, 94, 237], "semant": [72, 76, 78, 82, 94, 180, 188, 194, 196, 200, 204, 210, 229], "unorderedmap": [72, 73, 204], "map": [72, 73, 76, 80, 81, 180, 194, 195, 196, 201, 204, 226, 228, 229], "optim": [72, 88, 150, 187, 189, 194, 196, 197, 199, 201, 204, 205, 211, 229, 232, 235], "insert": [72, 201, 204], "interfac": [72, 82, 87, 93, 94, 149, 154, 156, 158, 182, 188, 194, 196, 197, 199, 203, 204, 227, 233, 235], "abort": [72, 96, 163], "util": [72, 83, 129, 160, 189, 194, 199, 224, 227, 232], "caus": [72, 138, 161, 163, 188, 196, 199, 204, 212, 213], "abnorm": [72, 161, 163], "program": [72, 82, 92, 94, 97, 133, 134, 135, 147, 161, 163, 195, 196, 197, 198, 202, 203, 204, 206, 211, 224, 226, 229, 234, 235, 236], "termin": [72, 132, 133, 134, 161, 163], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 148, 162, 174, 175, 176, 177, 178, 179, 181, 194, 196, 227, 228], "atomic_exchang": [72, 98, 187], "exchang": [72, 99, 100, 101, 187, 225], "old": [72, 75, 79, 81, 132, 178, 187, 200, 204], "atomic_compare_exchang": [72, 98, 187], "match": [72, 75, 76, 78, 82, 97, 144, 145, 146, 148, 160, 172, 174, 175, 180, 187, 189, 194, 204, 217], "atomic_compare_exchange_strong": [72, 98, 187], "atomic_load": [72, 98, 187], "load": [72, 76, 87, 94, 131, 180, 187, 194, 200, 201, 202, 222, 224], "atomic_": [72, 98, 187], "anyth": [72, 94, 166, 187, 188], "atomic_fetch_": [72, 98, 187], "variou": [72, 75, 83, 187, 189, 223, 224], "_fetch": [72, 98, 187], "atomic_stor": [72, 98, 187], "band": [72, 107, 121, 191, 194], "bor": [72, 107, 121, 191, 194], "Or": [72, 107, 234], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 92, 129, 134, 135, 145, 146, 160, 173, 180, 189, 195, 196, 198, 204, 212, 215, 227, 235], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 91, 121, 129, 132, 138, 143, 144, 145, 146, 148, 150, 152, 160, 173, 180, 185, 187, 188, 189, 191, 194, 196, 199, 200, 201, 202, 203, 204, 216, 220, 222, 224, 225, 228, 229, 230, 233], "create_mirror": [72, 97, 204], "relat": [72, 83, 167, 189, 194, 205, 220, 229], "create_mirror_view": [72, 172, 173, 196, 204, 208, 231], "cudaspac": [72, 87, 88, 93, 180, 196, 204, 208, 231], "primari": [72, 84, 94, 188, 189, 195, 216, 220, 222, 223, 224], "cudauvmspac": [72, 87, 88, 93, 196, 198, 204, 205, 208, 235], "unifi": [72, 87, 135, 211], "page": [72, 94, 121, 129, 135, 147, 189, 204, 206, 207, 211, 212, 218], "migrat": [72, 135, 212, 230], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 92, 94, 97, 125, 126, 127, 128, 129, 135, 152, 159, 172, 174, 175, 176, 178, 180, 181, 187, 189, 194, 197, 198, 199, 201, 202, 204, 205, 229, 230, 231, 232, 235], "cudahostpinnedspac": [72, 93, 180, 204], "memrori": 72, "pin": [72, 135, 189], "gpu": [72, 76, 88, 91, 131, 135, 172, 180, 189, 194, 195, 196, 197, 199, 201, 202, 204, 205, 208, 211, 212, 220, 224, 229, 230, 232], "executionpolici": [72, 95, 144, 145, 146], "concept": [72, 83, 94, 95, 107, 121, 129, 135, 145, 147, 151, 174, 175, 176, 188, 190, 193, 194, 197, 199, 201, 206, 237], "hpx": [72, 85, 87, 88, 93, 148, 150, 195, 208, 210, 211], "system": [72, 87, 94, 129, 135, 188, 194, 195, 199, 201, 204, 205, 206, 220, 223, 224, 233], "mechan": [72, 87, 147, 194, 196, 197, 201, 204], "initargu": [72, 131, 132, 134, 195, 208], "programmat": [72, 130, 131, 134], "how": [72, 76, 85, 121, 129, 135, 147, 148, 180, 187, 188, 189, 190, 194, 195, 196, 197, 199, 200, 201, 202, 205, 209, 217, 229], "deprec": [72, 77, 87, 88, 130, 131, 134, 210, 211, 217, 220, 230], "initializationset": [72, 130, 132, 134, 165, 168, 208], "is_array_layout": [72, 87, 208], "trait": [72, 75, 76, 77, 83, 84, 89, 92, 129, 137, 138, 150, 171, 180, 194, 217, 232], "detect": [72, 83, 95, 139, 174, 175, 176, 205], "model": [72, 92, 94, 95, 153, 154, 155, 156, 157, 158, 174, 175, 176, 189, 196, 197, 200, 202, 204, 206, 211, 215, 229], "layout": [72, 75, 76, 77, 78, 79, 95, 97, 172, 174, 175, 176, 177, 178, 196, 197, 199, 203], "is_execution_polici": [72, 208], "is_execution_spac": [72, 87, 129, 208], "is_memory_spac": [72, 87, 135, 208], "memoryspac": [72, 76, 92, 95, 126, 127, 128, 129, 135, 180, 204, 232], "is_memory_trait": [72, 208], "memorytrait": [72, 75, 76, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 180, 187, 194, 204, 232], "is_reduc": [72, 208], "is_spac": [72, 129, 208], "fortran": [72, 76, 97, 174, 180, 189, 203, 204, 216, 225, 237], "arbitrari": [72, 76, 85, 97, 148, 150, 176, 180, 190, 193, 194, 201, 203, 204], "stride": [72, 75, 76, 77, 79, 97, 176, 196, 203, 227], "kokkos_fre": [72, 125, 127, 128, 196, 230], "delloc": 72, "previous": [72, 99, 101, 125, 126, 128, 135, 180, 189, 190, 194, 201, 236], "kokkos_malloc": [72, 125, 126, 128, 196, 198, 230, 235], "kokkos_realloc": [72, 125, 126, 127, 196], "expand": [72, 94, 125, 195, 200], "block": [72, 94, 125, 127, 143, 159, 189, 194, 196, 197, 203, 220, 231], "land": [72, 107, 108, 109, 111, 121, 191, 194, 224], "built": [72, 76, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 180, 189, 190, 193, 194, 195, 204, 224], "lor": [72, 107, 121, 191, 194], "maxloc": [72, 107, 118, 121, 124, 191, 194], "index": [72, 74, 76, 77, 78, 81, 82, 107, 113, 115, 116, 117, 118, 122, 124, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 174, 175, 179, 180, 186, 187, 191, 194, 196, 198, 200, 203, 235], "u": [72, 160, 184, 186, 189, 213, 217], "mdrangepolici": [72, 76, 85, 87, 144, 145, 180, 208, 217, 225, 237], "multidimension": [72, 76, 83, 85, 97, 148, 174, 175, 176, 191, 194, 196, 203, 215, 228], "min": [72, 102, 105, 107, 113, 115, 116, 117, 118, 119, 121, 122, 124, 139, 145, 167, 187, 191, 194, 208, 236], "minloc": [72, 107, 118, 121, 191, 194], "minmax": [72, 107, 119, 121, 167, 190, 191, 194, 208], "minmaxloc": [72, 107, 118, 121, 191, 194], "openmptarget": [72, 87, 88, 93, 189, 195], "targetoffload": 72, "analogu": 72, "bulk": [72, 201], "item": [72, 85, 129, 146, 148, 150, 152, 194, 199, 220, 229, 233], "parallelfortag": [72, 90, 152], "tag": [72, 76, 85, 87, 140, 141, 142, 145, 148, 150, 152, 174, 175, 176, 180, 193, 194, 202, 220, 222, 225, 229], "team_siz": [72, 151, 152, 194], "contribut": [72, 79, 145, 146, 187, 191, 194, 210, 221, 226, 231], "parallelreducetag": [72, 90, 152], "parallel_scan": [72, 90, 142, 143, 158, 194, 200, 201, 229, 230], "simpl": [72, 121, 129, 170, 187, 191, 194, 196, 199, 200, 201, 202, 203, 204, 205, 227, 228, 229, 233], "pre": [72, 146, 159, 184, 185, 189, 220, 226], "postfix": [72, 201], "depend": [72, 88, 94, 135, 152, 153, 157, 163, 187, 188, 189, 190, 194, 199, 200, 201, 202, 205, 228, 230, 231, 235], "parallelscantag": [72, 90], "partition_spac": [72, 93], "split": [72, 85, 149, 153, 154, 155, 156, 157, 158, 159, 194, 200, 234], "exist": [72, 75, 81, 84, 87, 88, 143, 145, 151, 159, 173, 177, 178, 188, 189, 195, 199, 201, 202, 203, 204, 220, 221, 224, 229], "multipl": [72, 87, 88, 94, 107, 145, 187, 189, 194, 195, 196, 199, 200, 202, 204, 205, 210, 211, 220, 223, 224, 229, 233], "perteam": [72, 151, 152, 153, 154, 155, 156, 158, 191, 194], "singl": [72, 94, 145, 149, 150, 153, 154, 155, 156, 158, 184, 185, 191, 196, 197, 199, 200, 201, 203, 204, 205, 228], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 134, 135, 170, 174, 175, 176, 177, 178, 180, 186, 190, 194, 196, 199, 200, 202, 203], "indic": [72, 76, 78, 79, 80, 81, 87, 107, 118, 122, 129, 140, 141, 142, 180, 187, 191, 194, 201, 203, 204, 228, 234], "per": [72, 94, 152, 191, 194, 195, 196, 200, 201, 203, 204, 226, 229, 232], "perthread": [72, 152, 158, 194], "prod": [72, 107, 121, 191, 194], "rangepolici": [72, 85, 87, 129, 144, 145, 146, 147, 159, 194, 196, 200, 204, 231, 233], "1d": [72, 76, 144, 145, 146, 150, 152, 180, 196, 204, 227], "realloc": [72, 75, 79, 97, 128, 178, 204], "maintain": [72, 87, 188, 209, 223], "reducerconcept": [72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 193], "cpu": [72, 88, 129, 135, 172, 187, 189, 194, 195, 201, 202, 208, 211, 212, 216, 222, 224], "aggreg": [72, 86, 194], "spaceaccess": [72, 92, 129, 135, 172, 173, 204, 208], "facil": [72, 89, 97, 136, 139, 172, 182, 220, 223], "queri": [72, 75, 131, 151, 152, 204, 208], "rule": [72, 77, 188], "multi": [72, 76, 144, 145, 180, 191, 197, 205], "dimension": [72, 76, 144, 145, 180, 203, 204], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 94, 97, 132, 134, 145, 148, 174, 175, 176, 180, 187, 191, 192, 193, 194, 196, 203, 208, 215, 224, 225, 226, 229], "crate": [72, 224], "slice": [72, 97, 171, 232, 237], "teamhandl": [72, 149, 153, 154, 155, 156, 157, 158], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 157], "teamvectorrang": [72, 85, 157, 158], "threadvectormdrang": [72, 85], "timer": [72, 96, 143], "basic": [72, 76, 87, 138, 147, 180, 189, 196, 197, 205, 206, 230], "like": [72, 75, 76, 87, 94, 97, 129, 135, 144, 147, 173, 180, 187, 188, 189, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 220, 226, 233, 235], "act": [72, 87, 197, 203], "comment": [73, 189], "offset": [73, 78, 194, 201, 204], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 196, 199, 200, 201, 204], "fix": [74, 81, 86, 188, 196, 204, 220, 221, 222, 232], "run": [74, 88, 94, 134, 135, 144, 187, 188, 189, 191, 194, 195, 196, 198, 199, 200, 201, 204, 205, 211, 220, 222, 224, 230, 231, 235], "time": [74, 75, 76, 85, 87, 88, 92, 94, 129, 148, 150, 152, 170, 180, 184, 185, 187, 188, 189, 194, 199, 200, 201, 202, 203, 204, 205, 211, 220, 221, 222, 224, 228, 230, 233], "paramet": [74, 75, 76, 77, 81, 85, 94, 97, 99, 100, 101, 102, 121, 126, 127, 128, 129, 131, 132, 135, 147, 151, 153, 155, 157, 159, 181, 189, 191, 195, 200, 202, 204, 205, 208, 216, 217, 224, 228, 231, 233], "constant": [74, 78, 83, 89, 129, 136, 138, 139, 162, 180, 184, 185, 200], "bit_scan_revers": 74, "1u": [74, 203], "mask": [74, 185, 186, 195, 202], "direct": [74, 138, 172, 194, 195, 202, 203, 204, 212, 213, 224], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 94, 148, 150, 159, 180], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "when": [74, 78, 81, 82, 86, 87, 91, 94, 129, 134, 135, 145, 149, 152, 174, 175, 176, 186, 187, 188, 189, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 209, 211, 212, 216, 217, 220, 224, 227, 228, 230, 231, 234, 235, 236], "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 180, 188, 196, 204, 211], "wa": [74, 75, 81, 88, 94, 128, 130, 131, 132, 169, 172, 180, 184, 185, 189, 191, 194, 195, 196, 204, 205, 212, 220, 222, 228, 230], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 132, 134, 144, 151, 152, 153, 155, 157, 164, 172, 174, 175, 176, 177, 178, 192, 193, 194, 200, 203, 204, 208, 212, 217], "arg_siz": 74, "reset": [74, 75, 79, 170, 189], "clear": [74, 81, 82, 87, 188], "test": [74, 88, 138, 143, 189, 196, 200, 204, 205, 210, 211, 216, 220, 221, 222], "max_hint": 74, "happen": [74, 76, 77, 94, 99, 100, 180, 187, 194, 195, 196, 198, 204, 220, 222, 224, 235], "occur": [74, 91, 173, 195, 199, 205, 220, 227, 228, 230], "smaller": [74, 76, 77, 167, 179, 180, 196, 224], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 180], "rh": [74, 76, 77, 118, 119, 124, 180, 184, 185, 192, 193, 217, 231], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 145, 200], "src": [74, 75, 79, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 145, 164, 172, 173, 189, 192, 193, 200, 228], "kokkos_dualview": [75, 208], "refer": [75, 76, 77, 79, 82, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 137, 138, 139, 152, 173, 179, 180, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 203, 205, 210, 212, 224, 233], "capabl": [75, 83, 135, 189, 194, 195, 196, 201, 202, 217, 221], "well": [75, 76, 87, 92, 94, 121, 143, 148, 150, 151, 163, 180, 188, 189, 191, 194, 196, 197, 199, 200, 201, 203, 204, 220, 222, 223, 224, 229], "flag": [75, 129, 134, 180, 184, 186, 189, 200, 205, 209, 211, 216, 222, 224], "respons": [75, 195, 196, 199, 202, 221, 223], "manual": [75, 189, 205, 222, 228], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 189, 193, 199, 200, 202, 204, 208, 228, 235], "synchron": [75, 82, 135, 149, 159, 173, 194, 199, 201, 231], "conveni": [75, 79, 84, 129, 196, 200, 203], "capac": [75, 81, 194, 199], "appropri": [75, 80, 94, 121, 189, 194, 199, 200, 201, 203, 204, 205, 220, 221, 224], "underli": [75, 76, 77, 78, 82, 94, 159, 180, 187, 196, 197, 199, 201, 204, 232], "four": [75, 204, 211, 220, 222], "separ": [75, 87, 187, 189, 195, 200, 204, 220, 222, 232, 233], "intend": [75, 84, 87, 89, 160, 189, 194, 198, 204, 235], "pleas": [75, 129, 135, 138, 139, 147, 188, 189, 204, 206, 207, 224], "document": [75, 87, 91, 129, 135, 144, 145, 147, 184, 185, 188, 189, 198, 213, 220, 221, 228, 229, 235], "suffic": 75, "most": [75, 76, 87, 94, 129, 134, 135, 136, 138, 147, 172, 176, 180, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 209, 216, 222, 224, 226, 228, 231, 235], "m": [75, 87, 149, 150, 154, 156, 158, 180, 186, 191, 196, 203, 224, 231], "d_view": [75, 173], "execution_spac": [75, 76, 81, 87, 92, 129, 135, 150, 151, 152, 159, 173, 180, 194, 196, 200, 204, 229], "host_mirror_spac": [75, 76, 172, 180, 208], "h_view": [75, 173], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 180, 217], "t_dev": 75, "hostmirror": [75, 76, 77, 172, 180, 196, 231], "t_host": 75, "const_data_typ": [75, 76, 77, 180], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 129, 173, 174, 175, 176, 177, 178, 180, 204, 217], "randomaccess": [75, 76, 180, 204], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 193, 227], "t_dev_um": 75, "unmanag": [75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 176, 180, 181, 194, 196, 227, 237], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 148, 153, 155, 157, 162, 171, 174, 175, 176, 177, 178, 179, 180, 203, 204, 217], "kokkos_impl_ctor_default_arg": [75, 177, 178], "n1": [75, 76, 79, 148, 153, 155, 157, 159, 162, 171, 174, 175, 176, 177, 178, 179, 180, 203, 204, 217], "n2": [75, 76, 79, 148, 153, 155, 157, 159, 171, 174, 175, 176, 177, 178, 179, 180, 204], "n3": [75, 76, 79, 153, 155, 157, 159, 174, 175, 176, 177, 178, 180, 204], "n4": [75, 76, 79, 174, 175, 176, 177, 178, 180], "n5": [75, 76, 79, 174, 175, 176, 177, 178, 180], "n6": [75, 76, 79, 174, 175, 176, 177, 178, 180], "n7": [75, 76, 79, 174, 175, 176, 177, 178, 180], "analog": [75, 94, 169, 173], "benefit": [75, 216], "nonzero": 75, "impl": [75, 79, 87, 149, 152, 172, 177, 178, 188, 208], "viewctorprop": [75, 79, 172, 177, 178], "arg_prop": [75, 79, 172, 177, 178], "enable_if": 75, "has_point": 75, "wrap": [75, 76, 180, 181, 189, 196, 204], "up": [75, 87, 94, 133, 136, 174, 175, 176, 180, 188, 189, 194, 195, 200, 201, 204, 224, 234], "viewctor": 75, "thing": [75, 87, 129, 182, 188, 189, 196, 198, 199, 201, 202, 204, 235], "ctor": 75, "ss": 75, "ls": [75, 151, 234], "ds": 75, "ms": [75, 129, 135], "shallow": [75, 196, 200, 204], "sd": 75, "s1": [75, 129, 135, 176], "s2": [75, 129, 135, 176], "s3": [75, 176], "arg0": 75, "arg": [75, 76, 77, 84, 132, 148, 150, 152, 159, 169, 171, 179, 180, 181, 195], "d_view_": 75, "h_view_": 75, "caller": [75, 129], "sure": [75, 189, 194, 200, 204, 205], "ensur": [75, 86, 132, 133, 134, 169, 188, 189, 195, 199, 202, 204, 209, 220], "mark": [75, 200, 204, 220, 235], "if_c": 75, "is_sam": [75, 84, 92, 172, 173, 196, 203, 204], "memory_spac": [75, 76, 81, 87, 92, 126, 127, 128, 129, 135, 172, 173, 180, 181, 196, 204, 217, 230], "get_device_sid": 75, "specif": [75, 85, 87, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 143, 150, 151, 152, 159, 173, 184, 185, 187, 189, 192, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 213, 220, 223, 224, 226], "afraid": 75, "express": [75, 83, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 136, 163, 186, 189, 201, 202, 203, 205, 213, 230], "That": [75, 76, 87, 143, 180, 194, 195, 196, 200, 203, 204, 205], "tell": [75, 94, 194, 199, 200, 203, 205, 232, 235], "what": [75, 88, 121, 129, 131, 135, 182, 184, 185, 188, 196, 198, 199, 200, 202, 217, 222, 229, 233], "els": [75, 94, 145, 146, 163, 204, 207, 229, 234], "suppos": [75, 84, 202, 203, 229], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 204], "dual": [75, 82, 211], "want": [75, 84, 187, 198, 199, 200, 202, 229, 235], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 173], "non_const_data_typ": [75, 76, 77, 180], "need_sync": 75, "been": [75, 87, 88, 91, 189, 194, 196, 197, 199, 202, 203, 204, 224, 226, 233, 234], "In": [75, 76, 86, 87, 88, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 145, 147, 149, 154, 156, 158, 163, 173, 180, 182, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 211, 220, 223, 224, 226, 227, 228, 229, 231, 233, 235], "discard": [75, 79], "modif": [75, 197, 213, 231], "doesn": [75, 143, 145, 172, 189, 194, 200, 205], "know": [75, 188, 189, 190, 196, 198, 203, 205, 235], "whether": [75, 76, 77, 82, 87, 88, 99, 129, 131, 135, 147, 152, 180, 191, 198, 199, 200, 203, 204, 211, 213, 217, 220, 221, 223, 229, 234, 235], "inlin": [75, 77, 84, 150, 152, 194, 196, 200, 208], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 180, 189, 194, 199, 211, 230], "referenc": [75, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 179, 180, 196, 204, 220], "address": [75, 76, 79, 99, 100, 101, 102, 103, 104, 105, 106, 137, 180, 184, 188, 189, 194, 197, 199, 201, 209, 212, 220, 224], "null": [75, 76, 77, 79, 82, 126, 128, 132, 134, 180], "pointer": [75, 76, 77, 79, 81, 82, 94, 126, 127, 128, 129, 132, 134, 151, 172, 176, 177, 178, 180, 181, 187, 196, 200, 202, 208, 229, 233], "span": [75, 76, 77, 82, 180], "span_is_contigu": [75, 76, 77, 173, 180], "contigu": [75, 76, 77, 85, 173, 174, 175, 180, 184, 203, 204, 229, 232], "ityp": [75, 76, 77, 154, 156, 158, 179, 180], "stride_": 75, "is_integr": [75, 154, 156, 158, 179], "r": [75, 173, 179, 180, 202, 206, 213, 217, 228, 231], "extent_int": [75, 76, 77, 180], "integr": [75, 76, 77, 88, 136, 139, 179, 180, 220, 222, 224], "kokkos_dynrankview": [76, 208], "potenti": [76, 77, 81, 88, 94, 135, 144, 145, 149, 151, 173, 180, 187, 193, 194, 197, 199, 200, 205, 233], "compil": [76, 85, 87, 88, 92, 129, 136, 138, 148, 150, 173, 180, 184, 185, 187, 188, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 212, 215, 220, 223, 228, 229, 232, 233, 235, 236], "Its": [76, 180, 196], "shared_ptr": [76, 180], "upper": [76, 204], "bound": [76, 77, 81, 85, 88, 148, 150, 194, 196, 204, 211, 224, 227], "layouttyp": [76, 77, 180], "fundament": [76, 84, 85, 94, 129, 135, 147, 180, 184, 185, 186, 197, 199, 201, 220, 229], "mandatori": [76, 196], "scalartyp": [76, 180, 192, 193], "storag": [76, 80, 107, 126, 127, 128, 152, 176, 180, 199, 201, 202, 232], "come": [76, 87, 180, 187, 189, 195, 197, 198, 200, 201, 203, 204, 205, 220, 228, 230, 233, 235], "some": [76, 94, 127, 129, 136, 137, 143, 151, 152, 153, 154, 155, 156, 159, 176, 180, 189, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 212, 217, 220, 224, 226, 228, 229, 231, 233, 235], "ones": [76, 130, 180, 188, 194, 195, 199, 233], "right": [76, 136, 148, 180, 195, 199, 200, 202, 203, 204, 213, 218, 228], "left": [76, 94, 136, 148, 180, 203, 204, 217, 228], "laid": [76, 180, 196], "out": [76, 86, 133, 174, 175, 176, 180, 188, 189, 196, 200, 202, 204, 213, 222, 228, 235], "control": [76, 126, 127, 128, 134, 150, 151, 180, 189, 194, 199, 200, 201, 202, 204, 205, 211, 224, 232], "finer": 76, "grain": [76, 204], "manner": [76, 91, 180], "trigger": [76, 135, 180], "textur": [76, 180, 204], "fetch": [76, 180, 204, 224], "restrict": [76, 77, 149, 177, 178, 179, 180, 196, 199, 200, 201, 204, 205, 224], "There": [76, 81, 87, 94, 129, 134, 135, 147, 159, 180, 182, 187, 188, 189, 196, 201, 202, 205, 220, 222, 228, 229, 231], "alias": [76, 81, 151, 180, 188, 195, 204], "scope": [76, 86, 133, 134, 180, 188, 200, 201, 204, 212, 233, 235], "enforc": [76, 180, 194, 202, 205], "specifi": [76, 77, 79, 81, 82, 85, 87, 88, 92, 121, 126, 127, 129, 130, 144, 145, 148, 150, 151, 152, 169, 171, 172, 179, 180, 189, 193, 194, 195, 196, 201, 205, 223, 224, 232, 235], "variabl": [76, 77, 79, 84, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 174, 175, 188, 189, 190, 191, 194, 200, 205, 212, 217, 224, 231], "rank_dynam": [76, 180], "reference_type_is_lvalue_refer": [76, 77, 180], "lvalu": [76, 77, 180, 204], "scalar_array_typ": [76, 180], "properli": [76, 91, 180, 198, 224, 235], "specialis": [76, 180, 204], "sacado": [76, 180], "fad": [76, 180], "const_scalar_array_typ": [76, 180], "non_const_scalar_array_typ": [76, 180], "strip": [76, 180], "const_value_typ": [76, 180], "non_const_value_typ": [76, 145, 173, 180], "certain": [76, 87, 88, 129, 135, 147, 150, 173, 180, 187, 189, 196, 201, 205, 213, 235], "compound": [76, 180], "memory_trait": [76, 180], "non_const_typ": [76, 77, 180], "const_typ": [76, 77, 180], "handl": [76, 77, 81, 94, 144, 145, 146, 149, 151, 154, 156, 158, 180, 194, 196, 198, 200, 202, 204, 229, 235], "reference_typ": [76, 77, 180], "pointer_typ": [76, 77, 180], "size_typ": [76, 81, 82, 87, 180, 200, 204, 229], "partial": [76, 87, 145, 146, 180, 187, 200], "No": [76, 77, 166, 180], "made": [76, 77, 87, 180, 196, 198, 199, 205, 220, 235], "nullptr": [76, 132], "dt": [76, 79, 180], "prop": [76, 180], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 180], "is_regular": [76, 180], "standard": [76, 77, 81, 83, 87, 89, 91, 136, 138, 139, 163, 167, 180, 188, 189, 197, 200, 202, 207, 211, 220, 223, 235], "profil": [76, 77, 127, 143, 144, 145, 146, 180, 210, 237], "allocproperti": [76, 180], "view_alloc": [76, 79, 97, 172, 177, 178, 180, 204], "ptr": [76, 87, 126, 128, 135, 176, 180, 204], "required_allocation_s": [76, 180], "nr": [76, 180], "wrapper": [76, 152, 180, 189, 205], "TO": [76, 213], "BE": [76, 213], "scratchspac": [76, 180, 194], "sizeof": [76, 159, 171, 179, 180, 194, 196, 198, 204, 230, 235], "typic": [76, 135, 180, 187, 189, 194, 195, 196, 198, 200, 204, 224, 226, 229, 235], "team_handl": [76, 149, 151, 154, 156, 158, 180], "i0": [76, 77, 144, 145, 153, 155, 157, 179, 180, 217], "i1": [76, 153, 155, 157, 179, 180, 217], "i2": [76, 153, 155, 157, 179, 180], "i3": [76, 153, 155, 157, 180], "i4": [76, 180], "i5": [76, 180], "i6": [76, 180], "beyond": [76, 87, 151, 180, 189, 199, 205, 228], "kokkos_debug": [76, 180, 189], "dim": [76, 77, 79, 180, 227], "architectur": [76, 77, 83, 180, 184, 185, 187, 189, 194, 197, 199, 201, 204, 205, 210, 224, 228, 231, 232], "effici": [76, 77, 81, 180, 197, 203, 204], "cast": [76, 77, 180, 204], "applic": [76, 77, 180, 188, 189, 190, 195, 196, 197, 199, 200, 201, 203, 204, 205, 209, 210, 220, 224, 227, 231, 233, 234, 237], "stride_0": [76, 77, 180], "stride_1": [76, 77, 180], "stride_2": [76, 77, 180], "stride_3": [76, 77, 180], "stride_4": [76, 77, 180], "stride_5": [76, 77, 180], "stride_6": [76, 77, 180], "stride_7": [76, 77, 180], "lowest": [76, 127, 139, 180], "highest": [76, 129, 180, 195, 197, 220], "due": [76, 180, 196, 197, 198, 202, 204, 235], "pad": [76, 172, 180, 181, 199, 201, 202, 204], "belong": [76, 180], "n8": [76, 180], "byte": [76, 127, 128, 135, 136, 152, 180, 204], "use_count": [76, 77, 180], "aim": [76, 180, 204, 220], "legal": [76, 78, 149, 151, 153, 154, 155, 156, 163, 180, 194, 200, 201, 204], "intercept": [76, 180], "illeg": [76, 180, 194, 204], "dsttype": [76, 180], "srctype": [76, 180], "dst_view": [76, 180], "src_view": [76, 180], "scrtype": 76, "met": [76, 180, 213, 221, 223], "is_const": [76, 180], "memoryspaceaccess": [76, 87, 180], "furthermor": [76, 180, 187, 194, 195, 196, 200, 201, 204, 216, 220, 221, 230], "neither": [76, 144, 145, 146, 180, 202, 213], "nor": [76, 144, 145, 146, 180, 202, 213], "k": [76, 87, 94, 129, 149, 150, 155, 158, 173, 180, 194, 203, 204], "hold": [76, 81, 180, 204, 233], "cstdio": [76, 144, 145, 146, 173, 180, 184, 185, 186, 217, 235], "atoi": [76, 121, 144, 145, 146, 173, 180, 217], "inita": [76, 180, 217], "initb": [76, 180, 217], "const_a": [76, 180, 217], "const_b": [76, 180, 217], "setc": [76, 180, 217], "kokkos_dynamicview": 77, "parent": [77, 203, 234], "array_typ": [77, 192, 193], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 135, 150, 152, 194, 200, 230], "rais": [77, 197, 208], "nearest": [77, 138], "power": [77, 136, 138, 196, 197, 222, 224], "resize_seri": 77, "reserv": [77, 82, 195, 204], "amount": [77, 87, 129, 187, 194, 200, 201], "suffici": [77, 188, 200, 204, 226], "chunk_siz": [77, 87, 150, 152], "outsid": [77, 94, 189, 194, 196, 199, 204, 222, 236], "region": [77, 85, 143, 144, 145, 146, 194, 195, 196, 198, 199, 204, 235], "allocation_ext": 77, "noexcept": [77, 151, 165, 168, 217], "multipli": [77, 102, 105, 120, 164, 194], "alwai": [77, 87, 94, 184, 185, 194, 202, 204, 230], "until": [77, 86, 87, 94, 132, 134, 151, 180, 187, 202, 211, 220, 230, 231, 234], "greater": [77, 131, 136, 167, 204], "initializedata": 77, "kokkos_offsetview": [78, 208], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 129, 130, 132, 134, 135, 136, 137, 138, 139, 161, 163, 165, 167, 168, 169, 170, 173, 180, 187, 189, 194, 196, 197, 200, 202, 203, 204, 211, 217, 230, 233], "ov": 78, "initializer_list": [78, 148], "instead": [78, 81, 129, 130, 131, 135, 138, 161, 180, 194, 195, 200, 202, 204, 212, 217], "obtain": [78, 194, 195, 196, 204, 224, 229], "begin0": 78, "end0": 78, "exactli": [78, 87, 135, 202, 204], "drop": [78, 132, 189, 196], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 160, 203], "21": [78, 189, 216], "assert_eq": 78, "deep": [78, 92, 135, 173, 196, 231], "sens": [78, 147, 198, 199, 202, 204, 235], "similarli": [78, 94, 235], "kokkos_scatterview": [79, 208], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 127, 128, 159], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 229], "exec_spac": [79, 173, 181], "scatteraccess": 79, "accumul": [79, 199, 200, 234], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 135, 138, 146, 195, 198, 199, 204, 206, 217, 231, 235], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 144, 145, 159, 180, 200, 204, 217], "bar": [79, 217], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 208], "simplifi": [80, 192], "manipul": [80, 89, 127, 128, 138, 180], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 208], "design": [81, 82, 94, 189, 196, 197, 199, 202, 210, 220, 223, 224, 229, 231, 233, 234], "ten": [81, 194], "thousand": [81, 229], "consequ": [81, 194, 200, 202], "significantli": [81, 187], "unordered_map": 81, "fail": [81, 127, 173, 202, 204, 222, 224, 233, 235, 236], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 94, 143, 159, 173, 187, 189, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 220, 226, 228, 233, 235], "cach": [81, 135, 152, 187, 189, 194, 196, 199, 201, 204], "friendli": [81, 83, 84, 139, 204, 232], "pod": [81, 145, 146, 194], "plain": [81, 184, 185, 204], "trivial": [81, 94], "copyabl": 81, "capacity_hint": 81, "enough": [81, 87, 220, 222, 228], "requested_capac": 81, "lower": [81, 194], "o": [81, 189, 199], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "success": [81, 127, 128, 224], "successfulli": [81, 221], "present": [81, 87, 131, 186, 188, 199, 220, 224], "did": [81, 191], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 235], "duplic": [81, 87, 202], "togeth": [81, 87, 200, 201, 229], "report": [81, 220, 223, 224], "impli": [81, 143, 150, 159, 213], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 109, 111, 213], "atomic_add_typ": 81, "atomic_add": [81, 104, 187], "pattern": [81, 85, 87, 92, 121, 129, 147, 149, 150, 187, 194, 204, 206, 228, 237], "umap": 81, "kokkos_vector": [82, 208], "overcom": [82, 94], "issu": [82, 83, 137, 138, 151, 173, 180, 189, 194, 196, 199, 200, 202, 204, 207, 210, 216, 219, 222, 223, 224], "reli": [82, 180, 199, 202, 220], "heavili": [82, 189, 205], "grant": 82, "mani": [82, 87, 88, 94, 129, 188, 189, 197, 199, 200, 201, 202, 204, 205, 224, 232, 233, 235], "limit": [82, 87, 94, 139, 152, 186, 188, 189, 194, 197, 199, 202, 204, 213, 216, 222, 223, 234], "below": [82, 87, 91, 94, 121, 131, 132, 136, 138, 139, 144, 145, 150, 180, 189, 192, 204, 205, 211, 220, 224, 230], "synopsi": [82, 138], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 194], "back": [82, 94, 187, 189, 194, 195, 199, 201, 231], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 182, 199], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 94, 127, 129, 202, 211], "buffer": [82, 135, 194, 229], "dispatch": [83, 85, 94, 143, 144, 145, 146, 147, 152, 157, 158, 159, 194, 196, 199, 215, 228, 233, 237], "task": [83, 85, 187, 199, 201, 220, 225, 237], "common": [83, 86, 87, 89, 129, 135, 137, 139, 147, 172, 173, 178, 189, 190, 191, 194, 196, 200, 201, 202, 205, 229], "mathemat": [83, 89, 138, 139, 202, 224], "style": [83, 134, 189, 205, 217, 223], "port": [83, 201, 204], "hardwar": [83, 135, 159, 187, 189, 194, 195, 197, 199, 200, 201, 212, 220, 223, 224], "idiom": [83, 94], "recogn": [83, 84, 134, 182, 194, 196, 202, 205], "sfina": [83, 84, 139], "macro": [83, 91, 144, 163, 189, 196, 200, 204, 224, 236], "etc": [83, 135, 151, 188, 189, 204], "kokkos_detectionidiom": [84, 208], "extens": [84, 166, 189, 206, 210, 220, 223, 224], "iso": [84, 87, 184, 185, 186, 202, 204], "iec": 84, "ts": [84, 151, 234], "19568": 84, "2017": [84, 222], "draft": [84, 87, 220], "cplusplu": 84, "github": [84, 189, 198, 207, 210, 220, 221, 222, 223, 235], "io": 84, "v2": [84, 92, 224], "html": [84, 138, 159], "meta": [84, 189], "origin": [84, 102, 104, 105, 128, 159, 187, 202, 203, 204, 206, 222, 224, 233], "propos": [84, 184, 185, 186, 202, 210, 220, 223], "www": [84, 206], "open": [84, 138, 148, 150, 152, 196, 207, 210, 221, 224], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 138], "paper": [84, 206], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 189, 205, 220], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 139], "true_typ": [84, 139], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 132, 176, 204, 220], "is_detect": 84, "alia": [84, 129, 135, 171, 184, 185, 203, 204, 230], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 94, 121, 185, 188, 194, 196, 197, 200, 202, 203, 205, 220, 221], "is_detected_convert": 84, "To": [84, 94, 127, 128, 135, 144, 172, 173, 189, 190, 194, 197, 198, 200, 203, 204, 205, 207, 211, 220, 221, 224, 227, 235], "is_convert": 84, "later": [84, 129, 188, 191, 198, 200, 202, 204, 212, 235], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 203], "Then": [84, 189, 203, 204, 205], "easili": [84, 198, 204, 234, 235], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 135, 179, 204], "diff_t": 84, "declar": [84, 138, 145, 188, 200, 204, 212], "our": [84, 198, 199, 201, 224, 227, 235], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 94, 121, 129, 135, 147, 184, 185, 194, 197, 201, 202, 210], "place": [85, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 128, 129, 135, 146, 147, 194, 195, 196, 198, 200, 201, 202, 222, 224, 229, 235], "nestedpolici": 85, "summari": [85, 222, 224], "setter": [85, 148, 150, 194], "hip": [85, 87, 88, 93, 135, 148, 150, 159, 173, 189, 195, 200, 204, 210, 211, 223, 224], "sycl": [85, 87, 88, 93, 135, 138, 148, 150, 159, 189, 195, 210, 211, 216], "schedul": [85, 87, 148, 150, 152, 194, 234], "through": [85, 94, 144, 145, 146, 148, 150, 151, 187, 189, 191, 194, 197, 198, 199, 200, 202, 203, 204, 206, 207, 220, 224, 226, 229, 235], "steal": [85, 148, 150], "queue": [85, 148, 150, 159, 220, 234], "machin": [85, 148, 150, 189, 197, 201, 202, 205, 215, 222, 224], "backend": [85, 86, 87, 131, 135, 138, 148, 150, 153, 155, 157, 159, 165, 169, 188, 189, 195, 196, 200, 205, 210, 216, 222, 223, 230, 231, 235], "indextyp": [85, 87, 148, 149, 150, 152, 194], "travers": [85, 148, 150], "launchbound": [85, 87, 148, 150], "maxthread": [85, 148, 150], "minblock": [85, 148, 150], "launch": [85, 92, 94, 143, 148, 150, 151, 152, 194, 204, 224, 231, 233, 234], "worktag": [85, 145, 146, 148, 150, 193, 208], "someclass": [85, 148, 150], "detail": [86, 87, 91, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 135, 139, 144, 162, 179, 188, 189, 190, 193, 195, 197, 200, 204, 205, 220, 221, 224], "shutdown": 86, "resourc": [86, 133, 135, 150, 159, 194, 195, 198, 199, 200, 201, 210, 223, 231, 234, 235], "destruct": [86, 87], "thu": [86, 145, 149, 151, 180, 186, 189, 194, 195, 196, 198, 200, 201, 204, 220, 222, 230, 231, 234, 235, 236], "context": [86, 87, 94, 133, 134, 153, 154, 155, 156, 157, 158, 180, 227, 228, 231, 235], "automat": [86, 121, 131, 135, 189, 195, 196, 200, 202, 204, 209, 223, 228, 230], "aid": 86, "mistak": 86, "live": [86, 204, 220], "my_view": [86, 132, 133, 134, 174, 175], "destructor": [86, 132, 133, 134, 151, 204, 217], "switch": [86, 187, 196, 222], "subsequ": [86, 94, 134, 152, 229], "driven": [87, 220], "essenti": [87, 202, 224], "incept": 87, "recent": [87, 222], "readili": 87, "fact": [87, 233], "hasn": 87, "realli": [87, 132, 189, 198, 205], "even": [87, 94, 128, 129, 132, 133, 135, 145, 188, 189, 193, 196, 199, 201, 203, 204, 213, 226, 229, 233, 236], "agre": [87, 221], "merg": [87, 220, 222, 223, 224], "languag": [87, 88, 91, 129, 135, 147, 188, 197, 199, 200, 202, 203, 204, 205, 206, 227], "featur": [87, 88, 129, 135, 147, 166, 188, 189, 194, 196, 200, 202, 204, 205, 207, 211, 220, 221, 222, 224], "consid": [87, 182, 187, 188, 194, 198, 202, 203, 204, 220, 221, 233, 235], "formal": [87, 92, 129, 135, 147, 182, 199], "rapid": [87, 211], "expans": 87, "demand": [87, 230], "lack": [87, 200, 201], "harden": 87, "acut": 87, "ever": [87, 129, 135, 147, 194, 204], "project": [87, 188, 189, 199, 205, 207, 219, 221, 223, 224], "horizon": 87, "resili": [87, 210], "few": [87, 94, 129, 189, 194, 204, 224], "best": [87, 184, 185, 188, 195, 204, 231, 234], "core": [87, 88, 187, 189, 194, 195, 197, 199, 201, 207, 210, 220, 223, 224, 232], "addition": [87, 92, 129, 172, 180, 191, 204], "promot": [87, 129, 135, 137, 213, 220, 224], "plan": [87, 94, 200, 210], "good": [87, 94, 129, 187, 188, 194, 200, 201, 204, 207, 213, 232, 233], "holist": 87, "interact": [87, 160, 189, 221, 230, 233], "experi": [87, 197, 201, 204, 224], "garner": 87, "year": [87, 188, 206, 220, 221, 222], "particip": [87, 203, 220, 223], "executor": 87, "effort": [87, 188, 189, 204, 210, 220, 224], "2011": [87, 199, 200], "sutton": 87, "stroustrup": 87, "guid": [87, 147, 197, 200, 210], "particular": [87, 118, 119, 124, 129, 187, 189, 194, 195, 196, 200, 201, 204, 205, 213, 216, 223, 224, 229, 233], "constraint": [87, 194], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 94], "flexibl": [87, 129, 196], "eas": 87, "learn": [87, 129, 200], "far": [87, 94, 199, 204, 233], "though": [87, 135, 189, 236], "pure": [87, 196, 197, 235], "veri": [87, 94, 189, 199, 200, 202, 205, 229], "slightli": [87, 196], "By": [87, 189, 194, 199, 200, 201, 202, 204], "minim": [87, 188, 191, 195, 200, 220], "cognit": 87, "perhap": 87, "import": [87, 189, 194, 196, 199, 200, 203, 204, 220, 224, 228, 231], "subsumpt": 87, "hierarchi": [87, 129, 194, 201, 210], "branch": [87, 151, 153, 154, 155, 156, 194, 201, 207, 216, 220, 222, 223, 224], "width": [87, 202, 222], "roughli": [87, 194, 221], "speak": [87, 94, 235], "high": [87, 94, 152, 188, 194, 197, 201, 202, 204, 205, 206, 220], "major": [87, 88, 188, 196, 202, 204, 210, 220, 223, 224], "visibl": [87, 129, 135], "minor": [87, 88, 188, 220], "memorylayout": 87, "taskschedul": [87, 94], "treat": [87, 135, 199, 200, 224], "kokkos_concept": 87, "enumer": [87, 188], "iterationpattern": 87, "question": [87, 197, 213, 220, 221], "friend": [87, 94], "rather": [87, 94, 129, 135, 195, 205], "alik": 87, "extern": [87, 94, 189, 204, 207, 223, 237], "off": [87, 199, 204, 211, 234], "look": [87, 129, 195, 198, 200, 202, 203, 204, 235], "ex": [87, 92, 129], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 129, 151, 194], "ostream": [87, 129], "ostr": [87, 129], "in_parallel": [87, 129], "print_configur": [87, 129, 131], "ve": [87, 198, 235], "extrapol": 87, "progress": [87, 199, 201, 220, 221, 222], "eventu": [87, 188], "further": [87, 145, 189, 194, 198, 202, 204, 220, 224, 229, 234, 235], "cannot": [87, 129, 130, 134, 136, 143, 181, 195, 202, 220, 234], "constrain": [87, 201], "known": [87, 137, 138, 199, 203, 210, 216, 222, 229], "decid": [87, 199, 200, 223, 224], "argu": 87, "around": [87, 176, 189, 196, 198, 204, 216, 226, 229, 231, 235, 236], "wherebi": 87, "meet": [87, 92, 129, 149, 151, 172, 179, 220, 221, 223], "definit": [87, 121, 163, 182, 199, 200, 228, 229, 233, 236], "practic": [87, 94, 129, 135, 138, 147, 159, 180, 197, 202, 204, 231, 233], "converg": [87, 197], "relev": [87, 102, 104, 105, 210, 220, 229], "site": [87, 224], "artifact": 87, "assess": [87, 221], "intent": [87, 188, 204, 227], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 204], "kokkos_parallel": 87, "technic": [87, 204, 205], "correct": [87, 90, 94, 189, 194, 198, 200, 203, 204, 221, 224, 235], "rvalu": 87, "wouldn": [87, 191], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 151, 194, 200], "implexecutionspaceof": 87, "exclud": [87, 188, 200], "uniquetoken": 87, "add": [87, 121, 123, 144, 182, 187, 188, 189, 192, 194, 196, 199, 202, 204, 205, 209, 220, 226, 233, 234], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 199], "teampolicyintern": [87, 208], "nice": [87, 202], "could": [87, 188, 191, 198, 199, 201, 203, 204, 220, 235], "refactor": 87, "noth": [87, 126, 129, 135, 147, 163, 199, 200, 204], "mind": [87, 204], "close": [87, 194, 200, 202, 207, 220], "semiregular": 87, "todo": [87, 198, 235], "openmptargetspac": 87, "hbwspace": [87, 88, 204], "mem": [87, 184, 186], "dealloc": [87, 125, 126, 127, 128, 135, 180, 196, 203, 204, 232], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 92], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 220, 224], "exec": 87, "think": [87, 94, 132, 204, 226, 235], "achiev": [87, 135, 194, 196, 204, 224, 228], "signific": [87, 136, 204, 231, 233], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 149], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 147, 150, 152], "cours": 87, "execution_polici": [87, 150, 170], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 150, 152], "complic": [87, 200, 204], "pretti": [87, 94, 129], "straightforward": [87, 172, 228, 229], "iteratetil": 87, "seem": [87, 205], "kokkos_openmp_parallel": 87, "were": [87, 129, 137, 138, 139, 186, 198, 199, 224, 235], "conceptu": [87, 232], "surfac": 87, "area": [87, 128], "Of": [87, 199, 211], "d": [87, 153, 157, 169, 176, 179, 188, 192, 193, 194, 198, 199, 200, 202, 203, 204, 228, 235], "still": [87, 88, 159, 187, 188, 191, 194, 202, 204, 231], "shortcut": [87, 129, 147], "probabl": [87, 94, 194, 200, 202], "teach": [87, 200], "advanc": [87, 129, 200, 224, 237], "ax": [87, 231], "me": 87, "why": [87, 195, 231], "axi": 87, "extend": [87, 197], "overhead": [87, 94, 143, 200, 202, 204, 228], "describ": [87, 94, 121, 129, 135, 147, 152, 186, 190, 197, 198, 199, 201, 202, 206, 207, 211, 217, 224, 231, 232, 234, 235], "isn": [87, 94, 129, 198, 235], "concern": [87, 197, 199, 229, 233], "simplest": [87, 194, 195, 229], "But": [87, 190, 194, 198, 204, 233], "kokkos_vers": 88, "patch": [88, 220], "10000": [88, 200, 204], "kokkos_enable_debug": [88, 163, 211], "kokkos_enable_debug_bounds_check": [88, 211], "kokkos_enable_debug_dualview_modify_check": [88, 211], "kokkos_enable_deprecated_code_3": 88, "kokkos_enable_deprecation_warn": 88, "warn": [88, 131, 180, 188, 204, 205, 208, 211, 216, 220, 222], "kokkos_enable_hbwspac": 88, "kokkos_enable_memkind": [88, 211], "kokkos_enable_tun": [88, 211], "bind": [88, 195, 210, 211, 227], "tune": [88, 189, 205, 211, 228, 237], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 127, 181, 202, 204, 223, 232], "kokkos_enable_aggressive_vector": [88, 211], "assumpt": [88, 195], "ignor": [88, 94, 194, 195, 202], "aggress": [88, 204, 211], "ifdef": [88, 196], "kokkos_enable_seri": [88, 189, 211], "kokkos_enable_openmp": [88, 189, 211], "kokkos_enable_openmptarget": [88, 211], "kokkos_enable_thread": [88, 189, 211], "kokkos_enable_cuda": [88, 189, 211], "kokkos_enable_hip": [88, 189, 211], "kokkos_enable_hpx": [88, 211], "kokkos_enable_sycl": [88, 189, 211], "kokkos_enable_cuda_constexpr": [88, 211], "kokkos_enable_cuda_lambda": [88, 211], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 211], "intrins": [88, 121, 136, 184, 185, 190, 196, 202, 204, 211, 227], "kokkos_enable_cuda_relocatable_device_cod": [88, 211], "relocat": [88, 205, 211, 223], "kokkos_enable_cuda_uvm": [88, 211, 225], "kokkos_enable_hip_multiple_kernel_instanti": [88, 211], "instanti": [88, 188, 199, 201, 202, 204, 211], "improv": [88, 188, 197, 200, 201, 211, 216, 221, 228], "kokkos_enable_hip_relocatable_device_cod": [88, 211], "latest": [88, 91, 188, 216], "path": [88, 131, 188, 189, 211, 220, 224, 229], "expos": [88, 129, 193, 194, 201, 228], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 121, 163, 188, 190, 195, 199, 201, 204, 205, 220, 221, 224, 226, 229, 232, 235], "libari": 88, "kokkos_enable_hwloc": [88, 189, 211], "libhwloc": [88, 189], "numa": [88, 195], "kokkos_enable_librt": [88, 211], "link": [88, 91, 180, 189, 205, 210, 224, 228], "posix": 88, "librt": [88, 189, 211], "backward": [88, 134, 215], "memkind": [88, 211], "heap": 88, "kokkos_enable_libdl": [88, 211], "linker": [88, 189, 205], "libdl": [88, 211], "kokkos_enable_libquadmath": 88, "gcc": [88, 189, 205, 212, 216, 222, 223], "quad": 88, "precis": [88, 189, 198, 227, 229, 233, 235], "math": [88, 89, 202, 210, 237], "kokkos_arch_sse42": 88, "sse": 88, "kokkos_arch_armv80": [88, 211], "armv8": [88, 189, 211], "kokkos_arch_armv8_thunderx": [88, 211], "cavium": [88, 224], "thunderx": [88, 189, 224], "kokkos_arch_armv81": [88, 211], "kokkos_arch_armv8_thunderx2": [88, 211], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 211], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 211], "intel": [88, 189, 194, 202, 211, 216, 220, 222, 223, 224], "knight": [88, 224], "corner": [88, 218], "xeon": [88, 189, 224], "phi": [88, 137, 189], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power7": [88, 211], "ibm": [88, 189, 216, 222], "power7": [88, 189, 211], "kokkos_arch_power8": [88, 211], "power8": [88, 189, 211, 222], "kokkos_arch_power9": [88, 211], "power9": [88, 211], "kokkos_arch_intel_gen": [88, 211], "kokkos_arch_intel_dg1": [88, 211], "iri": [88, 211], "xemax": [88, 211], "kokkos_arch_intel_gen9": [88, 211], "gen9": [88, 211], "kokkos_arch_intel_gen11": [88, 211], "gen11": [88, 211], "kokkos_arch_intel_gen12lp": [88, 211], "gen12lp": [88, 211], "kokkos_arch_intel_xehp": [88, 211], "xe": [88, 211], "hp": [88, 211], "kokkos_arch_intel_pvc": [88, 211], "pont": [88, 211], "vecchio": [88, 211], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 189, 194, 201, 202, 211, 220, 223, 224, 229], "kepler": [88, 189], "kokkos_arch_kepler30": [88, 211], "cc": [88, 189, 211, 227], "kokkos_arch_kepler32": [88, 211], "kokkos_arch_kepler35": [88, 211], "kokkos_arch_kepler37": [88, 211], "kokkos_arch_maxwel": 88, "maxwel": [88, 189], "kokkos_arch_maxwell50": [88, 211], "kokkos_arch_maxwell52": [88, 211], "kokkos_arch_maxwell53": [88, 211], "kokkos_arch_navi": 88, "amd": [88, 220, 223], "navi": 88, "kokkos_arch_navi1030": [88, 211], "v620": [88, 211], "w6800": [88, 211], "gfx1030": [88, 211], "kokkos_arch_pasc": 88, "pascal": 88, "kokkos_arch_pascal60": [88, 211], "kokkos_arch_pascal61": [88, 211], "kokkos_arch_volta": 88, "volta": 88, "kokkos_arch_volta70": [88, 211], "kokkos_arch_volta72": [88, 211], "kokkos_arch_turing75": [88, 211], "ture": 88, "kokkos_arch_amper": 88, "amper": [88, 211], "kokkos_arch_ampere80": [88, 211], "kokkos_arch_ampere86": [88, 211], "kokkos_arch_ada89": [88, 211], "ada": [88, 211], "kokkos_arch_hopp": 88, "hopper": [88, 211], "kokkos_arch_hopper90": [88, 211], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 211], "kokkos_arch_amd_zen3": 88, "zen3": [88, 211], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 211], "mi25": [88, 211], "gfx900": [88, 211], "kokkos_arch_vega906": [88, 211], "mi50": [88, 211], "mi60": [88, 211], "gfx906": [88, 211], "kokkos_arch_vega908": [88, 211], "mi100": [88, 211], "gfx908": [88, 211], "kokkos_arch_vega90a": [88, 211], "mi200": [88, 211], "seri": [88, 197, 211, 224], "gfx90a": [88, 211], "kokkos_mathematicalconst": [89, 137, 208], "backport": [89, 220], "sqrt2": [89, 137], "kokkos_mathematicalfunct": [89, 138, 208], "consist": [89, 138, 169, 189, 194, 199, 201, 202, 223, 229], "portabl": [89, 129, 137, 187, 196, 197, 199, 200, 202, 206, 212, 220, 227, 228, 230, 232, 237], "fab": [89, 138], "sqrt": [89, 138, 184, 186, 202, 212], "sin": [89, 137, 138, 184], "kokkos_numerictrait": [89, 139, 208], "ad": [89, 102, 104, 105, 139, 169, 186, 188, 189, 194, 202, 205, 220, 234, 235], "23": [89, 139, 206, 209, 210, 223], "numeric_limit": [89, 139], "kokkos_bitmanipul": [89, 136], "individu": [89, 94, 138, 139, 196, 205, 224, 233], "compos": [90, 229], "team_size_max": [90, 152], "team_size_recommend": [90, 140, 141, 142, 152], "strive": [91, 202], "howev": [91, 94, 129, 159, 194, 196, 197, 198, 199, 200, 201, 202, 204, 213, 216, 224, 228, 235], "deviat": 91, "approach": [91, 94, 187, 197, 199, 200, 202, 204, 233, 237], "section": [91, 189, 194, 196, 198, 199, 200, 204, 211, 222, 224, 235], "usag": [91, 93, 131, 133, 134, 143, 144, 158, 160, 169, 184, 185, 186, 189, 196, 201, 203, 204, 205, 227], "guidanc": [91, 184, 207], "relationship": [92, 94, 159, 194, 204], "entiti": [92, 94, 188, 199], "msp1": 92, "msp2": 92, "retriev": [92, 94, 150, 191, 234], "v1": [92, 224], "word": [92, 129, 135, 147, 189, 202], "shape": 92, "attribut": [92, 201, 202, 204, 208], "intercessori": 92, "executionspaceconcept": [93, 143, 172], "defaulthostexecutionspac": [93, 168, 195, 196], "hipspac": [93, 204, 208], "hiphostpinnedspac": [93, 204], "hipmanagedspac": [93, 212], "sycldeviceusmspac": 93, "syclhostusmspac": 93, "syclsharedusmspac": 93, "sharedspac": [93, 225], "sharedhostpinnedspac": [93, 230], "memoryspaceconcept": [93, 172], "lightweight": 94, "substanti": 94, "futur": [94, 129, 195, 197, 201, 204, 215, 220, 222, 234], "Not": [94, 195, 204], "too": [94, 143, 204, 216, 235], "small": [94, 134, 135, 200, 234], "inher": 94, "plenti": 94, "scale": [94, 129, 189, 224], "easier": [94, 200, 207, 230, 232], "hierarch": [94, 153, 154, 155, 156, 157, 158, 199, 200, 201, 215, 234, 237], "ordinari": [94, 200], "portion": [94, 202], "haev": 94, "addit": [94, 129, 138, 173, 190, 195, 197, 199, 200, 202, 204, 220, 228, 233, 235], "output": [94, 129, 176, 187, 193, 195, 201, 224, 228], "mytask": 94, "produc": [94, 197, 200, 202, 229, 231], "task_spawn": [94, 234], "host_spawn": 94, "tasksingl": [94, 234], "taskteam": [94, 144, 145, 146], "former": [94, 189, 200, 204, 224], "worker": [94, 145, 234], "spawn": [94, 234], "basicfutur": [94, 234], "when_al": [94, 234], "scheduler_typ": 94, "discuss": [94, 194, 199, 202, 204, 220, 221], "fut": 94, "mytaskfunctor": 94, "readi": [94, 188, 204], "earliest": 94, "fut2": 94, "myothertaskfunctor": 94, "my_funct": [94, 129], "sched": 94, "my_result_typ": 94, "my_task_result": 94, "ff": [94, 222], "better": [94, 189, 194, 204, 205, 217, 231], "never": [94, 129, 188, 189, 202, 204, 205], "share": [94, 151, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 210, 220, 228, 229, 235], "transit": [94, 211, 220], "undefin": [94, 127, 128, 131, 180, 196, 204, 212, 236], "worst": 94, "kind": [94, 199, 200, 203, 224], "bug": [94, 129, 188, 198, 216, 220, 221, 222, 235], "segfault": [94, 205], "hour": [94, 188], "is_nul": 94, "attempt": [94, 199], "poll": 94, "is_readi": [94, 234], "forbidden": 94, "anywher": 94, "abil": [94, 144, 199, 202, 227], "yet": [94, 128, 166, 182, 188, 197, 199, 202, 203, 220, 222], "extrem": [94, 198, 199, 204, 235], "expens": [94, 203], "sledgehamm": 94, "sparingli": 94, "alon": [94, 189], "pend": 94, "decis": [94, 194, 220, 229], "piec": 94, "help": [94, 192, 195, 197, 200, 204, 205, 235], "cost": [94, 187, 197, 203, 204], "tradit": [94, 135], "reus": [94, 194, 233], "successor": 94, "respawn": [94, 234], "future_typ": [94, 234], "got": 94, "redund": [94, 229], "lead": [94, 129, 188, 194, 198, 204, 205, 220, 230, 235], "lazi": 94, "third": [94, 189, 194, 196, 199, 203, 205, 220, 228], "serv": [94, 129, 220], "observ": [94, 143, 195, 235], "effect": [94, 129, 143, 180, 188, 189, 194, 200, 201, 202, 233, 235], "taskprior": 94, "regular": [94, 204, 220], "low": [94, 187, 197, 200, 202, 204], "boolean": [95, 129, 174, 175, 176, 200, 202], "kokkos_assert": 96, "device_id": [96, 130, 131, 168, 195], "num_thread": [96, 130, 131, 165, 195], "critic": [97, 199, 220], "_view": 97, "awar": [97, 194, 199, 204, 206, 228], "bundl": [97, 181], "loos": [97, 172, 182], "behav": [97, 173, 182, 202, 203, 204], "old_val": [99, 101], "ptr_to_valu": [99, 100, 101, 102, 103, 104, 105, 106], "comparison_valu": [99, 100], "was_exchang": 100, "update_valu": [102, 104, 105], "previou": [102, 134, 137, 138, 152, 178, 194, 208, 222], "atomic_fetch_add": [102, 104, 187, 194], "tmp": [102, 194, 228], "atomic_fetch_and": 102, "atomic_fetch_div": 102, "divid": [102, 105, 144, 145, 146, 164, 192, 193, 226, 231], "atomic_fetch_lshift": 102, "atomic_fetch_max": 102, "atomic_fetch_min": 102, "atomic_fetch_mul": 102, "atomic_fetch_mod": 102, "atomic_fetch_or": 102, "atomic_fetch_rshift": 102, "atomic_fetch_sub": [102, 104], "substract": [102, 105], "atomic_fetch_xor": 102, "atomic_and": 104, "atomic_assign": 104, "atomic_decr": 104, "atomic_incr": [104, 187], "atomic_max": 104, "atomic_min": 104, "atomic_or": 104, "atomic_sub": 104, "subtract": 104, "atomic_add_fetch": 105, "atomic_and_fetch": 105, "atomic_div_fetch": 105, "atomic_lshift_fetch": 105, "atomic_max_fetch": 105, "atomic_min_fetch": 105, "atomic_mul_fetch": 105, "atomic_mod_fetch": 105, "atomic_or_fetch": 105, "atomic_rshift_fetch": 105, "atomic_sub_fetch": 105, "atomic_xor_fetch": 105, "conjunct": [107, 149, 187, 189, 194, 195, 220], "bitwis": [108, 109, 136, 204], "AND": [108, 110, 213], "remove_cv": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "result_view_typ": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 193], "value_": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 193], "local": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 135, 145, 146, 189, 194, 195, 199, 200, 201, 203, 204, 211, 212, 222, 224, 230], "reduction_ident": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 190, 192, 200], "resid": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 135, 201, 230], "customtyp": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123], "_min": [112, 113, 116, 117], "vallocscalar": [113, 115, 122, 194], "loc": [113, 115, 124, 191], "_max": [113, 114, 115, 116, 117], "minmaxscalar": [116, 122, 194], "min_val": [116, 117, 118, 119, 191], "max_val": [116, 117, 118, 119, 191], "minmaxlocscalar": [117, 122, 194], "min_loc": [117, 118, 191], "max_loc": [117, 118, 191], "minvalu": [118, 119], "maxvalu": [118, 119], "hypothet": 121, "brief": [121, 217, 220], "build": [121, 129, 173, 188, 194, 195, 197, 200, 207, 210, 211, 222, 224, 237], "monoid": 121, "val1": 121, "val2": 121, "ident": [121, 150, 152, 172, 192, 194, 199, 200, 204, 226], "el": 121, "under": [121, 173, 188, 189, 200, 204, 207, 213, 220, 224], "reducesum": 121, "lval": 121, "l": [121, 138, 155, 199, 222], "resultvalu": 124, "resultindex": 124, "shrink": [125, 177, 178], "throw": [126, 127, 128, 152, 196, 204], "runtime_error": 126, "failur": [126, 127, 128, 152, 180, 222, 223], "uniniti": [127, 148, 150, 152, 172, 177, 178, 204], "metadata": 127, "succe": 127, "suitabl": [127, 188, 200, 228], "rawmemoryallocationfailur": [127, 128], "thrown": 127, "memadvis": [127, 128, 180], "tool": [127, 131, 144, 145, 146, 188, 210, 211, 237], "kokkosp": 127, "On": [127, 128, 187, 189, 194, 203, 211, 235], "avoid": [127, 128, 129, 188, 194, 203, 204, 205, 212, 220, 222, 235], "leak": [127, 128, 204], "freed": [128, 194, 204], "new_siz": 128, "invalid": [128, 204], "rare": [129, 135], "offload": 129, "talk": [129, 135, 147, 198, 235], "theoret": [129, 135, 147], "treatment": [129, 135, 147], "disclaim": [129, 135, 147, 213], "term": [129, 135, 147, 199, 204, 207, 213, 220, 233], "anyon": [129, 135, 147, 207], "who": [129, 135, 147, 197, 204, 220, 221, 223, 229, 232], "knew": [129, 135, 147], "confus": [129, 135, 147, 204], "often": [129, 135, 147, 180, 187, 194, 196, 197, 199, 200, 202, 204, 224, 229], "shini": [129, 135, 147], "pramet": 129, "surpris": 129, "answer": [129, 194, 204], "ll": [129, 198, 204, 235], "nowher": 129, "intermedi": [129, 200], "static_assert": [129, 173, 203, 230], "incompat": [129, 189], "prefer": [129, 188, 195, 200, 204, 205, 211, 212, 236], "explicit": [129, 138, 144, 174, 175, 176, 194, 200, 201, 212, 220], "simpli": [129, 189, 194, 196, 198, 202, 205, 227, 228, 229, 233, 235], "mental": 129, "exercis": [129, 224], "translat": [129, 198, 235], "tend": [129, 187, 201], "verbos": 129, "much": [129, 144, 188, 193, 197, 199, 200, 202, 204], "risk": [129, 188], "lose": 129, "caution": [129, 189], "necessarili": [129, 173, 194, 196, 201, 204], "strengthen": 129, "unspecifi": [129, 162, 180, 201], "care": [129, 188, 202], "print": [129, 131, 161, 169, 176, 195, 211], "arraylayout": 129, "recommend": [129, 152, 194, 200, 202, 204, 216, 224], "scratchmemoryspac": 129, "ex2": 129, "ex1": 129, "usabl": [129, 136, 204], "shorthand": [129, 135], "typetrait": [129, 135], "num_numa": [130, 195], "ndevic": [130, 195], "skip_devic": [130, 195], "disable_warn": [130, 131, 195], "favor": [130, 198, 235], "One": [130, 152, 187, 189, 191, 194, 196, 202, 204, 228, 229, 233, 235], "distinguish": [130, 139, 200], "kokkoscor": 131, "set_num_thread": [131, 132, 134], "set_device_id": 131, "set_disable_warn": [131, 134], "initializ": 131, "introduc": [131, 194, 200, 201, 223, 230], "unset": 131, "let": [131, 151, 189, 194, 196, 198, 199, 200, 203, 204, 229, 235], "tabl": [131, 189, 195, 204, 224], "set_parameter_nam": 131, "parameter_typ": 131, "parameter_nam": 131, "has_parameter_nam": 131, "get_parameter_nam": 131, "summar": 131, "id": [131, 165, 168, 194, 195, 196], "minu": 131, "map_device_id_bi": 131, "mpi_rank": 131, "round": [131, 138, 195, 199], "robin": [131, 195], "mpi": [131, 133, 134, 187, 189, 195, 197, 203, 205, 225, 232, 237], "disabl": [131, 189, 200], "messag": [131, 195, 197, 203, 220, 222, 224], "configur": [131, 195, 202, 209, 211, 220, 222, 223, 224, 230], "tune_intern": 131, "autotun": 131, "heurist": 131, "tools_lib": 131, "full": [131, 182, 184, 187, 195, 196, 198, 201, 202, 235], "ld_library_path": 131, "tools_help": 131, "command": [131, 132, 134, 189, 205, 224], "line": [131, 132, 134, 135, 187, 189, 204, 223, 236], "tools_arg": 131, "set_print_configur": 131, "set_map_device_id_bi": [131, 132, 134], "environ": [131, 133, 134, 135, 165, 168, 189, 195, 196, 200, 204, 205, 212, 222, 224], "thats": 132, "correctli": [132, 189, 200, 205], "presenc": [132, 139, 212], "unhandl": 132, "charact": 132, "uncondition": 132, "precondit": 132, "is_initi": [132, 133, 134, 163], "unique_ptr": 132, "make_opt": 132, "nullopt": 132, "regardless": [132, 199], "clean": [133, 222], "is_fin": [133, 134, 146, 163], "detroi": 133, "ill": 133, "mpi_fin": [133, 195], "erron": 134, "pars": [134, 189], "whenev": 134, "seen": [134, 188, 197, 224], "decrement": [134, 180, 187, 204], "implicitli": [134, 172], "multibyt": 134, "mpi_init": [134, 195], "side": [135, 143, 163, 180, 194, 200, 201, 203, 221], "virtual": [135, 204, 215, 225], "xnack": 135, "unit": [135, 189, 194, 196, 197, 199, 221], "movement": 135, "os": 135, "driver": [135, 224, 230], "moment": [135, 189, 204], "preprocessor": [135, 189, 205, 236], "kokkos_has_shared_spac": 135, "has_shared_spac": [135, 230], "correspoind": 135, "stai": 135, "availab": 135, "event": [135, 149, 194, 213, 224], "nevertheless": [135, 194, 199, 204, 235], "kokkos_has_shared_host_pinned_spac": 135, "has_shared_host_pinned_spac": 135, "bit_cast": 136, "byteswap": 136, "has_single_bit": 136, "bit_ceil": 136, "bit_floor": 136, "bit_width": 136, "rotl": 136, "rotr": 136, "countl_zero": 136, "countl_on": 136, "countr_zero": 136, "countr_on": 136, "popcount": 136, "reinterpret": 136, "represent": [136, 202, 204], "counterpart": 136, "_builtin": 136, "suffix": [136, 138], "magic": 136, "log2": [137, 138], "log10": [137, 138, 184], "inv_pi": 137, "inv_sqrtpi": 137, "ln2": 137, "ln10": 137, "sqrt3": 137, "inv_sqrt3": 137, "egamma": 137, "toolchain": [137, 189, 212], "henc": [137, 200, 212], "pi_v": 137, "motiv": [138, 197, 202, 232], "borrow": 138, "llvm": 138, "compilecudawithllvm": 138, "clang": [138, 189, 205, 216, 222, 223, 237], "ok": [138, 153, 155, 157, 180, 204, 212], "everyth": [138, 202, 204], "__device__": [138, 196, 212], "nvcc": [138, 189, 216, 222], "overrid": [138, 189, 205, 235], "sinf": 138, "goal": [138, 194, 196, 197, 220, 224, 228, 232], "cmath": 138, "sqrtf": 138, "sqrtl": 138, "integraltyp": 138, "arithmet": [138, 139, 159], "reader": [138, 188, 189, 197, 199], "cpprefer": 138, "com": [138, 206, 209, 210, 221, 222, 223], "fmod": 138, "remaind": 138, "remquo": 138, "fma": [138, 184], "fmax": 138, "fmin": 138, "fdim": 138, "nan": 138, "exp": [138, 184], "exp2": [138, 184], "expm1": 138, "log": [138, 184, 222], "log1p": 138, "exponenti": 138, "pow": [138, 184], "cbrt": [138, 184], "hypot": [138, 184], "co": [138, 184, 188, 220], "tan": [138, 184], "asin": [138, 184], "aco": [138, 184], "atan": [138, 184], "atan2": [138, 184], "trigonometr": 138, "sinh": [138, 184], "cosh": [138, 184], "tanh": [138, 184], "asinh": [138, 184], "acosh": [138, 184], "atanh": [138, 184], "hyperbol": 138, "erf": [138, 184], "erfc": [138, 184], "tgamma": [138, 184], "lgamma": [138, 184], "gamma": 138, "ceil": 138, "floor": 138, "trunc": 138, "lround": 138, "llround": 138, "nearbyint": 138, "rint": 138, "lrint": 138, "llrint": 138, "frexp": 138, "ldexp": 138, "modf": 138, "scalbn": 138, "scalbln": 138, "ilog": 138, "logb": 138, "nextaft": 138, "nexttoward": 138, "copysign": [138, 184], "fpclassifi": 138, "isfinit": 138, "isinf": 138, "isnan": 138, "isnorm": 138, "signbit": 138, "isgreat": 138, "isgreaterequ": 138, "isless": 138, "islessequ": 138, "islessgreat": 138, "isunord": 138, "classif": 138, "4767": 138, "feel": [138, 206], "keep": [138, 203, 204, 232], "track": [138, 220, 221], "bewar": 138, "unqualifi": [138, 212], "qualif": [138, 212], "exeriment": 138, "p1841": 139, "break": [139, 180, 188, 198, 205, 235], "monolith": 139, "apart": [139, 187, 188, 204], "denot": [139, 152, 180], "infin": 139, "finite_min": 139, "finite_max": 139, "epsilon": 139, "round_error": 139, "norm_min": 139, "denorm_min": 139, "reciprocal_overflow_threshold": 139, "quiet_nan": 139, "signaling_nan": 139, "characterist": [139, 199, 201, 204, 224, 234], "digit": 139, "digits10": 139, "max_digits10": 139, "radix": 139, "min_expon": 139, "min_exponent10": 139, "max_expon": 139, "max_exponent10": 139, "finite_min_v": 139, "floatingpoint": 139, "norm_min_v": 139, "finite_max_v": 139, "epsilon_v": 139, "round_error_v": 139, "infinity_v": 139, "quiet_nan_v": 139, "signaling_nan_v": 139, "denorm_min_v": 139, "digits_v": 139, "digits10_v": 139, "max_digits10_v": 139, "radix_v": 139, "min_exponent_v": 139, "min_exponent10_v": 139, "max_exponent_v": 139, "max_exponent10_v": 139, "absenc": 139, "has_infin": 139, "enable_if_t": 139, "legacy_std_numeric_limits_infin": 139, "kokkos_execpolici": [140, 141, 142], "policytyp": [140, 141, 142], "recommended_team_s": [140, 141, 142], "outstand": [143, 173, 199], "exec1": 143, "exec2": 143, "stuff": [143, 202], "touch": [143, 204], "wait": [143, 151, 159, 194, 200, 234], "finish": [143, 144, 173, 187, 200, 204], "asynchron": [144, 145, 173, 199, 204, 231, 237], "calle": 144, "execpolici": [144, 145, 146], "functortyp": [144, 145, 146, 152], "hook": [144, 145, 146, 195], "integertyp": [144, 145, 146], "work_tag": [144, 145, 146, 150, 152], "iN": [144, 145], "captur": [144, 194, 200, 204, 227, 233], "loop1": [144, 145, 146], "greet": 144, "taga": 144, "implicit": [144, 149, 154, 156, 158, 180, 194, 200, 227, 231], "tagb": 144, "thread_rank": 144, "loop2": [144, 145], "deduc": [145, 171, 203, 232, 235], "reducerargu": 145, "reducerargumentnonconst": 145, "fulfil": [145, 192, 193], "handletyp": [145, 146], "reducervaluetyp": 145, "value_count": [145, 200], "length": [145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 177, 178, 180, 191, 196, 204, 232], "overwritten": [145, 146, 151, 204], "neutral": [145, 146], "lsum": [145, 149, 154, 156, 158, 194], "lf": [145, 191], "lmin": [145, 191], "tagmax": 145, "tagmin": 145, "lmax": 145, "team_rank": [145, 151, 194, 196], "post": [146, 220, 233], "returntyp": 146, "return_valu": 146, "postfix_sum": 146, "prefix_sum": 146, "partial_sum": 146, "li": 146, "domin": [147, 197], "elsewher": 147, "parallel_pattern": 147, "hand": [147, 187, 194, 202, 211, 235], "wavi": 147, "beginn": 147, "tile": [148, 204, 228], "interv": [148, 150, 152], "outer": [148, 194, 204, 228], "inner": [148, 194, 204], "ot": 148, "IT": 148, "tt": 148, "policy_1": [148, 150, 152, 194], "policy_2": [148, 150, 152, 194], "t0": 148, "t1": [148, 160, 164], "t2": [148, 160, 164], "teammembertyp": [149, 154, 156, 158], "threadvectorrangeboundariesstruct": 149, "threadsinglestruct": 149, "vectorsinglestruct": 149, "team_barri": [149, 151, 153, 154, 155, 156, 157, 158, 194], "encount": [149, 176, 212, 234], "thread_sum": 149, "team_sum": [149, 154, 156, 158, 194], "a_rowsum": [149, 153, 154, 155, 156, 158], "inherit": [150, 173, 224], "policytrait": 150, "schedule_typ": [150, 152], "iteration_pattern": [150, 152], "launch_bound": [150, 152], "work_spac": 150, "work_begin": 150, "work_end": 150, "discret": [150, 159, 191, 228], "chunk_size_": 150, "init_arg": 150, "chunksiz": 150, "workgroup": 150, "policy_3": [150, 152, 194], "policy_4": [150, 152], "policy_6": 150, "policy_7": 150, "teamtask": 151, "subject": [151, 166, 188, 204], "leagu": [151, 152, 194, 201, 234], "league_s": [151, 152, 194], "workitem": 151, "team_shmem": [151, 194], "team_scratch": [151, 194], "thread_scratch": 151, "lexic": [151, 188], "arriv": [151, 194], "team_broadcast": 151, "source_team_rank": 151, "var": 151, "broadcast": [151, 194], "reducertyp": 151, "team_reduc": 151, "accross": [151, 202], "team_scan": 151, "teampolcii": 151, "policy_typ": 151, "set_scratch_s": [151, 152, 194], "4096": 151, "tid": 151, "lid": 151, "scratch_memory_typ": 151, "vector_length": [152, 208], "auto_t": 152, "lazili": 152, "perteamvalu": 152, "per_team": 152, "perthreadvalu": 152, "per_thread": 152, "closest": 152, "bandwidth": [152, 194, 201, 202, 204], "twice": [152, 204], "overwrit": [152, 189, 200], "scratch_size_max": 152, "maxim": [152, 196], "scratch_siz": 152, "team_size_": 152, "team_scratch_s": 152, "thread_scratch_s": 152, "policy_5": 152, "extent_1": [153, 155, 157], "extent_2": [153, 155, 157, 204], "extent_i": [153, 155, 157], "violat": [153, 155, 157, 194, 200, 204, 235], "num": [153, 155, 157, 195, 224], "leaguerank": [153, 155, 157], "teamsum": [153, 155, 157], "threadsum": [153, 157, 158], "leaguesum": [153, 155], "itype1": [154, 156, 158], "itype2": [154, 156, 158], "teamtyp": 155, "vectorsum": [155, 157], "tsum": 158, "weigth": 159, "weight": 159, "fraction": 159, "is_arithmetic_v": 159, "n_partit": 159, "3rd": 159, "stream": [159, 173, 201, 204, 237], "otherparam": 159, "param": [159, 217], "f1": [159, 234], "f2": [159, 234], "functor1": 159, "functor2": 159, "f3": 159, "functor3": 159, "kokkos_pair": [160, 208], "fulli": [160, 229, 235], "std_pair": 160, "int_float": 160, "converted_std_pair": 160, "converted_kokkos_pair": 160, "to_std_pair": 160, "first_typ": 160, "second_typ": 160, "kokkos_defaulted_funct": [160, 235], "kokkos_forceinline_funct": [160, 192], "wise": [160, 174, 175, 176], "whose": [160, 188, 200, 203, 204, 228, 232], "msg": 161, "kokkos_abort": 161, "ndebug": 163, "endif": [163, 189, 196], "assert": [163, 179, 202], "diagnost": 163, "text": 163, "predefin": [163, 194], "__file__": 163, "__line__": 163, "imag": 164, "real": [164, 227], "imaginari": 164, "im": 164, "convers": [164, 180, 196, 202, 220, 227, 233], "realtyp": 164, "nodiscard": [165, 168], "anounc": 166, "clamp": [167, 208], "boundari": [167, 203], "kokkos_printf": 169, "format": [169, 196, 204, 223], "stdout": 169, "across": [169, 197, 199, 201, 202, 210], "hello": 169, "world": 169, "affect": [169, 189, 204, 216], "regist": [169, 186, 187, 194, 202, 209], "measur": [170, 199], "time1": 170, "time2": 170, "impl_detail": [171, 179], "view_arg": 171, "subviewhold": 171, "deal": [172, 198, 203, 235, 236, 237], "host_mirror": 172, "a_view": 172, "host_mirror_view": 172, "host_mirror_view_spac": 172, "withoutiniti": [172, 177, 178, 181, 204, 208], "implmirrortyp": 172, "viewctorarg": [172, 177, 178], "conduct": [172, 220, 223], "circumst": [173, 220], "viewdest": 173, "viewsrc": [173, 180, 217], "copy_spac": 173, "submit": [173, 194, 224], "cudamemcpyasync": 173, "d_a": [173, 196], "d_a_2": 173, "d_a_5": 173, "h_a": [173, 196, 231], "h_a_2": 173, "d_a_2_5": 173, "deviceview": 173, "temporari": [173, 191, 201, 204, 212], "h_view_tmp": 173, "kokkos_layout": [174, 175, 176], "lai": [174, 175, 176], "convent": [174, 175, 201, 204], "signifi": [174, 175, 176], "is_extent_construct": [174, 175, 176], "full_mesh": 176, "mesh": [176, 226], "mesh_subcompon": 176, "z": [176, 184, 202], "frequent": 176, "noncontigu": [176, 204], "array_layout_max_rank": 176, "s0": 176, "s4": 176, "s5": 176, "s6": 176, "s7": 176, "order_dimens": 176, "itypeord": 176, "itypedimen": 176, "dimen": 176, "3d": [176, 196, 227], "grow": [177, 178, 197], "subext": 178, "191": 179, "subset": [179, 186, 187, 189, 203, 224], "arg_r": 179, "remove_const_t": [179, 203], "s3415": 179, "star": 180, "bracket": 180, "2d": [180, 191, 196, 227], "5d": 180, "Their": [180, 232], "integral_const": [180, 184, 185], "nullari": 180, "encourag": [180, 189, 194, 205, 207, 223], "akin": [180, 228], "_dynam": 180, "yield": [180, 236], "sign": [180, 195, 204], "msvc": [180, 189, 216], "i7": 180, "is_assign": 180, "assign_data": 180, "arg_data": 180, "anywai": [180, 196], "viewdst": [180, 217], "dynamic_rank": 180, "a1": [180, 204, 234], "a2": [180, 234], "a3": [180, 234], "a4": 180, "a5": 180, "a6": 180, "a7": 180, "a8": 180, "a9": 180, "a10": 180, "a11": 180, "a12": 180, "a13": 180, "kokkos_view": 181, "viewstr": 181, "view_wrap": 181, "pointer_to_wrapping_memori": 181, "bypass": 181, "allowpad": 181, "impl_defin": 181, "notabl": 182, "simd_mask": [183, 184, 186, 202], "where_express": 183, "kokkos_simd": [184, 185, 186, 202], "abi": [184, 185, 186, 202], "simd_abi": [184, 185], "fallback": [184, 185], "nativ": [184, 185, 204], "extract": [184, 185, 196, 228], "mask_typ": [184, 185, 202], "abi_typ": [184, 185], "element_aligned_tag": [184, 186, 202], "copy_from": [184, 186, 202], "copy_to": [184, 186, 202], "lh": [184, 185], "mag": 184, "sgn": 184, "native_simd": [184, 186, 202], "simd_typ": [184, 185, 186, 202], "zu": [184, 235], "simd": [185, 186, 210, 215, 237], "iff": 185, "native_simd_mask": [185, 202], "basi": [186, 189, 228], "const_where_express": 186, "scatter_to": 186, "gather_from": 186, "safer": 186, "domain": [186, 206], "chapter": [187, 189, 194, 196, 199, 200, 201, 203, 204, 224], "understand": [187, 189, 196, 198, 199, 203, 204, 235], "resolv": [187, 220], "histogram": 187, "create_histogram": 187, "try": [187, 195, 199, 204, 205, 207, 220], "lost": 187, "race": [187, 196, 199, 226], "situat": [187, 190, 199, 202, 220, 233], "particl": [187, 232, 233], "neighbour": 187, "forc": [187, 189, 194, 199, 201, 202, 233], "compute_forc": 187, "forceloop": 187, "neighbor": [187, 233], "particle_id": 187, "neighbour_id": 187, "some_contribut": 187, "colour": 187, "ii": [187, 196, 227], "iii": 187, "disadvantag": 187, "transfer": [187, 204], "fall": [187, 194, 197, 204, 223, 234], "uninterrupt": 187, "cycl": [187, 189, 220, 221, 224], "hinder": 187, "throughput": [187, 197], "createhistogram": 187, "scheme": 187, "find_indici": 187, "findindici": 187, "div": 187, "lshift": 187, "mod": 187, "mul": 187, "rshift": 187, "sub": [187, 203], "xor": 187, "histogram_atom": 187, "transpar": 187, "clever": 188, "constitut": [188, 194, 224], "tension": 188, "freedom": 188, "frustrat": [188, 202], "pain": 188, "deliber": 188, "accident": [188, 220], "breakag": [188, 220], "unless": [188, 189, 200, 202, 204, 236], "kokkos_": [188, 211], "chanc": 188, "inadvert": 188, "broken": 188, "kokkos_impl_": 188, "notic": [188, 213, 229, 230, 235], "period": [188, 220], "hous": 188, "prime": 188, "incomplet": 188, "newer": [188, 189, 216], "particularli": [188, 228], "problemat": [188, 236], "obei": 188, "interfer": [188, 199], "collison": 188, "prefac": 188, "myproject_": 188, "disambigu": 188, "cap": 188, "usual": [188, 189, 196, 199, 200, 204, 222], "syntact": 188, "revis": [188, 220], "behind": [188, 202, 227, 231], "publish": 188, "drive": [188, 195, 202], "advantag": [188, 202, 231, 233], "workaround": [188, 222], "older": [188, 220], "recompil": 188, "against": [188, 189, 194, 205, 207, 222, 223, 236], "occasion": [188, 216], "overal": [188, 204, 224, 231], "migratori": 188, "evolutionari": 188, "ideal": [188, 220], "wrong": [188, 203, 204], "wast": [188, 204], "continu": [188, 189, 196, 197, 205, 220, 224, 229], "subdirectori": [188, 189], "union": 188, "fashion": [188, 203], "sole": [188, 197], "invok": [188, 199, 204, 211], "explain": [189, 194, 199, 204], "embed": [189, 197], "mix": [189, 196, 199, 204, 205, 216], "advic": 189, "mainli": [189, 204], "directori": [189, 220, 222, 224], "protect": [189, 194, 196, 197, 199, 202, 236], "prevent": [189, 194, 196, 204, 226], "kokkoscore_config": 189, "h": [189, 206, 225, 231], "mention": [189, 224], "compliant": [189, 235], "date": [189, 220, 222], "nightli": [189, 224], "readm": [189, 207, 222, 224], "repositori": [189, 220, 222, 223], "At": [189, 195, 198, 200, 202, 204, 220, 224, 235], "88": [189, 216], "nvc": [189, 216, 223], "rocm": [189, 216, 235], "xl": [189, 216, 222], "fujitsu": [189, 216], "arm": [189, 216], "linkag": [189, 216], "fopenmp": 189, "hwloc": [189, 195, 211, 224], "As": [189, 190, 194, 197, 199, 200, 202, 205, 224, 229, 235], "robust": [189, 205, 220], "strongli": [189, 204, 205], "cmakelist": [189, 205], "txt": [189, 205], "find_packag": [189, 205, 211], "target_link_librari": [189, 205], "mytarget": [189, 205], "processor": [189, 194, 197, 199, 201, 224], "dkokkos_root": [189, 205], "lib64": 189, "especi": [189, 199, 200, 202, 221, 224, 230], "nvcc_wrapper": 189, "dcmake_cxx_compil": [189, 205], "bin": 189, "cmake_cxx_flag": 189, "propag": [189, 205], "illustr": [189, 194, 204, 205, 227], "add_subdirectori": [189, 205], "dir": [189, 211], "include_directori": 189, "kokkos_include_dirs_ret": 189, "arch": [189, 211], "mkdir": [189, 222], "cd": [189, 222], "srcdir": [189, 205], "dcmake_install_prefix": [189, 205], "my_install_fold": 189, "dkokkos_enable_openmp": [189, 205], "parti": [189, 196, 199, 205], "tpl": [189, 205], "altern": [189, 196, 202, 205, 211, 224], "download": [189, 205, 224], "env": [189, 205], "folder": [189, 205], "setup": [189, 205, 224, 231], "sh": [189, 205, 224], "variant": [189, 200, 204, 205, 220], "deactiv": [189, 205], "chosen": [189, 205], "exact": [189, 205], "info": [189, 205, 210, 211], "hash": [189, 204, 205], "human": [189, 205], "readabl": [189, 202, 205], "spec": [189, 205], "dii": 189, "wish": [189, 195], "downstream": [189, 205, 209], "almost": [189, 197, 202, 226], "myproject": 189, "myvers": 189, "idiosyncrasi": 189, "annoi": 189, "dspack_workaround": 189, "spack_workaround": 189, "spack_cxx": 189, "cmake_cxx_compil": 189, "cxx": [189, 227], "technolog": [189, 197, 213], "orient": [189, 233], "softwar": [189, 197, 202, 213, 220, 223], "framework": [189, 199, 206], "solut": [189, 197, 198, 202, 213, 220, 224, 228, 235], "larg": [189, 202, 204, 205, 211, 228, 234], "multiphys": 189, "scientif": [189, 197, 204], "problem": [189, 196, 197, 221, 224, 230], "organ": [189, 209, 211, 220, 221, 233], "stand": 189, "trilinos_enable_kokko": 189, "tpetra": 189, "infer": [189, 203], "trilinos_enable_openmp": 189, "ON": [189, 205, 211, 213], "autogener": 189, "cmake_c_compil": 189, "cmake_fortran_compil": 189, "kokkos_arch_": 189, "archcod": 189, "kokkos_arch_hsw": [189, 211], "haswel": [189, 224], "uvm": [189, 196, 198, 201, 204, 229, 235], "export": 189, "cuda_launch_block": [189, 205], "cuda_managed_force_device_alloc": [189, 205], "aris": [189, 213], "stabil": 189, "symbol": 189, "ln": 189, "kokkos_source_dir_overrid": 189, "kokkoskernel": 189, "kokkoskernels_source_dir_overrid": 189, "script": [189, 205, 222, 223], "ompi_cxx": 189, "openmpi": 189, "digest": 189, "matter": [189, 199], "kokkos_link_depend": 189, "kokkos_cpp_depend": 189, "kokkos_cppflag": 189, "kokkos_cxxflag": 189, "kokkos_ldflag": 189, "kokkos_lib": 189, "tutori": [189, 197, 210], "kokkos_path": [189, 222], "IN": [189, 213], "root": [189, 202, 211], "cuda_path": 189, "toolkit": [189, 222], "kokkos_devic": 189, "kokkos_arch": [189, 202], "knl": [189, 211, 222], "knc": [189, 211], "snb": [189, 211], "hsw": [189, 211], "bdw": [189, 211], "kepler30": [189, 211], "kepler35": [189, 211], "kepler37": [189, 211], "maxwell50": [189, 211], "pascal60": [189, 211], "pascal61": [189, 211], "armv81": [189, 211], "bgq": [189, 211], "kokkos_use_tpl": 189, "experimental_memkind": 189, "kokkos_opt": 189, "aggressive_vector": 189, "kokkos_cuda_opt": [189, 200], "force_uvm": 189, "use_ldg": 189, "rdc": [189, 211], "enable_lambda": [189, 200], "hwloc_path": 189, "ye": 189, "kokkos_cxx_standard": 189, "lib": 189, "cxxflag": [189, 224], "emb": 189, "metaprogram": [189, 204], "shortcom": 189, "prepend": 189, "xcompil": 189, "shell": [189, 205, 224], "analyz": [189, 224], "ccbin": 189, "edit": [189, 199, 218, 220, 222, 224], "nvcc_wrapper_default_compil": 189, "peopl": [189, 198, 235], "modul": [189, 201, 222, 224, 227, 237], "icpc": 189, "pgc": 189, "attach": [189, 195, 219, 224, 234], "degrad": 189, "accommod": 190, "click": [190, 218], "head": [190, 234], "summat": 191, "parabl": 191, "minreduc": 191, "min_reduc": 191, "minloc_typ": 191, "minlocreduc": 191, "lminloc": 191, "reducer_typ": 191, "team_typ": 191, "team_minmaxloc": 191, "row_minmaxloc": 191, "thread_minmaxloc": 191, "gui": [191, 200, 237], "hurt": 191, "team_minmax": 191, "resolut": [192, 220, 221, 233], "the_arrai": 192, "tr": [192, 193], "upd": [192, 193], "ndx": [192, 193], "myarrai": 193, "summyarrai": 193, "references_scalar": 193, "arraysumresult": 193, "exploit": [194, 228], "syntax": [194, 200, 203, 204, 211], "parallel_": [194, 201, 204, 208], "node": [194, 195, 197, 201, 210, 224, 225, 234], "modern": [194, 205], "character": [194, 201], "higher": [194, 197], "orthogon": [194, 199], "heterogen": [194, 195, 201, 224, 232], "cluster": [194, 229], "multicor": [194, 197, 199, 201], "hyper": 194, "instruct": [194, 202, 207], "socket": [194, 205], "network": [194, 224], "llc": [194, 213], "l1": 194, "l2": 194, "sm": 194, "warp": [194, 196, 204], "wave": 194, "collabor": [194, 197], "adapt": [194, 198, 201, 235], "suggest": [194, 224], "tightli": [194, 228, 237], "gather": 194, "choic": [194, 196, 199, 204, 205], "sometim": [194, 204, 205, 221, 222], "flat": [194, 234], "grid": [194, 196, 203], "inter": [194, 199], "guess": 194, "n_workset": 194, "choos": [194, 195, 200, 201, 204], "sometag": 194, "action": [194, 220, 221, 223, 224], "team_memb": [194, 234], "coordin": 194, "everyon": 194, "consum": 194, "indirect": [194, 213], "workset": 194, "lifetim": 194, "recycl": 194, "cell": [194, 228], "team_shmem_s": 194, "double_s": 194, "team_shared_a": 194, "get_shmem": 194, "team_shared_b": 194, "160": 194, "kilobyt": 194, "gigabyt": 194, "mostli": [194, 196], "adjust": 194, "raw": [194, 200, 208], "shared_int_2d": 194, "shared_s": 194, "shmem_siz": 194, "layer": [194, 196, 197, 202, 227], "teamthreadloop": 194, "threadvectorloop": 194, "consciou": 194, "difficult": [194, 202, 228], "claus": [194, 200, 207, 213, 233], "catch": [194, 204, 220, 223], "loop_count": 194, "emploi": [194, 197, 199], "prepar": [194, 222], "stage": 194, "innermost": 194, "compris": [194, 199], "workset_s": 194, "vectoriz": 194, "decor": 194, "pragma": [194, 196, 200], "ivdep": 194, "repetit": [194, 202], "bodi": [194, 204, 216, 234], "shared_arrai": 194, "somefunct": [194, 196], "global_arrai": 194, "my_offset": 194, "inner_lsum": 194, "inner_": 194, "subpackag": [195, 204], "alphabet": [195, 210], "interpret": 195, "primarili": [195, 220, 221], "job": [195, 224], "workstat": 195, "screen": 195, "promis": [195, 199, 200, 201], "conflict": [195, 204], "field": [195, 197, 198, 220, 222, 228, 232, 235], "shut": 195, "down": [195, 198, 230, 235], "exit": 195, "atexit": 195, "mpi_comm_self": 195, "adopt": [196, 201], "facilit": 196, "lift": 196, "inde": [196, 204, 233], "cumbersom": 196, "enter": [196, 197, 204, 234], "__host__": [196, 212], "__cuda_arch__": 196, "blockidx": 196, "threadidx": 196, "blockdim": 196, "omp_set_num_thread": 196, "bookkeep": 196, "ask": [196, 199, 201, 204, 220, 223], "princip": 196, "insur": 196, "app": 196, "placement": [196, 198, 235], "150": 196, "2d_arrai": 196, "200": [196, 204], "scenario": [196, 201, 202], "receiv": [196, 224], "straight": 196, "mykokkosfunct": 196, "host_spac": 196, "t_1d_device_view": 196, "t_2d_device_view": 196, "d_b": 196, "h_b": 196, "t_team": 196, "t_1d_view": 196, "t_3d_view": 196, "had": [196, 233], "whatev": 196, "a_old": 196, "unfortun": [196, 233, 235], "leav": [196, 204, 231], "unrestrict": 196, "push": [196, 216, 222], "bring": [196, 200, 227], "massiv": 196, "penalti": [196, 204], "1000": [196, 200, 204], "uneven": 196, "polymorph": [196, 201, 206], "bla": [196, 204, 237], "matric": [196, 204], "dot": 196, "cubla": 196, "kokkos_have_cuda": 196, "call_cublas_dot": 196, "ptr_on_devic": 196, "extent_0": [196, 204], "cbla": 196, "call_cblas_dot": 196, "hpc": [197, 210, 220, 233], "verg": 197, "era": [197, 206], "angl": 197, "rate": 197, "flop": 197, "poor": 197, "workload": 197, "challeng": 197, "energi": 197, "mid": 197, "1990": [197, 200], "enjoi": 197, "seemingli": 197, "homogen": [197, 199, 224, 232], "decad": 197, "deriv": [197, 198, 213, 235], "commun": [197, 203, 220, 221, 229, 231], "realiz": 197, "review": [197, 220, 223, 224], "broad": 197, "latenc": [197, 199, 204], "medium": 197, "graphic": [197, 199], "gp": 197, "toler": 197, "degre": [197, 201], "divers": 197, "interest": [197, 202, 217, 220], "heritag": 197, "offer": 197, "guidelin": [197, 212], "todai": [197, 199], "cilk": 197, "tbb": 197, "linux": 197, "contemporari": [197, 199], "openacc": 197, "opencl": 197, "Such": [197, 227, 228], "varieti": [197, 224, 232], "pose": 197, "reminisc": 197, "becam": 197, "invest": [197, 204], "seek": 197, "isol": 197, "fluctuat": 197, "coverag": 197, "supplementari": 197, "gradual": 197, "odditi": [198, 235], "face": [198, 203, 235], "subtl": [198, 235], "classwithvirtualfunct": [198, 235], "somebas": [198, 235], "virtualfunct": [198, 235], "hostclassinst": [198, 235], "deviceclassinst": [198, 235], "cudamalloc": [198, 235], "cudamemcpi": [198, 235], "cudamemcpyhosttodevic": [198, 235], "devicekernel": [198, 235], "somecudapolici": [198, 235], "glanc": [198, 235], "fine": [198, 204, 235], "crash": [198, 235], "nomin": [198, 235], "vpointer": [198, 235], "vtabl": [198, 235], "among": [198, 224, 235], "okai": [198, 235], "rememb": [198, 200, 204, 224, 235], "amongst": [198, 235], "hidden": [198, 204, 235], "derefer": [198, 235], "credit": [198, 235], "pablo": [198, 235], "aria": [198, 223, 235], "intro": [198, 235, 237], "faithfulli": [198, 235], "merrili": [198, 235], "pseudocod": [198, 235], "hostinst": [198, 235], "deviceinst": [198, 235], "deivc": [198, 235], "techniqu": [198, 235], "ugli": [198, 235], "repo": [198, 210, 235], "setafield": [198, 235], "somehostvalu": [198, 235], "naiv": [198, 202, 235], "wit": [198, 235], "said": [198, 203, 235], "solv": 198, "educ": [198, 235], "slack": [198, 209, 210, 220, 221, 223, 235], "aspect": [199, 201, 202, 224], "programm": [199, 200, 202, 204, 229], "distinct": 199, "exascal": [199, 206], "consult": [199, 204], "ang": 199, "elect": 199, "show": [199, 200, 201, 204, 222], "die": [199, 201], "acceler": [199, 200, 224, 231, 233], "reachabl": 199, "et": [199, 220], "al": [199, 206], "proxi": 199, "sandia": [199, 213, 224], "nation": [199, 213], "laboratori": 199, "lawrenc": 199, "berkelei": 199, "consider": 199, "finit": [199, 226, 228], "packag": [199, 206, 220, 222, 223, 228], "slower": [199, 204], "dram": 199, "volatil": [199, 201, 204, 208], "routin": [199, 227, 228], "collis": 199, "gain": 199, "topic": [199, 200, 220], "coher": [199, 204], "hennessi": 199, "paterson": 199, "weak": 199, "therebi": 199, "fifth": [199, 203], "quantit": 199, "morgan": 199, "kaufmann": 199, "tempt": 199, "author": [199, 206], "background": 199, "scientist": 199, "stick": 199, "proof": 199, "forbid": [199, 204], "implic": 199, "filesystem": 199, "overlap": [199, 225], "reproduc": [199, 213, 221], "earli": [199, 223], "awai": [199, 202, 203], "wonder": 199, "great": 199, "markup": 200, "unnecessari": [200, 204], "harmless": 200, "anonym": 200, "suppli": 200, "outermost": 200, "turn": [200, 202, 204], "surround": 200, "stack": [200, 204, 220, 223], "secondli": 200, "circumvent": 200, "harder": 200, "interoper": [200, 202, 215, 227, 237], "omp": [200, 224], "prior": [200, 204, 205, 213, 220, 221, 227, 231], "faster": 200, "trip": 200, "fewer": 200, "encapsul": [200, 201, 203], "semir": 200, "maxplu": 200, "x_": 200, "inf": 200, "columnsum": 200, "Be": 200, "convinc": 200, "numrow": 200, "numcol": 200, "cs": 200, "sequenti": [200, 204, 228], "blelloch": 200, "book": 200, "hi": [200, 221], "phd": 200, "dissert": [200, 202], "val_i": 200, "mit": 200, "press": 200, "necess": 200, "unus": [200, 233], "differenti": 200, "bartag": 200, "rabtag": 200, "foobar": [200, 217], "formul": 201, "vari": [201, 204], "figur": 201, "hybrid": 201, "pim": 201, "principl": [201, 204], "remot": [201, 210, 224, 237], "send": 201, "undetermin": 201, "prescript": 201, "primit": 201, "spin": 201, "dead": 201, "persist": 201, "diverg": 201, "inspir": 201, "vocabulari": [201, 224], "comfort": 201, "reflect": [201, 204], "rewrit": 201, "unoptim": 201, "optimis": 201, "histori": [202, 224], "struggl": 202, "blog": 202, "insight": 202, "drawback": [202, 233], "quot": 202, "stanford": 202, "tim": 202, "folei": 202, "heart": 202, "black": 202, "box": 202, "matthia": 202, "kretz": 202, "deliv": 202, "vendor": [202, 220, 237], "fairli": 202, "pictur": 202, "clearli": 202, "odd": 202, "quirk": 202, "tag_typ": 202, "sx": 202, "sy": 202, "sz": 202, "sr": 202, "squar": 202, "emit": [202, 203], "4x": 202, "speedup": [202, 231], "skip": [202, 204], "troublesom": 202, "pitfal": [202, 204], "evenli": 202, "divis": 202, "cleaner": 202, "wide": [202, 204, 220, 224], "reach": [202, 204], "throughout": 202, "slight": 202, "quadratic_formula": 202, "x1": 202, "x2": 202, "discrimin": 202, "sqrt_discrimin": 202, "classic": [202, 216], "familiar": [202, 204, 220], "quadrat": 202, "formula": 202, "liter": 202, "mimic": 202, "roadmap": [202, 220], "regard": 202, "very_expensive_funct": 202, "statement": 202, "spend": [202, 204], "lot": [202, 204, 222], "pick": [203, 204, 220], "notat": 203, "vice": 203, "versa": 203, "cross": [203, 223], "plane": 203, "cube": 203, "n_0": 203, "n_1": 203, "n_": 203, "a_0": 203, "a_1": 203, "a_": 203, "a_j": 203, "n_j": 203, "handi": 203, "matlab": 203, "python": [203, 210, 222, 224, 237], "colon": 203, "fourth": 203, "elabor": 203, "a_sub": 203, "won": [203, 204], "cheaper": 203, "keyword": [203, 205, 208, 210], "easiest": [203, 205], "dens": [203, 210, 237], "inconveni": 203, "my_view_typ": 203, "my_subview_typ": 203, "my_subview_type_deduc": 203, "fast": [204, 222], "intim": 204, "factor": 204, "coder": 204, "tie": 204, "hard": 204, "evolv": 204, "reliev": 204, "burden": [204, 220], "ty": 204, "expert": 204, "easi": [204, 205], "ellips": 204, "asterisk": 204, "typecast": 204, "a_ptr": 204, "malloc": 204, "a0": 204, "arbitrarili": 204, "unprotect": 204, "badli": 204, "therefor": [204, 236], "advis": [204, 213], "deconstructor": 204, "disallow": 204, "indirectli": 204, "novic": 204, "THE": [204, 213, 222], "FOR": [204, 213], "IS": [204, 213], "NO": [204, 213], "rag": 204, "reorgan": 204, "v_outer": 204, "assigne": 204, "wors": 204, "yourself": [204, 222], "destroi": [204, 217], "rid": 204, "inner_view_typ": 204, "outer_view_typ": 204, "numout": 204, "numinn": 204, "to_str": 204, "device_out": 204, "dispos": 204, "nonown": 204, "a_nonconst": 204, "nonconst": 204, "a_const": 204, "readonlyfunct": 204, "skew": 204, "parenthes": 204, "enclos": 204, "comma": 204, "delimit": 204, "a_ijk": 204, "rest": 204, "slow": 204, "leftmost": 204, "exempt": 204, "unwind": 204, "incorrect": 204, "100x50x4": 204, "50": 204, "200x50x4": 204, "300x60x4": 204, "300": 204, "java": 204, "s_1": 204, "s_2": 204, "s_3": 204, "dim1": 204, "extent_n": 204, "conserv": 204, "benefici": 204, "heavi": 204, "stringent": 204, "overflow": 204, "lapack": [204, 237], "idea": 204, "lda": 204, "morton": 204, "thereof": 204, "viewmap": 204, "renam": 204, "coalesc": 204, "callbla": 204, "callsomeblasfunct": 204, "invalid_argu": 204, "100000": 204, "biject": 204, "accessspac": 204, "viewallocatewithoutiniti": 204, "affin": 204, "memcopi": 204, "discourag": [204, 212], "circumv": 204, "defeat": 204, "polymorp": 204, "legaci": [204, 215], "legacyfunct": 204, "x_raw": 204, "len": 204, "myfunct": 204, "somelibraryfunct": 204, "reference_is_lvalu": 204, "sometrait": 204, "someothertrait": 204, "ca": 204, "a_atom": 204, "irregularli": 204, "a_ra": 204, "shorter": 204, "fault": 204, "prolifer": 204, "csr": 204, "spmatvec": 204, "ind": 204, "x_ra": 204, "y_i": 204, "accordingli": 204, "x_view": 204, "functionthattakeskokkosview": 204, "safest": 204, "tree": [205, 222, 234], "exceedingli": 205, "devil": 205, "kokkos_install_prefix": 205, "compiler_used_to_build_kokko": 205, "cmake_polici": 205, "cmp0074": 205, "cmake_build_instal": 205, "cmake_build_in_tre": 205, "kokkos_install_fold": 205, "craype_link_typ": 205, "miss": 205, "benchmark": [205, 224], "bytes_and_flop": 205, "nvlink": [205, 229], "displai": 205, "dev": [205, 222, 224], "articl": 206, "9485033": 206, "trott": [206, 213], "christian": [206, 213, 220], "lebrun": 206, "grandi\u00e9": 206, "damien": [206, 220], "arndt": 206, "daniel": 206, "ciesko": 206, "jan": 206, "dang": 206, "vinh": 206, "ellingwood": 206, "nathan": 206, "gayatri": 206, "rahulkumar": 206, "harvei": 206, "evan": 206, "hollman": 206, "daisi": 206, "ibanez": 206, "dan": 206, "liber": 206, "nevin": 206, "madsen": 206, "jonathan": 206, "mile": 206, "jeff": 206, "poliakoff": 206, "david": 206, "powel": 206, "ami": 206, "rajamanickam": 206, "sivasankaran": 206, "simberg": 206, "mikael": 206, "sunderland": 206, "turcksin": 206, "bruno": 206, "wilk": 206, "jeremiah": 206, "journal": 206, "ieee": 206, "transact": 206, "titl": 206, "2022": [206, 216], "volum": 206, "805": 206, "817": 206, "doi": 206, "1109": 206, "tpd": 206, "2021": [206, 216], "3097283": 206, "ecosystem": [206, 210], "9502936": 206, "berger": 206, "vergiat": 206, "luc": 206, "grandi": 206, "nader": 206, "gligor": 206, "milo": 206, "shipman": 206, "galen": 206, "womeldorff": 206, "geoff": 206, "scienc": [206, 223], "comprehens": [206, 216, 222], "mcse": 206, "3098509": 206, "carteredwards20143202": 206, "manycor": 206, "3202": 206, "3216": 206, "issn": 206, "0743": 206, "7315": 206, "1016": 206, "jpdc": 206, "07": [206, 222], "003": 206, "url": 206, "sciencedirect": 206, "pii": 206, "s0743731514001257": 206, "carter": 206, "edward": 206, "pull": [207, 220, 222, 224, 234], "licens": [207, 209, 210], "bsd": [207, 213], "commerci": 207, "req": 207, "activeexecutionmemoryspac": 208, "host_execution_spac": 208, "host_memory_spac": 208, "kokkos_restrict_execution_to_": 208, "data_spac": 208, "hip_safe_cal": 208, "create_inst": 208, "partition_mast": 208, "num_partit": 208, "partition_s": 208, "kokkos_openmp_inst": 208, "access_error": 208, "kokkos_hip_spac": 208, "hip_internal_safe_call_deprec": 208, "kokkos_hip_error": 208, "kokkos_openmp": 208, "openmpintern": 208, "validate_partit": 208, "profilingsect": 208, "getnam": 208, "kokkos_profiling_profilesect": 208, "getsectionid": 208, "kokkos_hip_parallel_team": 208, "kokkos_sycl_parallel_team": 208, "kokkos_openmptarget_exec": 208, "kokkos_cuda_parallel_team": 208, "kokkos_cudaspac": 208, "number_of_alloc": 208, "kokkos_hpx": 208, "masterlock": 208, "kokkos_attribute_nodiscard": 208, "amathfunct": 208, "is_reducer_typ": 208, "index_list_typ": 208, "always_use_kokkos_sort": 208, "finalize_al": 208, "withoutinitializing_t": 208, "wi": 208, "kokkos_thread_loc": 208, "thread_loc": 208, "is_view": 208, "cuda_internal_safe_call_deprec": 208, "cuda_safe_cal": 208, "trail": 208, "kokkosviewlabel": 208, "kokkos_macro": 208, "kokkos_atom": 208, "kokkos_arrai": 208, "kokkos_half": 208, "kokkos_tim": 208, "kokkos_sort": 208, "kokkos_bit": 208, "kokkos_errorreport": 208, "channel": [209, 220, 221, 223], "kokkosteam": [209, 210, 221], "email": 209, "whitelist": 209, "contact": [209, 213], "cmake": [209, 210, 216, 230], "dcmake_cxx_standard": 209, "batch": [210, 237], "pykokko": 210, "checkpoint": 210, "mdspan": 210, "p0009": 210, "stdbla": 210, "p1673": 210, "instal": [210, 211, 224, 229], "video": 210, "lectur": 210, "slide": 210, "faq": 210, "cite": 210, "sensit": 211, "recal": 211, "dkeyword_nam": 211, "kokkos_enable_compiler_warn": 211, "relax": 211, "kokkos_enable_cuda_ldg_intrins": 211, "um": 211, "kokkos_enable_deprecated_cod": 211, "kokkos_enable_exampl": 211, "kokkos_enable_large_mem_test": 211, "kokkos_enable_test": 211, "kokkos_cuda_dir": 211, "cuda_root": 211, "kokkos_hwloc_dir": 211, "hwloc_root": 211, "kokkos_memkind_dir": 211, "memkind_root": 211, "kokkos_libdl_dir": 211, "libdl_root": 211, "kokkos_librt_dir": 211, "librt_root": 211, "hpx_dir": 211, "hpx_root": 211, "config": [211, 222, 224], "kokkos_arch_n": 211, "kokkos_arch_a64fx": 211, "sve": 211, "kokkos_arch_amd_gfx906": 211, "kokkos_arch_amd_gfx908": 211, "kokkos_arch_amd_gfx90a": 211, "kokkos_arch_amd_gfx1030": 211, "kokkos_arch_amd_gfx1100": 211, "7900xt": 211, "gfx1100": 211, "kokkos_arch_amdavx": 211, "amdavx": 211, "armv80": 211, "armv8_thunderx": 211, "armv8_thunderx2": 211, "kokkos_arch_bdw": 211, "kokkos_arch_bgq": 211, "kepler32": 211, "kokkos_arch_knl": 211, "maxwell52": 211, "maxwell53": 211, "kokkos_arch_skx": 211, "skx": 211, "kokkos_arch_snb": 211, "kokkos_arch_spr": 211, "sapphir": 211, "turing75": 211, "volta70": 211, "volta72": 211, "kokkos_arch_wsm": 211, "wsm": 211, "kokkos_arch_zen": 211, "kokkos_arch_zen2": 211, "kokkos_arch_zen3": 211, "wherea": 211, "ahead": [211, 220], "amd_gfx1100": 211, "amd_gfx906": 211, "amd_gfx908": 211, "mi210": 211, "mi250": 211, "mi250x": 211, "amd_gfx90a": 211, "amd_gfx1030": 211, "hsa_xnack": 212, "explan": 212, "compatibilti": 212, "do_math": 212, "sqrt5": 212, "ambigu": 212, "highli": 212, "z1": 212, "z2": 212, "z3": 212, "copyright": 213, "2020": 213, "ntess": 213, "contract": [213, 231], "de": [213, 220], "na0003525": 213, "govern": 213, "retain": 213, "redistribut": 213, "permit": 213, "materi": 213, "corpor": 213, "contributor": 213, "endors": 213, "permiss": [213, 222, 224], "BY": 213, "AS": 213, "warranti": 213, "BUT": 213, "OF": 213, "merchant": 213, "shall": [213, 221], "liabl": 213, "incident": 213, "exemplari": 213, "consequenti": 213, "damag": 213, "procur": [213, 220], "substitut": 213, "servic": 213, "loss": 213, "profit": 213, "busi": 213, "interrupt": 213, "theori": [213, 231], "liabil": 213, "strict": 213, "tort": 213, "neglig": 213, "IF": 213, "SUCH": 213, "crtrott": 213, "gov": 213, "introduct": [215, 224, 237], "unawar": 216, "appleclang": 216, "intelllvm": 216, "2023": 216, "pthread": [216, 222, 224], "wall": [216, 222], "wunus": 216, "wshadow": [216, 222], "pedant": [216, 222], "werror": [216, 222], "wsign": [216, 222], "wtype": [216, 222], "wignor": 216, "wempti": 216, "wclobber": 216, "wuniniti": 216, "master": [216, 222, 224], "rigor": 216, "some_var": 217, "frobrnic": 217, "foobat": 217, "frobnic": 217, "pencil": 218, "button": 218, "feedback": [219, 220, 223], "workflow": [219, 223, 226], "ramp": 220, "overarch": 220, "outdat": 220, "anymor": 220, "facto": 220, "month": [220, 222], "phase": [220, 223], "defect": 220, "upcom": 220, "seamless": 220, "anticip": 220, "soon": 220, "deploy": [220, 223], "engag": 220, "fund": [220, 223], "agenc": [220, 223], "monitor": 220, "hpe": 220, "kit": 220, "research": 220, "hackathon": 220, "chanel": 220, "bi": 220, "annual": 220, "usergroup": [220, 221], "influenc": 220, "sustain": 220, "mainten": [220, 224], "proven": 220, "audienc": 220, "committe": 220, "greatest": 220, "matur": 220, "train": 220, "bump": 220, "leadership": 220, "prioriti": [220, 221], "thrust": 220, "person": [220, 224], "refin": 220, "unassign": 220, "aren": 220, "weekli": [220, 221], "reassign": 220, "obsolet": 220, "changelog": [220, 222], "avenu": 220, "week": [220, 223], "mondai": 220, "urgent": 220, "triag": 220, "preliminari": 220, "agenda": 220, "kept": 220, "nucleu": 220, "ongo": 220, "ephemer": 220, "dai": [220, 222], "unpaid": 220, "longer": 220, "wherev": 220, "nda": 220, "held": 220, "wednesdai": 220, "2pm": 220, "pm": 220, "mt": 220, "00": [220, 222], "utc": 220, "zoom": 220, "six": 220, "candid": [220, 223], "cherri": 220, "nearing": 220, "delai": 220, "creation": 220, "ship": 220, "partner": [220, 221], "announc": 220, "invit": [220, 223], "onto": 220, "regress": 220, "unaddress": 220, "approxim": 220, "overview": [220, 228], "enhanc": [221, 222, 233], "priorit": 221, "mileston": 221, "slot": 221, "15feb18": 222, "x86": [222, 224], "043": 222, "196": 222, "128": 222, "pgi": 222, "103": 222, "174": 222, "cygwin": 222, "64bit": 222, "test_all_sandia": [222, 224], "trilino": [222, 223, 224, 228], "atdm": 222, "lammp": [222, 223], "sparc": 222, "master_histori": 222, "snapshot": [222, 224], "clone": [222, 224], "git": 222, "nohup": 222, "tail": 222, "watch": 222, "white": [222, 224], "shepard": [222, 224], "shepard_jenkins_run_script_serial_intel": [222, 224], "pristin": [222, 224], "rerun": 222, "token": [222, 237], "oldtag": 222, "newtag": 222, "04": 222, "rubi": 222, "gitthub_changelog_gener": 222, "indevelop": 222, "cat": 222, "md": 222, "cleanup": 222, "commit": [222, 224], "owner": [222, 224, 229], "clariti": [222, 233], "noteworthi": 222, "checkout": [222, 224], "majornumb": 222, "minornumb": 222, "weekssinceminornumberupd": 222, "sha1": 222, "append": [222, 234], "03": 222, "27": 222, "da314444": 222, "29ccb58a": 222, "amend": 222, "mm": [222, 227], "dd": 222, "yyyi": 222, "sem": [222, 224], "checkin": [222, 224], "disk": [222, 231], "ram": 222, "ceerws1113": 222, "trilinos_path": 222, "pwd": 222, "untrack": 222, "py": [222, 224], "backtrack": 222, "server": [223, 224], "approv": [223, 224], "jenkin": [223, 224], "travi": 223, "institut": 223, "durat": 223, "pipelin": 223, "verif": 223, "offici": [223, 224], "judg": 223, "thorough": 223, "wider": 223, "poc": 223, "reproduct": 223, "arborx": 223, "million": 223, "nnsa": 223, "offic": 223, "snl": 223, "empir": 223, "sparta": 223, "sierra": 223, "ornl": 223, "cabana": [223, 225], "anl": 223, "petsc": 223, "publicli": 223, "advertis": 223, "role": 224, "databas": 224, "fork": 224, "privileg": 224, "865": 224, "begun": 224, "conclus": 224, "haap": 224, "secondari": 224, "outag": 224, "scroll": 224, "ohpc": 224, "srn": 224, "apollo": 224, "bowman": 224, "elli": 224, "hansen": 224, "e5": 224, "2698": 224, "kokkos_dev": 224, "ride": 224, "p8": 224, "tuleta": 224, "fireston": 224, "garrison": 224, "tesla": 224, "k40": 224, "k80": 224, "p100": 224, "36": 224, "sullivan": 224, "mac": 224, "bed": 224, "submiss": 224, "connect": 224, "webcar": 224, "intranet": 224, "staff": 224, "leader": 224, "assist": 224, "csri": 224, "csu": 224, "administ": 224, "daili": 224, "regimen": 224, "suit": 224, "dashboard": 224, "identif": 224, "flow": 224, "terminolog": 224, "joint": 224, "simul": [224, 229, 232, 233], "qthread": 224, "briefli": 224, "generate_makefil": 224, "bash": 224, "makefil": 224, "spot": 224, "jenkins_test_driv": 224, "testing_script": 224, "sha": 224, "accomplish": [224, 228], "prepare_trilinos_repo": 224, "shepard_jenkins_run_script_pthread_intel": 224, "workspac": 224, "white_run_jenkins_script_cuda": 224, "white_run_jenkins_script_omp": 224, "test_kokkos_master_develop_promot": 224, "checkintest": 224, "flavor": 224, "speed": 224, "central": 224, "equat": 224, "viz": 224, "accuraci": 224, "replica": 224, "nearli": 224, "hundr": 224, "unit_test": 224, "performance_test": 224, "perf_test": 224, "scrutini": 224, "inadequaci": 224, "defici": 224, "halo": 225, "averag": 225, "interop": [225, 237], "window": 225, "demonstr": [226, 227, 228, 231], "quantiti": 226, "ratio": 226, "ultim": 226, "count_adjacent_el": 226, "elements_to_nod": 226, "number_of_nod": 226, "elements_per_nod": 226, "scatter_elements_per_nod": 226, "create_scatter_view": 226, "access_elements_per_nod": 226, "node_of_el": 226, "sum_to_nod": 226, "element_valu": 226, "node_valu": 226, "scatter_node_valu": 226, "access_node_valu": 226, "average_to_nod": 226, "flcl": 227, "daxpi": 227, "ndarrai": 227, "flcl_ndarray_t": 227, "dope": 227, "flatten": [227, 228], "_flcl_nd_array_t": 227, "flcl_ndarray_max_rank": 227, "f90": 227, "nd_array_t": 227, "c_size_t": 227, "nd_array_max_rank": 227, "c_ptr": 227, "procedur": 227, "to_nd_arrai": 227, "to_nd_array_l_1d": 227, "to_nd_array_i32_1d": 227, "to_nd_array_i64_1d": 227, "to_nd_array_r32_1d": 227, "to_nd_array_r64_1d": 227, "to_nd_array_l_2d": 227, "to_nd_array_i32_2d": 227, "to_nd_array_i64_2d": 227, "to_nd_array_r32_2d": 227, "to_nd_array_r64_2d": 227, "to_nd_array_l_3d": 227, "to_nd_array_i32_3d": 227, "to_nd_array_i64_3d": 227, "to_nd_array_r32_3d": 227, "to_nd_array_r64_3d": 227, "view_from_ndarrai": 227, "axpi": 227, "flcl_mod": 227, "c_doubl": 227, "allocat": 227, "f_y": 227, "c_y": 227, "alpha": 227, "subroutin": 227, "iso_c_bind": 227, "inout": 227, "f_axpi": 227, "nd_arrai": 227, "earlier": 227, "c_axpi": 227, "nd_array_i": 227, "nd_array_x": 227, "tensor": 228, "pde": 228, "inputdata": 228, "inputfield": 228, "outputfield": 228, "tripl": 228, "paral": 228, "for_all_cel": 228, "merit": 228, "notion": 228, "natur": 228, "mdr_for_all_cel": 228, "wiki": 228, "intrepid2": 228, "intrepid2_arraytoolsdef": 228, "intrepid": 228, "complementari": 229, "scalabl": 229, "walk": 229, "source_rank": 229, "destination_rank": 229, "number_of_doubl": 229, "my_rank": 229, "mpi_comm": 229, "comm": 229, "mpi_comm_world": 229, "mpi_comm_rank": 229, "mpi_send": 229, "mpi_doubl": 229, "mpi_recv": 229, "quit": 229, "pcie": 229, "unstructur": 229, "sent": 229, "redudantli": 229, "filter": 229, "subset_scann": 229, "keys_in": 229, "desired_key_in": 229, "subset_indices_in": 229, "m_kei": 229, "m_desired_kei": 229, "m_subset_indic": 229, "final_pass": 229, "is_in": 229, "find_subset": 229, "desired_kei": 229, "subset_s": 229, "local_sum": 229, "subset_indic": 229, "transmit": 229, "pack_messag": 229, "all_element_data": 229, "kokkos_enable_deprecated_code_4": 230, "tediou": 230, "appar": 230, "acess": 230, "spell": [230, 235], "myview": 230, "c_style_memori": 230, "c_style_alloc": 230, "concur": 231, "stagger": 231, "littl": 231, "hostexecspac": 231, "deviceexecspac": 231, "device_range_polici": 231, "host_range_polici": 231, "viewvectortyp": 231, "viewmatrixtyp": 231, "xval": 231, "init_src_view": 231, "p_x": 231, "p_a": 231, "init_a": 231, "init_x": 231, "h_x": 231, "h_y": 231, "nrepeat": 231, "synch": 231, "yax": 231, "temp2": 231, "ini_src_view": 231, "occupi": 231, "attent": 231, "paid": 231, "opportun": [231, 233], "range_polici": 231, "v_r": 231, "v_r1": 231, "h_v": 231, "get_initial_st": 231, "get_rhs_func": 231, "serialize_st": 231, "view_r": 231, "exhibit": 232, "cabana_soa": 232, "vectorlength": 232, "membertyp": 232, "cabana_aosoa": 232, "memorymanag": 232, "carri": 232, "evolut": 233, "particleinteract": 233, "particleposit": 233, "po": 233, "particleforc": 233, "particleneighbor": 233, "pairforc": 233, "parallelis": 233, "rectifi": 233, "qualiti": 233, "plai": 233, "tagphase1": 233, "tagphase2": 233, "compute1": 233, "compute2": 233, "prescrib": 234, "predetermin": 234, "surrog": 234, "roll": 234, "b1": 234, "b2": 234, "b3": 234, "fib": 234, "wait_list": 234, "a_f1": 234, "b_f1": 234, "b_f2": 234, "a_f2": 234, "tm": 234, "vertex": 234, "subteam": 234, "visit": 234, "vertic": 234, "exce": 234, "threshold": 234, "unvisit": 234, "frontier": 234, "st": 234, "edg": 234, "greatli": 234, "neccessari": 235, "myloop": 235, "kokkos_class_lambda": 235, "implementationptr": 235, "make_shar": 235, "oh": 235, "strictli": 235, "nominmax": 236, "uninterpret": 236, "redefin": 236, "dnominmax": 236, "multidim": 237, "safeti": 237, "pga": 237, "analysi": 237, "linear": 237, "algebra": 237, "solver": 237}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [180, 5, 1, "_CPPv410HostMirror", "HostMirror"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [176, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [132, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [132, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [132, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [132, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [132, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [180, 5, 1, "_CPPv412array_layout", "array_layout"], [180, 5, 1, "_CPPv415const_data_type", "const_data_type"], [180, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [180, 5, 1, "_CPPv410const_type", "const_type"], [180, 5, 1, "_CPPv416const_value_type", "const_value_type"], [180, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [180, 5, 1, "_CPPv411device_type", "device_type"], [180, 5, 1, "_CPPv49dimension", "dimension"], [180, 5, 1, "_CPPv415execution_space", "execution_space"], [180, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [180, 5, 1, "_CPPv412memory_space", "memory_space"], [180, 5, 1, "_CPPv413memory_traits", "memory_traits"], [180, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [180, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [180, 5, 1, "_CPPv414non_const_type", "non_const_type"], [180, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [180, 5, 1, "_CPPv412pointer_type", "pointer_type"], [180, 5, 1, "_CPPv414reference_type", "reference_type"], [180, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [180, 5, 1, "_CPPv49size_type", "size_type"], [180, 5, 1, "_CPPv410specialize", "specialize"], [180, 5, 1, "_CPPv410value_type", "value_type"], [108, 6, 1, "_CPPv4I00E4BAnd", "BAnd"], [108, 7, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [108, 7, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [108, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [108, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [108, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [108, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [108, 7, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [108, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [108, 7, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [108, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [108, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [108, 10, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [108, 7, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [108, 10, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [108, 10, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [108, 7, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [109, 6, 1, "_CPPv4I00E3BOr", "BOr"], [109, 7, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [109, 7, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [109, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [109, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [109, 9, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [109, 9, 1, "_CPPv4I00E3BOr", "BOr::Space"], [109, 7, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [109, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [109, 7, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [109, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [109, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [109, 10, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [109, 7, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [109, 10, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [109, 10, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [109, 7, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [217, 6, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [217, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [217, 8, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [217, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [217, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [217, 10, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [217, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [217, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [217, 8, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [217, 10, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [217, 10, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [217, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [217, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 6, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 7, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 7, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 10, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 7, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 7, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 10, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 10, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 10, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 10, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 10, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 10, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 10, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 10, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 10, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 10, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 10, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 10, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 7, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 6, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 10, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 10, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 10, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 10, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 10, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 10, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 10, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 10, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 8, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 10, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 10, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 10, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 10, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 8, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 10, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 10, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 10, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 10, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 10, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 6, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 10, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 7, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 10, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 7, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 10, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 7, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 7, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 10, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 10, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 10, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 8, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 7, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 7, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 7, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 10, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 7, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [130, 6, 1, "_CPPv413InitArguments", "InitArguments"], [130, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [130, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [130, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [130, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [130, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [130, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [130, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [131, 6, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [131, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [131, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [131, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [131, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [131, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [131, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [131, 8, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [173, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [173, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [173, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [173, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [173, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [173, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [173, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [173, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [173, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [173, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [173, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [173, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [173, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [173, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [173, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [173, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [173, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [173, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [173, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [173, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [173, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [173, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [173, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [173, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [173, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [110, 6, 1, "_CPPv4I00E4LAnd", "LAnd"], [110, 7, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [110, 7, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [110, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [110, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [110, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [110, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [110, 7, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [110, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [110, 7, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [110, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [110, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [110, 10, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [110, 7, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [110, 10, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [110, 10, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [110, 7, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [111, 6, 1, "_CPPv4I00E3LOr", "LOr"], [111, 7, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [111, 7, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [111, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [111, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [111, 9, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [111, 9, 1, "_CPPv4I00E3LOr", "LOr::Space"], [111, 7, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [111, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [111, 7, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [111, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [111, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [111, 10, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [111, 7, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [111, 10, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [111, 10, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [111, 7, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [174, 6, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [174, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [174, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [174, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [174, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [174, 10, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [174, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [174, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [174, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [174, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [175, 6, 1, "_CPPv411LayoutRight", "LayoutRight"], [175, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [175, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [175, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [175, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [175, 10, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [175, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [175, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [175, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [175, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [176, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [176, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [176, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [176, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [148, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [148, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [148, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [112, 6, 1, "_CPPv4I00E3Max", "Max"], [112, 7, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [112, 7, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [112, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [112, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [112, 9, 1, "_CPPv4I00E3Max", "Max::Scalar"], [112, 9, 1, "_CPPv4I00E3Max", "Max::Space"], [112, 7, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [112, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [112, 7, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [112, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [112, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [112, 10, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [112, 7, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [112, 10, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [112, 10, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [112, 7, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [113, 6, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [113, 7, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [113, 7, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [113, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [113, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [113, 7, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [113, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [113, 7, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [113, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [113, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [113, 10, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [113, 7, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [113, 10, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [113, 10, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [113, 7, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [114, 6, 1, "_CPPv4I00E3Min", "Min"], [114, 7, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [114, 7, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [114, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [114, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [114, 9, 1, "_CPPv4I00E3Min", "Min::Scalar"], [114, 9, 1, "_CPPv4I00E3Min", "Min::Space"], [114, 7, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [114, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [114, 7, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [114, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [114, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [114, 10, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [114, 7, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [114, 10, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [114, 10, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [114, 7, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [115, 6, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [115, 7, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [115, 7, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [115, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [115, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [115, 7, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [115, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [115, 7, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [115, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [115, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [115, 10, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [115, 7, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [115, 10, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [115, 10, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [115, 7, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [116, 6, 1, "_CPPv4I00E6MinMax", "MinMax"], [116, 7, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [116, 7, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [116, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [116, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [116, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [116, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [116, 7, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [116, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [116, 7, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [116, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [116, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [116, 10, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [116, 7, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [116, 10, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [116, 10, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [116, 7, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [117, 6, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [117, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [117, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [117, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [117, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [117, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [117, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [117, 10, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [117, 7, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [117, 10, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [117, 10, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [118, 6, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [118, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [118, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [118, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [118, 8, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [119, 6, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [119, 9, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [119, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [119, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [119, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [119, 8, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [149, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [149, 8, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [149, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [149, 8, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [120, 6, 1, "_CPPv4I00E4Prod", "Prod"], [120, 7, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [120, 7, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [120, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [120, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [120, 9, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [120, 9, 1, "_CPPv4I00E4Prod", "Prod::Space"], [120, 7, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [120, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [120, 7, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [120, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [120, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [120, 10, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [120, 7, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [120, 10, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [120, 10, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [120, 7, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [150, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [150, 11, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 11, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [121, 7, 1, "_CPPv47ReducerR10value_type", "Reducer"], [121, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [121, 8, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [121, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 6, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 8, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 10, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 10, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 10, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 10, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 10, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 10, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 8, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [123, 6, 1, "_CPPv4I00E3Sum", "Sum"], [123, 9, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [123, 9, 1, "_CPPv4I00E3Sum", "Sum::Space"], [123, 7, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [123, 7, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [123, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [123, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [123, 7, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [123, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [123, 7, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [123, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [123, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [123, 10, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [123, 7, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [123, 10, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [123, 10, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [123, 7, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [151, 6, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [151, 10, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [151, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 10, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [151, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [151, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [151, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [151, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [152, 6, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [152, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [152, 10, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [152, 10, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [152, 10, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [152, 10, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [152, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [152, 10, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [152, 10, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [152, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [152, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [152, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [152, 8, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [152, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [152, 8, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [152, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [152, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [152, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [152, 10, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [153, 6, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [153, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [153, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [153, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [149, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [149, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [155, 6, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [155, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [155, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [155, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [157, 6, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [157, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [157, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [157, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [149, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [149, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 6, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 8, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 7, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 7, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 7, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 7, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 8, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 7, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 7, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 6, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 6, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [180, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [180, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [180, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [180, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [180, 11, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [180, 11, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [180, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [180, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [180, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [180, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [180, 11, 1, "_CPPv44ViewRR4View", "View"], [180, 11, 1, "_CPPv44Viewv", "View"], [180, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [180, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [180, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [180, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [180, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [180, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [180, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [180, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [180, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [180, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [180, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [180, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [180, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [180, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [180, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [180, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [180, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [180, 8, 1, "_CPPv44ViewRR4View", "View::rhs"], [180, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [180, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [180, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [180, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [176, 10, 1, "_CPPv412array_layout", "array_layout"], [180, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [180, 8, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [104, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [104, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [104, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [105, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [104, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [104, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [104, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [105, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [104, 11, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [104, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [104, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [104, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [99, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange"], [99, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::T"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::comparison_value"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::new_value"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::ptr_to_value"], [100, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong"], [100, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::T"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::comparison_value"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::new_value"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::ptr_to_value"], [104, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [104, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [104, 8, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [105, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [101, 11, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange"], [101, 9, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::T"], [101, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::new_value"], [101, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::ptr_to_value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [102, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [102, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [102, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [102, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [102, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [102, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [104, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [104, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [104, 8, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [103, 11, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load"], [103, 9, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::T"], [103, 8, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::ptr_to_value"], [105, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [105, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [104, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [104, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [104, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [105, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [104, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [104, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [104, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [105, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [104, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [104, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [104, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [104, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [105, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [105, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [105, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [105, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [105, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [106, 11, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [106, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [106, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [106, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [104, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [104, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [104, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [105, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 7, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 7, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 7, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [164, 6, 1, "_CPPv4I0E7complex", "complex"], [164, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [164, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [164, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [164, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [164, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [164, 7, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [164, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [164, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [164, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [164, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [164, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [164, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [164, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [164, 8, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [164, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [164, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [164, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [164, 7, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [164, 7, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [164, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [164, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [164, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [164, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [164, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [164, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [164, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [164, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [164, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [164, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [164, 8, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [164, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [164, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [164, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [164, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [164, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [164, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [164, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [164, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [164, 8, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [164, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [164, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [164, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [164, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [164, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [164, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [164, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [164, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [164, 8, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [164, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [164, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [164, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [164, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [164, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [164, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [164, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [164, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [164, 8, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [164, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [164, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [164, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [164, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [164, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [164, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [164, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [164, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [164, 8, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [164, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [164, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [164, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [164, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [164, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [164, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [164, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [164, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [164, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [164, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [164, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [164, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [164, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [164, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [164, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [164, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [164, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [164, 8, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [164, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [164, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [164, 7, 1, "_CPPv4N7complex4realEv", "complex::real"], [164, 7, 1, "_CPPv4NK7complex4realEv", "complex::real"], [164, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [164, 10, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [172, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [172, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [172, 11, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror"], [172, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [172, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [172, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [172, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [172, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewCtorArgs"], [172, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [172, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [172, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewType"], [172, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [172, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [172, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::arg_prop"], [172, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [172, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [172, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [172, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [172, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::v"], [172, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [172, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [172, 11, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view"], [172, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [172, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [172, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [172, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [172, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewCtorArgs"], [172, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [172, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [172, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewType"], [172, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [172, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [172, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::arg_prop"], [172, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [172, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [172, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [172, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::src"], [172, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [172, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [172, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [172, 11, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy"], [172, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [172, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewCtorArgs"], [172, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [172, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewType"], [172, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::arg_prop"], [172, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [172, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::src"], [180, 11, 1, "_CPPv4NK4dataEv", "data"], [176, 12, 1, "_CPPv49dimension", "dimension"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 7, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [180, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [180, 8, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [180, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [180, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [180, 8, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [180, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [217, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [217, 8, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [121, 7, 1, "_CPPv4NK4initER10value_type", "init"], [121, 8, 1, "_CPPv4NK4initER10value_type", "init::val"], [180, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [180, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [180, 8, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [176, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [121, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [121, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [126, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [126, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [126, 8, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [127, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [127, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [128, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [128, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [128, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [128, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [180, 11, 1, "_CPPv4NK5labelEv", "label"], [180, 11, 1, "_CPPv4NK6layoutEv", "layout"], [180, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [180, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [180, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [180, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [180, 8, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [176, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [176, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [180, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [217, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [180, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [180, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [217, 9, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [176, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [176, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [176, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [176, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [159, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [159, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [159, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [159, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [159, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [159, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [159, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [159, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weigths"], [180, 11, 1, "_CPPv44rankv", "rank"], [180, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [121, 7, 1, "_CPPv4NK9referenceEv", "reference"], [180, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [180, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [180, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [180, 8, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [180, 11, 1, "_CPPv4NK4sizeEv", "size"], [180, 11, 1, "_CPPv4NK4spanEv", "span"], [180, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [180, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [180, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [176, 12, 1, "_CPPv46stride", "stride"], [180, 8, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [180, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [180, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [180, 8, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [180, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [180, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [180, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [180, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [180, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [180, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [180, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [180, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [179, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [179, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [179, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [179, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [179, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [180, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 6, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 10, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 10, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 10, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 8, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 10, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 7, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 7, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 10, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 8, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 10, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 8, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 8, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 10, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [121, 7, 1, "_CPPv4NK4viewEv", "view"], [181, 11, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc"], [181, 9, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::Args"], [181, 8, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::args"], [181, 11, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap"], [181, 9, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::Args"], [181, 8, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::args"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:class", "7": "cppkokkos:kokkosinlinefunction", "8": "cppkokkos:functionParam", "9": "cppkokkos:templateParam", "10": "cppkokkos:type", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "class", "C++ class"], "7": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "8": ["cppkokkos", "functionParam", "C++ function parameter"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "type", "C++ type"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 183, 188, 220], "algorithm": [0, 3, 72, 208, 234], "random": [1, 204], "number": [1, 226], "rand": 1, "gener": [1, 32, 88, 129, 189, 223], "synopsi": [1, 2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 149, 150, 154, 156, 158, 160, 170], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 121, 130, 131, 132, 133, 134, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 169, 170, 171, 173, 176, 177, 178, 179, 180, 184, 185, 186, 192, 193, 195, 199, 200, 202, 217, 225, 231, 234], "sort": [2, 10], "nest": [2, 84, 85, 194], "polici": [2, 85, 90, 94, 148, 150, 194, 201], "team": [2, 90, 188, 194, 201], "thread": [2, 194, 196, 199], "level": [2, 85], "addit": [2, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "inform": [2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 189], "sampl": 2, "output": 2, "std": [3, 196], "iter": [4, 81], "kokko": [4, 86, 87, 94, 129, 135, 149, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 188, 189, 196, 198, 199, 204, 205, 206, 208, 210, 216, 219, 220, 222, 223, 224, 227, 228, 234, 236], "experiment": [4, 129, 135, 166, 184, 185, 186], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 132, 136, 137, 138, 161, 163, 169], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 134, 143, 144, 145, 146, 148, 150, 173, 180, 184, 185, 186, 232], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 121, 133, 134, 143, 144, 145, 146, 159, 171, 173, 216, 220, 221, 230], "distanc": 4, "return": [4, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": [5, 167], "maximum": [5, 167], "modifi": [6, 7], "sequenc": [6, 7, 234], "non": [7, 74, 129, 135, 196, 217, 232], "numer": [8, 89, 139], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 99, 100, 101, 102, 103, 104, 105, 106, 126, 127, 128, 132, 149, 151, 152, 153, 154, 155, 156, 157, 158, 164, 171, 172, 174, 175, 176, 177, 178, 179, 181, 217], "adjacent_find": 12, "all_of": 13, "any_of": 14, "copi": [15, 129, 143, 173, 204], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 204], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 230], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 107, 121, 191, 192, 193, 200], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 204, 208], "core": [72, 83, 208], "bitset": 74, "class": [74, 121, 140, 141, 142, 148, 150, 160, 170, 180, 208], "interfac": [74, 78, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 133, 134, 143, 144, 145, 146, 148, 153, 155, 157, 159, 171, 173, 180, 184, 185, 186, 217], "constbitset": 74, "member": [74, 121, 124, 129, 135, 140, 141, 142, 148, 150, 160, 170, 180, 208, 217, 232], "function": [74, 121, 125, 129, 135, 138, 140, 141, 142, 147, 160, 180, 184, 186, 187, 198, 200, 204, 208, 212, 217, 232, 235], "dualview": 75, "usag": [75, 76, 80, 82, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 132, 140, 141, 142, 145, 146, 148, 149, 150, 152, 154, 156, 159, 164, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 228, 231, 234], "dynrankview": 76, "assign": [76, 124, 160, 180, 186, 202], "rule": [76, 180, 204], "dynamicview": 77, "offsetview": 78, "construct": [78, 129, 204], "scatterview": [79, 187, 226], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 129, 143, 189, 200, 204, 205, 225, 227, 228, 230, 234], "default": [81, 129, 204], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 194, 196, 202], "detect": [84, 129], "idiom": [84, 204], "an": [84, 87, 147, 200, 202, 221], "express": 84, "typedef": [84, 121, 129, 135, 140, 141, 142, 160, 180, 184, 185], "execut": [85, 88, 90, 129, 148, 150, 189, 194, 199, 200, 201, 204, 231], "top": [85, 234], "common": [85, 138, 148, 150], "argument": [85, 148, 150, 195], "all": [85, 129, 148, 150, 162], "initi": [86, 134, 195, 204, 228], "final": [86, 133, 195], "scopeguard": [86, 132], "concept": 87, "introduct": [87, 197], "approach": 87, "overview": 87, "The": [87, 198, 202, 210, 230, 235], "executionspac": 87, "implement": [87, 228], "deviceexecutionspac": 87, "some": [87, 173], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 147], "teammemb": 87, "functor": [87, 94, 200, 234], "A": [87, 203, 222], "deleg": 87, "macro": [88, 188, 208], "version": [88, 216], "set": 88, "space": [88, 92, 93, 129, 135, 189, 199, 200, 201, 204], "backend": [88, 211, 224], "option": [88, 150, 211], "c": [88, 125, 188, 196, 203, 210, 220, 233], "standard": [88, 204, 210], "third": [88, 211], "parti": [88, 211], "librari": [88, 196, 202, 210, 211], "architectur": [88, 211], "parallel": [90, 94, 194, 200, 228], "dispatch": [90, 200], "pattern": [90, 94, 201, 231, 234], "tag": [90, 200, 233], "calcul": 90, "stl": 91, "compat": [91, 188, 220], "issu": [91, 205, 212, 220, 221], "access": [92, 180, 184, 185, 204], "task": [94, 234], "Will": 94, "work": [94, 198, 210, 231, 234, 235], "my": [94, 198, 235], "problem": [94, 198, 204, 228, 235], "basic": [94, 194, 202], "predecessor": 94, "schedul": 94, "wait": 94, "aggreg": 94, "prioriti": 94, "trait": [95, 139, 187, 201, 204], "is_array_layout": 95, "is_execution_polici": 95, "is_memory_spac": 95, "is_memory_trait": 95, "is_reduc": 95, "is_spac": 95, "util": 96, "view": [97, 173, 180, 182, 196, 203, 204], "relat": [97, 210], "atom": [98, 187, 204], "atomic_compare_exchang": 99, "atomic_compare_exchange_strong": 100, "atomic_exchang": 101, "atomic_fetch_": 102, "op": [102, 104, 105], "atomic_load": 103, "atomic_": [104, 105], "_fetch": 105, "atomic_stor": 106, "built": [107, 121, 191, 192], "band": 108, "bor": 109, "land": 110, "lor": 111, "max": [112, 184], "maxloc": 113, "min": [114, 184], "minloc": 115, "minmax": 116, "minmaxloc": 117, "minmaxlocscalar": 118, "minmaxscalar": 119, "prod": 120, "reducerconcept": 121, "public": [121, 124, 140, 141, 142, 148, 150, 160, 170, 180, 208], "constructor": [121, 129, 135, 140, 141, 142, 148, 150, 160, 170, 180, 184, 185], "In": [121, 191, 192], "reduct": [122, 185, 190, 200, 202], "scalar": [122, 192], "type": [122, 182, 192, 202, 203, 204, 208], "sum": [123, 226], "vallocscalar": 124, "variabl": 124, "oper": [124, 167, 184, 185, 187, 202, 227, 228, 231, 233], "style": 125, "memori": [125, 135, 187, 194, 196, 199, 201, 204], "manag": [125, 196, 204, 224], "kokkos_fre": 126, "kokkos_malloc": 127, "kokkos_realloc": 128, "cuda": [129, 189, 196, 205, 229], "hip": [129, 212], "sycl": 129, "hpx": 129, "openmp": [129, 196], "openmptarget": 129, "serial": [129, 228, 231], "executionspaceconcept": 129, "alias": [129, 208], "base": 129, "configur": [129, 189, 205], "defaultexecutionspac": 129, "defaulthostexecutionspac": 129, "veri": 129, "simplest": 129, "Not": 129, "Being": 129, "more": 129, "facil": [129, 135], "initargu": 130, "see": [130, 131, 132, 134, 137, 138, 163, 167], "also": [130, 131, 132, 134, 137, 138, 163, 167], "initializationset": 131, "semant": [133, 134, 143, 144, 145, 146, 159, 173], "cudaspac": 135, "cudahostpinnedspac": 135, "cudauvmspac": 135, "hipspac": 135, "hiphostpinnedspac": 135, "hipmanagedspac": 135, "sycldeviceusmspac": 135, "syclhostusmspac": 135, "syclsharedusmspac": 135, "hostspac": 135, "sharedspac": [135, 230], "sharedhostpinnedspac": 135, "memoryspaceconcept": 135, "bit": 136, "manipul": 136, "mathemat": [137, 212], "constant": [137, 212], "math": 138, "parallelfortag": 140, "parallelreducetag": 141, "parallelscantag": 142, "fenc": 143, "time": 143, "kernel": [143, 194, 231], "asynchron": 143, "deep": [143, 204], "parallel_for": 144, "parallel_reduc": 145, "parallel_scan": 146, "what": [147, 204, 235], "mdrangepolici": [148, 228], "specif": 148, "nestedpolici": 149, "list": [149, 189], "perteam": 149, "perthread": 149, "teamthreadrang": [149, 154], "teamthreadmdrang": [149, 153], "teamvectorrang": [149, 156], "teamvectormdrang": [149, 155], "threadvectorrang": [149, 158], "threadvectormdrang": [149, 157], "rangepolici": [150, 228], "initarg": 150, "teamhandleconcept": 151, "teampolici": 152, "partition_spac": 159, "pair": 160, "convers": [160, 204], "abort": 161, "kokkos_assert": 163, "complex": 164, "device_id": 165, "num_thread": 168, "printf": 169, "timer": 170, "subview": [171, 179, 203], "create_mirror": 172, "_view": 172, "deep_copi": 173, "thing": 173, "you": [173, 204], "can": [173, 204], "cannot": 173, "do": [173, 204, 235], "how": [173, 198, 203, 204, 235], "get": [173, 204], "layout": [173, 180, 201, 204], "incompat": 173, "layoutleft": 174, "layoutright": 175, "layoutstrid": 176, "realloc": 177, "resiz": [178, 204], "enum": 180, "data": [180, 196, 204], "dimens": [180, 203, 204], "stride": [180, 204], "other": [180, 188, 204, 208], "nonmemb": 180, "view_alloc": 181, "like": 182, "simd": [183, 184, 202], "templat": [184, 185, 186, 218, 232, 233], "width": [184, 185], "load": [184, 186], "store": [184, 186], "method": [184, 185, 186], "valu": [184, 185, 226], "arithmet": 184, "comparison": [184, 185], "cmath": 184, "global": [184, 185], "simd_mask": 185, "boolean": 185, "where_express": 186, "where": 186, "gather": [186, 220], "scatter": 186, "10": 187, "1": [187, 189, 191, 194, 195, 196, 197, 199, 200, 201, 203, 204, 231], "write": 187, "conflict": 187, "Their": 187, "resolut": 187, "With": 187, "2": [187, 189, 192, 194, 195, 196, 199, 200, 201, 203, 204, 231], "free": [187, 208], "3": [187, 189, 193, 194, 195, 196, 199, 200, 201, 203, 204, 208, 216, 234], "4": [187, 189, 194, 195, 196, 200, 201, 204, 216], "12": [188, 196], "backward": 188, "futur": [188, 199], "user": 188, "defin": 188, "abi": 188, "deprec": [188, 208], "header": [188, 195, 208], "right": 188, "reserv": 188, "miscellan": 188, "proof": 188, "compil": [189, 216, 222, 224], "cmake": [189, 205, 211], "build": [189, 205, 216], "system": [189, 216], "instal": [189, 205], "packag": [189, 205], "tree": 189, "spack": [189, 205], "develop": [189, 205, 220], "keyword": [189, 211], "trilino": 189, "branch": 189, "gnu": 189, "makefil": [189, 205], "5": [189, 195, 200, 201, 204], "6": [189, 201, 204], "restrict": [189, 194], "9": [190, 191, 192, 193], "custom": [190, 192, 193, 223], "8": 194, "hierarch": 194, "motiv": [194, 199], "creat": [194, 204], "instanc": [194, 199], "scratch": 194, "pad": 194, "loop": [194, 200], "barrier": 194, "singl": [194, 229], "executor": 194, "0": 195, "includ": 195, "command": 195, "line": 195, "struct": 195, "code": [195, 196, 198, 202, 230, 231, 235], "13": 196, "interoper": 196, "legaci": 196, "structur": [196, 227, 232], "raw": [196, 204, 205], "alloc": [196, 227], "through": [196, 234], "extern": 196, "fundament": 196, "own": 196, "call": 196, "14": 198, "virtual": [198, 235], "v": [198, 235], "tabl": [198, 235], "pointer": [198, 204, 235], "eri": [198, 235], "annoi": [198, 235], "gpu": [198, 235], "Then": [198, 235], "why": [198, 204, 235], "doesn": [198, 235], "t": [198, 204, 235], "fix": [198, 235], "thi": [198, 204, 220, 235], "complic": [198, 235], "question": [198, 210, 235], "follow": [198, 235], "up": [198, 235], "machin": 199, "model": [199, 201, 210, 220], "abstract": 199, "figur": 199, "conceptu": 199, "high": 199, "perform": [199, 202, 210, 224, 231], "comput": [199, 224, 226, 231], "node": [199, 226], "program": [199, 201, 210, 215, 220, 227], "safeti": 199, "7": [200, 204, 208], "specifi": [200, 204], "bodi": 200, "lambda": 200, "should": 200, "i": [200, 204, 235], "join": 200, "init": 200, "arrai": [200, 204, 227, 228, 232], "result": 200, "scan": 200, "name": [200, 205], "rang": 201, "15": 202, "background": 202, "idea": 202, "deal": [202, 233], "remaind": 202, "condit": [202, 234], "ternari": 202, "11": 203, "slice": 203, "take": 203, "deduct": 203, "degener": 203, "obtain": 203, "multidimension": [204, 227], "need": [204, 235], "mai": 204, "make": 204, "probabl": 204, "don": 204, "want": 204, "s": 204, "realli": [204, 235], "const": 204, "entri": 204, "index": 204, "refer": [204, 228], "lifetim": 204, "depend": 204, "explicitli": 204, "placement": 204, "hostmirror": 204, "unmanag": 204, "special": 204, "philosophi": 205, "known": [205, 212], "knownissu": 205, "crai": 205, "fortran": [205, 227], "inlin": 205, "vs": 205, "uvm": 205, "cite": 206, "contribut": 207, "document": [207, 218], "x": [208, 216], "namespac": 208, "updat": 208, "faq": 209, "portabl": [210, 235], "websit": 210, "content": 210, "devic": [211, 231, 235], "enabl": 211, "tpl": 211, "amd": 211, "licens": 213, "guid": 215, "coolerview": 217, "plan": [219, 220], "test": [219, 223, 224], "project": 220, "stabil": 220, "activ": 220, "support": [220, 222], "platform": [220, 224], "capabl": 220, "iso": 220, "releas": [220, 223], "priorit": 220, "coordin": 220, "process": [220, 223], "feedback": 221, "report": 221, "attach": 222, "identif": 222, "b": 222, "file": 222, "promot": 222, "txt": 222, "chang": 223, "pull": 223, "request": 223, "nightli": 223, "integr": 223, "intern": 223, "prefer": 223, "commun": 223, "workflow": 224, "compon": 224, "softwar": 224, "git": 224, "repositori": 224, "batch": 224, "queue": 224, "account": 224, "script": 224, "unit": 224, "case": [225, 227, 228, 234, 235], "averag": 226, "element": 226, "adjac": 226, "full": 226, "interop": 227, "multi": 228, "dimension": 228, "formul": 228, "mpi": 229, "halo": 229, "exchang": 229, "send": 229, "messag": 229, "awar": 229, "separ": 229, "out": 229, "identifi": 229, "subset": 229, "indic": 229, "extract": 229, "from": 230, "kokkos_enable_cuda_uvm": 230, "altern": 230, "transit": 230, "overlap": 231, "host": 231, "actor": [231, 234], "subject": [231, 234], "assumpt": [231, 234], "constraint": [231, 234], "precondit": [231, 234], "while": 231, "cabana": 232, "soa": 232, "aosoa": 232, "pre": 233, "17": 233, "post": 234, "recurs": 234, "fibonacci": 234, "flow": 234, "n": 234, "divid": 234, "graph": 234, "down": 234, "bf": 234, "But": 235, "side": 235, "doe": 235, "nvcc": 235, "solv": 235, "window": 236, "h": 236, "video": 237, "lectur": 237, "slide": 237}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})